[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Application of Econometric Models with RStudio",
    "section": "",
    "text": "Welcome\nThis is the code version of Application of Econometric Models with RStudio, a book released in 2023 by IPB Press. The book was written by Muhammad Firdaus, Tony Irawan, Fahmi Salam Ahmad, Hermanto Siregar, Deri Siswara, and Rodi Jakariya. You can order the full version here, which includes more detailed explanations.\nThis book aims to help students and researchers apply econometric models in analysis using RStudio software. It begins with an introduction to the use of R programming language and RStudio as an IDE. The book covers topics on theory and application of OLS models, including testing Gauss-Markov conditions. Additionally, it presents the application of time-series models such as ARMA, GARCH, VAR, VECM, ARDL, SVAR., static and dynamic panel data analysis using RStudio’s instruments that accommodate heteroscedasticity and autocorrelation assumptions. Finally, there is a discussion of spatial model applications for analysis with spatial or regional elements. In this latest publication update includes three additional chapters: spillover analysis on time series data; DCC-GARCH; Non-linear ARDL. Updates will be made frequently.\nThis book may contain bugs/errors which readers can report at derisiswarads@gmail.com",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "01-Bab1.html",
    "href": "01-Bab1.html",
    "title": "1  Basics of R",
    "section": "",
    "text": "1.1 Introduction\nA &lt;- 2\nA # Print A\n\n[1] 2\nA = 2\nA\n\n[1] 2\nB &lt;- \"Halo Semua\"\nB\n\n[1] \"Halo Semua\"\na&lt;-10 # Space is not sensitive but lettercase is sensitive.\nA\n\n[1] 2\na\n\n[1] 10\n# Arithmetic operation\nx &lt;- 5\ny &lt;- 3\nx + y     \n\n[1] 8\n\nx - y     \n\n[1] 2\n\nx * y     \n\n[1] 15\n\nx / y     \n\n[1] 1.666667\n# Logic operation\na &lt;- TRUE\nb &lt;- FALSE\na & b     \n\n[1] FALSE\n\na | b     \n\n[1] TRUE\n\n!a        \n\n[1] FALSE\nx &lt;- 5\ny &lt;- 3\nx &gt; y     \n\n[1] TRUE\n\nx &lt; y     \n\n[1] FALSE\n\nx == y    \n\n[1] FALSE\n\nx &gt;= y    \n\n[1] TRUE\n\nx &lt;= y    \n\n[1] FALSE",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Basics of R</span>"
    ]
  },
  {
    "objectID": "01-Bab1.html#types-of-objects-in-r",
    "href": "01-Bab1.html#types-of-objects-in-r",
    "title": "1  Basics of R",
    "section": "1.2 Types of Objects in R",
    "text": "1.2 Types of Objects in R\n\n1.2.1 Vector\n\na1 &lt;- c(2,4,7,3) # Numeric vector\na2 &lt;- c(\"one\",\"two\",\"three\") # Character vector\na3 &lt;- c(TRUE,TRUE,TRUE,FALSE,TRUE,FALSE) # Logical vector\n\n\na1\n\n[1] 2 4 7 3\n\na3[4]        \n\n[1] FALSE\n\na2[c(1,3)]   \n\n[1] \"one\"   \"three\"\n\na1[-1]       \n\n[1] 4 7 3\n\na1[2:4]      \n\n[1] 4 7 3\n\n\n\na &lt;- c(1, 2, 3)\nb &lt;- c(4, 5, 6)\nc &lt;- c(a, b)      \nc                 \n\n[1] 1 2 3 4 5 6\n\nc[1:3]            \n\n[1] 1 2 3\n\nd &lt;- a + b        \nd                 \n\n[1] 5 7 9\n\n\n\na4 &lt;- 1:12 \nb1 &lt;- matrix(a4,3,4)\nb2 &lt;- matrix(a4,3,4,byrow=TRUE) \nb3 &lt;- matrix(1:14,4,4)\n\nWarning in matrix(1:14, 4, 4): data length [14] is not a sub-multiple or\nmultiple of the number of rows [4]\n\n\n\nb1\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n\n\n\nb2\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n\n\n\nb3\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    5    9   13\n[2,]    2    6   10   14\n[3,]    3    7   11    1\n[4,]    4    8   12    2\n\n\n\nb2[2,3]   \n\n[1] 7\n\n\n\nb2[1:2,]  \n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n\n\n\nb2[c(1,3),-2] \n\n     [,1] [,2] [,3]\n[1,]    1    3    4\n[2,]    9   11   12\n\n\n\ndim(b2) \n\n[1] 3 4\n\n\n\nm1 &lt;- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, ncol = 3)\nm2 &lt;- matrix(c(7, 8, 9, 10, 11, 12), nrow = 2, ncol = 3)\n\n\nm3 &lt;- m1 + m2\nm3\n\n     [,1] [,2] [,3]\n[1,]    8   12   16\n[2,]   10   14   18\n\n\n\nm4 &lt;- m1 %*% t(m2)\nm4\n\n     [,1] [,2]\n[1,]   89   98\n[2,]  116  128\n\n\n\n\n1.2.2 Factor\n\na5 &lt;- c(\"A\",\"B\",\"AB\",\"O\")\nd1 &lt;- factor(a5) \nlevels(d1)\n\n[1] \"A\"  \"AB\" \"B\"  \"O\" \n\n\n\nlevels(d1) &lt;- c(\"Darah A\",\"Darah AB\",\"Darah B\",\"Darah O\")\nd1\n\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\n\n\na6 &lt;- c(\"SMA\",\"SD\",\"SMP\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\")\nd5 &lt;- factor(a6, levels=c(\"SD\",\"SMP\",\"SMA\")) # Skala pengukuran ordinal  \nlevels(d5) \n\n[1] \"SD\"  \"SMP\" \"SMA\"\n\n\n\nd5\n\n [1] SMA SD  SMP SMA SMA SMA SMA SMA SMA SMA SMA SMA SMA\nLevels: SD SMP SMA\n\n\n\n\n1.2.3 List\n\na1; b2; d1\n\n[1] 2 4 7 3\n\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n\n\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\n\n\ne1 &lt;- list(a1,b2,d1)\ne2 &lt;- list(vect=a1,mat=b2,fac=d1) \ne1\n\n[[1]]\n[1] 2 4 7 3\n\n[[2]]\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n\n[[3]]\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\ne2\n\n$vect\n[1] 2 4 7 3\n\n$mat\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n\n$fac\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\n\n\ne1[[1]][2] \n\n[1] 4\n\ne2$fac \n\n[1] Darah A  Darah B  Darah AB Darah O \nLevels: Darah A Darah AB Darah B Darah O\n\ne2[2] \n\n$mat\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n\nnames(e2)\n\n[1] \"vect\" \"mat\"  \"fac\" \n\n\n\n\n1.2.4 Data Frame\n\nAngka &lt;- 11:15\nHuruf &lt;- factor(LETTERS[6:10])\nf1 &lt;- data.frame(Angka,Huruf)\nf1\n\n  Angka Huruf\n1    11     F\n2    12     G\n3    13     H\n4    14     I\n5    15     J\n\n\n\nf1[1,2] \n\n[1] F\nLevels: F G H I J\n\nf1$Angka \n\n[1] 11 12 13 14 15\n\nf1[,\"Huruf\"] \n\n[1] F G H I J\nLevels: F G H I J\n\ncolnames(f1) \n\n[1] \"Angka\" \"Huruf\"\n\n\n\nstr(f1)\n\n'data.frame':   5 obs. of  2 variables:\n $ Angka: int  11 12 13 14 15\n $ Huruf: Factor w/ 5 levels \"F\",\"G\",\"H\",\"I\",..: 1 2 3 4 5",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Basics of R</span>"
    ]
  },
  {
    "objectID": "01-Bab1.html#data-frame-management",
    "href": "01-Bab1.html#data-frame-management",
    "title": "1  Basics of R",
    "section": "1.3 Data Frame Management",
    "text": "1.3 Data Frame Management\n\ndata(iris) \n\n\nhead(iris) \n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\ntail(iris) \n\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n145          6.7         3.3          5.7         2.5 virginica\n146          6.7         3.0          5.2         2.3 virginica\n147          6.3         2.5          5.0         1.9 virginica\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n\n\n\nstr(iris)\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\n\n\n1.3.1 R Package\n\n# install.packages(\"readxl\") - code to install R package\nlibrary(readxl)\n\n\n#install.packages(\"dplyr\")\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\n1.3.2 Data Management With dplyr\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\nirisbaru  &lt;- mutate(iris, sepal2 = Sepal.Length + Sepal.Width)\n\n\nhead(irisbaru)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species sepal2\n1          5.1         3.5          1.4         0.2  setosa    8.6\n2          4.9         3.0          1.4         0.2  setosa    7.9\n3          4.7         3.2          1.3         0.2  setosa    7.9\n4          4.6         3.1          1.5         0.2  setosa    7.7\n5          5.0         3.6          1.4         0.2  setosa    8.6\n6          5.4         3.9          1.7         0.4  setosa    9.3\n\n\n\nirisetosa &lt;- filter(iris, Species==\"setosa\")\nhead(irisetosa)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\n\n\nlevels(iris$Species)\n\n[1] \"setosa\"     \"versicolor\" \"virginica\" \n\n\n\nirisversicolor &lt;- filter(iris, Species==\"setosa\"& Petal.Length==1.3)\nhead(irisversicolor)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          4.7         3.2          1.3         0.2  setosa\n2          5.4         3.9          1.3         0.4  setosa\n3          5.5         3.5          1.3         0.2  setosa\n4          4.4         3.0          1.3         0.2  setosa\n5          5.0         3.5          1.3         0.3  setosa\n6          4.5         2.3          1.3         0.3  setosa\n\n\n\niris3 &lt;- select(iris, Sepal.Length, Species)\nhead(iris3)\n\n  Sepal.Length Species\n1          5.1  setosa\n2          4.9  setosa\n3          4.7  setosa\n4          4.6  setosa\n5          5.0  setosa\n6          5.4  setosa\n\n\n\niris4 &lt;- arrange(iris, Petal.Width)\nhead(iris4)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          4.9         3.1          1.5         0.1  setosa\n2          4.8         3.0          1.4         0.1  setosa\n3          4.3         3.0          1.1         0.1  setosa\n4          5.2         4.1          1.5         0.1  setosa\n5          4.9         3.6          1.4         0.1  setosa\n6          5.1         3.5          1.4         0.2  setosa\n\n\n\niris4 &lt;- arrange(iris, Species, desc(Petal.Width))\nhead(iris4)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.0         3.5          1.6         0.6  setosa\n2          5.1         3.3          1.7         0.5  setosa\n3          5.4         3.9          1.7         0.4  setosa\n4          5.7         4.4          1.5         0.4  setosa\n5          5.4         3.9          1.3         0.4  setosa\n6          5.1         3.7          1.5         0.4  setosa\n\n\n\nnames(iris4)[1] &lt;- \"length\" \nhead(iris4)\n\n  length Sepal.Width Petal.Length Petal.Width Species\n1    5.0         3.5          1.6         0.6  setosa\n2    5.1         3.3          1.7         0.5  setosa\n3    5.4         3.9          1.7         0.4  setosa\n4    5.7         4.4          1.5         0.4  setosa\n5    5.4         3.9          1.3         0.4  setosa\n6    5.1         3.7          1.5         0.4  setosa\n\n\n\nhead(iris4[,c(-1,-3)])\n\n  Sepal.Width Petal.Width Species\n1         3.5         0.6  setosa\n2         3.3         0.5  setosa\n3         3.9         0.4  setosa\n4         4.4         0.4  setosa\n5         3.9         0.4  setosa\n6         3.7         0.4  setosa\n\n\n\niris %&gt;% group_by(Species) %&gt;% summarise(rata2_Sepal.Width = mean(Sepal.Width))\n\n# A tibble: 3 × 2\n  Species    rata2_Sepal.Width\n  &lt;fct&gt;                  &lt;dbl&gt;\n1 setosa                  3.43\n2 versicolor              2.77\n3 virginica               2.97",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Basics of R</span>"
    ]
  },
  {
    "objectID": "01-Bab1.html#visualization",
    "href": "01-Bab1.html#visualization",
    "title": "1  Basics of R",
    "section": "1.4 Visualization",
    "text": "1.4 Visualization\n\n1.4.1 Histogram\n\nhist(iris$Sepal.Length)\n\n\n\n\n\n\n\n\n\n\n1.4.2 Box Plot\n\nboxplot(iris$Sepal.Length)\n\n\n\n\n\n\n\n\n\n\n1.4.3 Barplot\n\ntable(iris$Species)\n\n\n    setosa versicolor  virginica \n        50         50         50 \n\n\n\nbarplot(table(iris$Species))\n\n\n\n\n\n\n\n\n\n\n1.4.4 Pie Chart\n\npie(table(iris$Species))\n\n\n\n\n\n\n\n\n\n\n1.4.5 Scatter Plot\n\nplot(iris$Sepal.Length,iris$Sepal.Width)\n\n\n\n\n\n\n\n\n\nplot(iris$Sepal.Length, iris$Sepal.Width, main = \"Sepal Length vs. Sepal Width\", \n     xlab = \"Sepal Length\", ylab = \"Sepal Width\", col = \"red\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Basics of R</span>"
    ]
  },
  {
    "objectID": "02-Bab2.html",
    "href": "02-Bab2.html",
    "title": "2  Basic Linear Regression",
    "section": "",
    "text": "2.1 EDA\nlibrary(readxl)\ndata1 &lt;- read_excel(\"Data/Bab 2/data1.xlsx\")\nhead(data1)\n\n# A tibble: 6 × 11\n  Time                `Outstanding KPR (miliar)` LnKPR `PDB Nominal` LnPDB\n  &lt;dttm&gt;                                   &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;\n1 2014-10-01 00:00:00                     38047.  10.5       723518.  13.5\n2 2014-11-01 00:00:00                     38526.  10.6       719996.  13.5\n3 2014-12-01 00:00:00                     39221.  10.6       718040.  13.5\n4 2015-01-01 00:00:00                     39023.  10.6       715580.  13.5\n5 2015-02-01 00:00:00                     39756.  10.6       718307.  13.5\n6 2015-03-01 00:00:00                     39954.  10.6       724152.  13.5\n# ℹ 6 more variables: `Growth PDB YtY` &lt;dbl&gt;, Inflasi &lt;dbl&gt;, CreditRate &lt;dbl&gt;,\n#   JII &lt;dbl&gt;, LnJII &lt;dbl&gt;, DFTV &lt;dbl&gt;\nnames(data1)[2] &lt;- \"Outstanding KPR\"\nnames(data1)[7] &lt;- \"Inflasi\"\nnames(data1)[8] &lt;- \"CreditRate\"\ndata1baru = data1[,c(2,4,7,8,9)]\ntsData = ts(data1baru, start=c(2014,10), frequency=12)\nhead(tsData,5)\n\n     Outstanding KPR PDB Nominal Inflasi CreditRate    JII\n[1,]        38047.46    723517.8    1.04       7.50 670.44\n[2,]        38525.78    719995.7    0.49       7.75 683.02\n[3,]        39220.50    718039.5    1.45       7.75 691.04\n[4,]        39022.75    715580.1    0.80       7.75 706.68\n[5,]        39755.80    718307.4    0.41       7.50 722.10\n# Exploration\nplot(tsData, type=\"l\", main=\"Plot Data\", xlab=\"Waktu\")\n# correlation\nround(cor(tsData),3)\n\n                Outstanding KPR PDB Nominal Inflasi CreditRate    JII\nOutstanding KPR           1.000       0.968  -0.267     -0.548  0.218\nPDB Nominal               0.968       1.000  -0.315     -0.590  0.204\nInflasi                  -0.267      -0.315   1.000      0.074  0.179\nCreditRate               -0.548      -0.590   0.074      1.000 -0.624\nJII                       0.218       0.204   0.179     -0.624  1.000\n# Descriptive\nsummary(tsData)\n\n Outstanding KPR  PDB Nominal        Inflasi          CreditRate   \n Min.   :38047   Min.   :715580   Min.   :-0.4500   Min.   :4.250  \n 1st Qu.:43622   1st Qu.:766385   1st Qu.: 0.1300   1st Qu.:4.750  \n Median :53612   Median :812954   Median : 0.2050   Median :5.875  \n Mean   :55303   Mean   :818266   Mean   : 0.2838   Mean   :5.896  \n 3rd Qu.:65595   3rd Qu.:871216   3rd Qu.: 0.3125   3rd Qu.:7.312  \n Max.   :78998   Max.   :947281   Max.   : 1.4500   Max.   :7.750  \n      JII       \n Min.   :556.1  \n 1st Qu.:659.2  \n Median :691.5  \n Mean   :688.1  \n 3rd Qu.:726.7  \n Max.   :787.1",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Basic Linear Regression</span>"
    ]
  },
  {
    "objectID": "02-Bab2.html#ordinary-least-square-ols",
    "href": "02-Bab2.html#ordinary-least-square-ols",
    "title": "2  Basic Linear Regression",
    "section": "2.2 Ordinary Least Square (OLS)",
    "text": "2.2 Ordinary Least Square (OLS)\n\n# OLS\nregresi1 = lm(LnKPR ~ LnPDB + Inflasi + CreditRate + LnJII + DFTV, data=data1)\nsummary(regresi1)\n\n\nCall:\nlm(formula = LnKPR ~ LnPDB + Inflasi + CreditRate + LnJII + DFTV, \n    data = data1)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.138338 -0.029350  0.004568  0.029305  0.073667 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -21.79826    2.19407  -9.935 8.61e-14 ***\nLnPDB         2.29744    0.14887  15.432  &lt; 2e-16 ***\nInflasi      -0.02407    0.02223  -1.083 0.283737    \nCreditRate    0.04397    0.01081   4.067 0.000156 ***\nLnJII         0.16152    0.10803   1.495 0.140715    \nDFTV          0.18359    0.03372   5.444 1.31e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04381 on 54 degrees of freedom\nMultiple R-squared:  0.9659,    Adjusted R-squared:  0.9627 \nF-statistic: 305.6 on 5 and 54 DF,  p-value: &lt; 2.2e-16",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Basic Linear Regression</span>"
    ]
  },
  {
    "objectID": "02-Bab2.html#diagnostic-gauss-markov",
    "href": "02-Bab2.html#diagnostic-gauss-markov",
    "title": "2  Basic Linear Regression",
    "section": "2.3 Diagnostic Gauss Markov",
    "text": "2.3 Diagnostic Gauss Markov\n\n# Normality, Linearity, Heteroscedasticity\nlibrary(gvlma)\ngvlma(regresi1)\n\n\nCall:\nlm(formula = LnKPR ~ LnPDB + Inflasi + CreditRate + LnJII + DFTV, \n    data = data1)\n\nCoefficients:\n(Intercept)        LnPDB      Inflasi   CreditRate        LnJII         DFTV  \n  -21.79826      2.29744     -0.02407      0.04397      0.16152      0.18359  \n\n\nASSESSMENT OF THE LINEAR MODEL ASSUMPTIONS\nUSING THE GLOBAL TEST ON 4 DEGREES-OF-FREEDOM:\nLevel of Significance =  0.05 \n\nCall:\n gvlma(x = regresi1) \n\n                     Value p-value                Decision\nGlobal Stat        7.04469 0.13355 Assumptions acceptable.\nSkewness           3.60383 0.05765 Assumptions acceptable.\nKurtosis           0.86268 0.35299 Assumptions acceptable.\nLink Function      2.52749 0.11188 Assumptions acceptable.\nHeteroscedasticity 0.05069 0.82187 Assumptions acceptable.\n\n\n\n# Heteroscedasticity Test\nlibrary(car)\n\nLoading required package: carData\n\n# White test\nncvTest(regresi1)\n\nNon-constant Variance Score Test \nVariance formula: ~ fitted.values \nChisquare = 0.4905034, Df = 1, p = 0.4837\n\n\n\n# Autocorrelation Test\nlibrary(lmtest)\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\ndwtest(regresi1)\n\n\n    Durbin-Watson test\n\ndata:  regresi1\nDW = 0.58729, p-value = 9.399e-13\nalternative hypothesis: true autocorrelation is greater than 0\n\n\n\n# Assumption: No perfect multicollinearity\nvif(regresi1)\n\n     LnPDB    Inflasi CreditRate      LnJII       DFTV \n  4.011533   1.412398   5.368989   1.828592   8.404443 \n\n\n\n# Re-estimate Standard Error\nlibrary(sandwich)\n# Account for heteroskedasticity\ncoeftest(regresi1, vcov = vcovHC(regresi1, \"HC1\"))\n\n\nt test of coefficients:\n\n              Estimate Std. Error  t value  Pr(&gt;|t|)    \n(Intercept) -21.798262   1.581079 -13.7870 &lt; 2.2e-16 ***\nLnPDB         2.297444   0.118364  19.4100 &lt; 2.2e-16 ***\nInflasi      -0.024070   0.019603  -1.2279    0.2248    \nCreditRate    0.043970   0.009386   4.6846 1.937e-05 ***\nLnJII         0.161515   0.099960   1.6158    0.1120    \nDFTV          0.183586   0.028221   6.5052 2.615e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# Account for heteroskedasticity and autocorrelation\ncoeftest(regresi1, vcov = vcovHAC)\n\n\nt test of coefficients:\n\n              Estimate Std. Error  t value  Pr(&gt;|t|)    \n(Intercept) -21.798262   1.500741 -14.5250 &lt; 2.2e-16 ***\nLnPDB         2.297444   0.134419  17.0917 &lt; 2.2e-16 ***\nInflasi      -0.024070   0.020238  -1.1894  0.239504    \nCreditRate    0.043970   0.016296   2.6981  0.009286 ** \nLnJII         0.161515   0.117986   1.3689  0.176686    \nDFTV          0.183586   0.041167   4.4595 4.197e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Basic Linear Regression</span>"
    ]
  },
  {
    "objectID": "03-Bab3.html",
    "href": "03-Bab3.html",
    "title": "3  Univariate Time Series",
    "section": "",
    "text": "3.1 Data EDA\nlibrary(readxl)\nhargaberas &lt;- read_excel(\"Data/Bab 3/ARIMA.xlsx\")\nhargaberas = hargaberas[,c(-1)]\nhargaberas = ts(hargaberas, start=c(2012,1), frequency=12)\nhargaberas\n\n       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec\n2012  8726  8778  8687  8583  8537  8554  8606  8635  8624  8624  8655  8702\n2013  8835  8843  8783  8711  8681  8784  9018  9057  9058  9108  9152  9262\n2014  9433  9531  9596  9425  9414  9462  9525  9525  9694  9781  9924 10344\n2015 10612 10766 10987 10648 10569 10679 10732 10935 11055 11169 11365 11465\n2016 11614 11729 11678 11449 11417 11469 11498 11475 11448 11433 11450 11476\n2017 11579 11571 11494 11449 11465 11465 11448 11411 11482 11552 11665 11838\n2018 12276 12414 12299 12035 11943 11907 11936 11899 11900 11926 12013 12106\nplot(hargaberas, main=\"Harga Beras di Perdagangan Besar\")\ndekomposisi = decompose(hargaberas)\nplot(dekomposisi)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Univariate Time Series</span>"
    ]
  },
  {
    "objectID": "03-Bab3.html#acf-and-pacf-plot",
    "href": "03-Bab3.html#acf-and-pacf-plot",
    "title": "3  Univariate Time Series",
    "section": "3.2 ACF and PACF Plot",
    "text": "3.2 ACF and PACF Plot\n\n# plot acf dan pacf\nacf(hargaberas, lag=48)\n\n\n\n\n\n\n\npacf(hargaberas, lag=48)\n\n\n\n\n\n\n\n\n##Stationary Test\n\nlibrary(aTSA)\n\n\nAttaching package: 'aTSA'\n\n\nThe following object is masked from 'package:graphics':\n\n    identify\n\n# Augmented Dickey-Fuller Test \nadf.test(hargaberas)\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag  ADF p.value\n[1,]   0 2.96   0.990\n[2,]   1 1.65   0.975\n[3,]   2 2.04   0.990\n[4,]   3 2.18   0.990\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0 -0.537   0.858\n[2,]   1 -0.717   0.795\n[3,]   2 -0.831   0.755\n[4,]   3 -0.917   0.724\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -1.42   0.814\n[2,]   1 -2.56   0.340\n[3,]   2 -2.00   0.570\n[4,]   3 -1.78   0.663\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\n\n\n# Firs Difference Form\nadf.test(diff(hargaberas))\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag   ADF p.value\n[1,]   0 -5.11    0.01\n[2,]   1 -5.02    0.01\n[3,]   2 -4.42    0.01\n[4,]   3 -4.36    0.01\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -5.47    0.01\n[2,]   1 -5.58    0.01\n[3,]   2 -5.10    0.01\n[4,]   3 -5.27    0.01\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -5.43    0.01\n[2,]   1 -5.55    0.01\n[3,]   2 -5.10    0.01\n[4,]   3 -5.28    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Univariate Time Series</span>"
    ]
  },
  {
    "objectID": "03-Bab3.html#arima",
    "href": "03-Bab3.html#arima",
    "title": "3  Univariate Time Series",
    "section": "3.3 ARIMA",
    "text": "3.3 ARIMA\n\nlibrary(forecast)\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\nAttaching package: 'forecast'\n\n\nThe following object is masked from 'package:aTSA':\n\n    forecast\n\nauto.arima(hargaberas, trace=TRUE)\n\n\n ARIMA(2,1,2)(1,1,1)[12]                    : Inf\n ARIMA(0,1,0)(0,1,0)[12]                    : 884.0934\n ARIMA(1,1,0)(1,1,0)[12]                    : 872.3993\n ARIMA(0,1,1)(0,1,1)[12]                    : Inf\n ARIMA(1,1,0)(0,1,0)[12]                    : 876.5573\n ARIMA(1,1,0)(2,1,0)[12]                    : 863.6643\n ARIMA(1,1,0)(2,1,1)[12]                    : Inf\n ARIMA(1,1,0)(1,1,1)[12]                    : Inf\n ARIMA(0,1,0)(2,1,0)[12]                    : 867.3178\n ARIMA(2,1,0)(2,1,0)[12]                    : 865.871\n ARIMA(1,1,1)(2,1,0)[12]                    : 865.1084\n ARIMA(0,1,1)(2,1,0)[12]                    : 862.9856\n ARIMA(0,1,1)(1,1,0)[12]                    : 871.9363\n ARIMA(0,1,1)(2,1,1)[12]                    : Inf\n ARIMA(0,1,1)(1,1,1)[12]                    : Inf\n ARIMA(0,1,2)(2,1,0)[12]                    : 861.8543\n ARIMA(0,1,2)(1,1,0)[12]                    : 872.2305\n ARIMA(0,1,2)(2,1,1)[12]                    : Inf\n ARIMA(0,1,2)(1,1,1)[12]                    : Inf\n ARIMA(1,1,2)(2,1,0)[12]                    : 867.0498\n ARIMA(0,1,3)(2,1,0)[12]                    : 854.8026\n ARIMA(0,1,3)(1,1,0)[12]                    : 865.2557\n ARIMA(0,1,3)(2,1,1)[12]                    : Inf\n ARIMA(0,1,3)(1,1,1)[12]                    : Inf\n ARIMA(1,1,3)(2,1,0)[12]                    : Inf\n ARIMA(0,1,4)(2,1,0)[12]                    : 857.2177\n ARIMA(1,1,4)(2,1,0)[12]                    : 859.7882\n\n Best model: ARIMA(0,1,3)(2,1,0)[12]                    \n\n\nSeries: hargaberas \nARIMA(0,1,3)(2,1,0)[12] \n\nCoefficients:\n         ma1     ma2     ma3     sar1     sar2\n      0.3775  0.0028  0.4180  -0.4831  -0.4956\ns.e.  0.1166  0.1301  0.1403   0.1231   0.1239\n\nsigma^2 = 7757:  log likelihood = -420.75\nAIC=853.49   AICc=854.8   BIC=867.07\n\n\n\nlibrary(lmtest)\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n# Best model: ARIMA(0,1,3)(2,1,0)[12]\nmodel1 = arima(hargaberas, order=c(0,1,3), seasonal=list(order=c(2,1,0), period=12))\ncoeftest(model1)\n\n\nz test of coefficients:\n\n      Estimate Std. Error z value  Pr(&gt;|z|)    \nma1   0.377526   0.116627  3.2370  0.001208 ** \nma2   0.002799   0.130115  0.0215  0.982837    \nma3   0.417985   0.140264  2.9800  0.002883 ** \nsar1 -0.483126   0.123055 -3.9261 8.634e-05 ***\nsar2 -0.495630   0.123883 -4.0008 6.313e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# Arch Test\narch.test(model1)\n\nARCH heteroscedasticity test for residuals \nalternative: heteroscedastic \n\nPortmanteau-Q test: \n     order    PQ p.value\n[1,]     4  5.41   0.247\n[2,]     8  8.53   0.384\n[3,]    12 11.36   0.498\n[4,]    16 13.03   0.670\n[5,]    20 14.44   0.808\n[6,]    24 16.04   0.887\nLagrange-Multiplier test: \n     order    LM  p.value\n[1,]     4 41.16 6.04e-09\n[2,]     8 13.84 5.42e-02\n[3,]    12  6.06 8.69e-01\n[4,]    16  3.39 9.99e-01\n[5,]    20  2.16 1.00e+00\n[6,]    24  1.16 1.00e+00\n\n\n\n\n\n\n\n\n\n\n# Autocorrelartion Test\nBox.test(model1$residuals, lag = 1, type = c(\"Ljung-Box\"), fitdf = 0)\n\n\n    Box-Ljung test\n\ndata:  model1$residuals\nX-squared = 0.0041444, df = 1, p-value = 0.9487\n\n\n\n# Forecasting\nforecast(model1, h=12)\n\n         Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\nJan 2019       12355.67 12246.95 12464.39 12189.39 12521.95\nFeb 2019       12493.09 12308.02 12678.16 12210.05 12776.13\nMar 2019       12392.80 12154.53 12631.07 12028.40 12757.21\nApr 2019       12143.41 11835.19 12451.63 11672.03 12614.80\nMay 2019       12079.80 11714.79 12444.80 11521.57 12638.02\nJun 2019       12086.96 11672.89 12501.04 11453.70 12720.23\nJul 2019       12116.54 11658.63 12574.45 11416.22 12816.85\nAug 2019       12086.48 11588.57 12584.38 11325.00 12847.96\nSep 2019       12072.73 11537.81 12607.64 11254.64 12890.81\nOct 2019       12077.85 11508.32 12647.38 11206.83 12948.88\nNov 2019       12129.83 11527.68 12731.99 11208.92 13050.75\nDec 2019       12188.63 11555.52 12821.73 11220.38 13156.88\n\n\n\nplot(forecast(model1, h=12))",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Univariate Time Series</span>"
    ]
  },
  {
    "objectID": "03-Bab3.html#arch-garch",
    "href": "03-Bab3.html#arch-garch",
    "title": "3  Univariate Time Series",
    "section": "3.4 ARCH-GARCH",
    "text": "3.4 ARCH-GARCH\n\nlibrary(readxl)\nkurs &lt;- read_excel(\"Data/Bab 3/ARCH-GARCH.xlsx\")\nkurs = kurs[,c(-1)]\nDates = seq(as.Date(\"2019-01-01\"), as.Date(\"2020-12-31\"), \"day\") \n\nlibrary(xts)\nkurs = xts(kurs, order.by = Dates)\nplot(kurs, main=\"Nilai Tukar US Dollar terhadap Rupiah\")\n\n\n\n\n\n\n\n\n\n# ARIMA\nauto.arima(kurs, trace=TRUE)\n\n\n Fitting models using approximations to speed things up...\n\n ARIMA(2,1,2) with drift         : 8738.664\n ARIMA(0,1,0) with drift         : 8755.631\n ARIMA(1,1,0) with drift         : 8745.702\n ARIMA(0,1,1) with drift         : 8744.836\n ARIMA(0,1,0)                    : 8753.644\n ARIMA(1,1,2) with drift         : 8742.017\n ARIMA(2,1,1) with drift         : 8748.12\n ARIMA(3,1,2) with drift         : 8746.649\n ARIMA(2,1,3) with drift         : 8740.697\n ARIMA(1,1,1) with drift         : 8746.629\n ARIMA(1,1,3) with drift         : 8743.813\n ARIMA(3,1,1) with drift         : 8748.657\n ARIMA(3,1,3) with drift         : 8751.34\n ARIMA(2,1,2)                    : 8736.651\n ARIMA(1,1,2)                    : 8740.011\n ARIMA(2,1,1)                    : 8746.122\n ARIMA(3,1,2)                    : 8744.611\n ARIMA(2,1,3)                    : 8738.68\n ARIMA(1,1,1)                    : 8744.657\n ARIMA(1,1,3)                    : 8741.802\n ARIMA(3,1,1)                    : 8746.636\n ARIMA(3,1,3)                    : 8749.317\n\n Now re-fitting the best model(s) without approximations...\n\n ARIMA(2,1,2)                    : 8739.165\n\n Best model: ARIMA(2,1,2)                    \n\n\nSeries: kurs \nARIMA(2,1,2) \n\nCoefficients:\n         ar1      ar2      ma1     ma2\n      1.2304  -0.7997  -1.3560  0.8726\ns.e.  0.0650   0.0506   0.0599  0.0425\n\nsigma^2 = 9181:  log likelihood = -4364.54\nAIC=8739.08   AICc=8739.16   BIC=8762.05\n\n\n\n#  Best model: ARIMA(2,1,2)\nmodel2 = arima(kurs, order=c(2,1,2))\ncoeftest(model2)\n\n\nz test of coefficients:\n\n     Estimate Std. Error z value  Pr(&gt;|z|)    \nar1  1.230421   0.065027  18.922 &lt; 2.2e-16 ***\nar2 -0.799713   0.050577 -15.812 &lt; 2.2e-16 ***\nma1 -1.355960   0.059905 -22.635 &lt; 2.2e-16 ***\nma2  0.872641   0.042457  20.554 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n# ARCH Test\narch.test(model2)\n\nARCH heteroscedasticity test for residuals \nalternative: heteroscedastic \n\nPortmanteau-Q test: \n     order    PQ p.value\n[1,]     4  70.7 1.6e-14\n[2,]     8 134.2 0.0e+00\n[3,]    12 188.4 0.0e+00\n[4,]    16 206.3 0.0e+00\n[5,]    20 216.8 0.0e+00\n[6,]    24 225.0 0.0e+00\nLagrange-Multiplier test: \n     order   LM  p.value\n[1,]     4 1471 0.00e+00\n[2,]     8  446 0.00e+00\n[3,]    12  251 0.00e+00\n[4,]    16  179 0.00e+00\n[5,]    20  135 0.00e+00\n[6,]    24  106 1.14e-12\n\n\n\n\n\n\n\n\n\nif p.value &lt;- 0.05 = ARCH/GARCH\n\nlibrary(fGarch)\n\nWarning: package 'fGarch' was built under R version 4.4.3\n\n\nNOTE: Packages 'fBasics', 'timeDate', and 'timeSeries' are no longer\nattached to the search() path when 'fGarch' is attached.\n\nIf needed attach them yourself in your R script by e.g.,\n        require(\"timeSeries\")\n\n\n\n# Stationary Test\n# Phillips-Perron Unit Root Test \npp.test(kurs)\n\nPhillips-Perron Unit Root Test \nalternative: stationary \n \nType 1: no drift no trend \n lag   Z_rho p.value\n   6 -0.0408   0.683\n----- \n Type 2: with drift no trend \n lag Z_rho p.value\n   6 -11.1   0.107\n----- \n Type 3: with drift and trend \n lag Z_rho p.value\n   6 -12.1   0.367\n--------------- \nNote: p-value = 0.01 means p.value &lt;= 0.01 \n\npp.test(diff(kurs))\n\nPhillips-Perron Unit Root Test \nalternative: stationary \n \nType 1: no drift no trend \n lag Z_rho p.value\n   6  -804    0.01\n----- \n Type 2: with drift no trend \n lag Z_rho p.value\n   6  -804    0.01\n----- \n Type 3: with drift and trend \n lag Z_rho p.value\n   6  -804    0.01\n--------------- \nNote: p-value = 0.01 means p.value &lt;= 0.01 \n\n\n\ne = diff(kurs)[-1]\npar(mfrow=c(1,1))\nacf(e)\n\n\n\n\n\n\n\npacf(e)\n\n\n\n\n\n\n\nplot(e)\n\n\n\n\n\n\n\n\n\n# ARCH(1) = GARCH(1,0)\nmodel10 = garchFit(~garch(1,0), data=e, trace=FALSE)\nsummary(model10)\n\n\nTitle:\n GARCH Modelling \n\nCall:\n garchFit(formula = ~garch(1, 0), data = e, trace = FALSE) \n\nMean and Variance Equation:\n data ~ garch(1, 0)\n&lt;environment: 0x000001e4fdd103c0&gt;\n [data = e]\n\nConditional Distribution:\n norm \n\nCoefficient(s):\n        mu       omega      alpha1  \n  -1.15887  5442.67260     0.61303  \n\nStd. Errors:\n based on Hessian \n\nError Analysis:\n        Estimate  Std. Error  t value Pr(&gt;|t|)    \nmu       -1.1589      2.8293   -0.410    0.682    \nomega  5442.6726    374.5058   14.533  &lt; 2e-16 ***\nalpha1    0.6130      0.1073    5.713 1.11e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog Likelihood:\n -4303.768    normalized:  -5.895573 \n\nDescription:\n Sat Jul  5 23:34:33 2025 by user: derik \n\n\nStandardised Residuals Tests:\n                                  Statistic      p-Value\n Jarque-Bera Test   R    Chi^2  4839.704460 0.000000e+00\n Shapiro-Wilk Test  R    W         0.839958 0.000000e+00\n Ljung-Box Test     R    Q(10)    29.630084 9.844469e-04\n Ljung-Box Test     R    Q(15)    39.676117 5.074432e-04\n Ljung-Box Test     R    Q(20)    41.959542 2.799349e-03\n Ljung-Box Test     R^2  Q(10)    91.109411 3.219647e-15\n Ljung-Box Test     R^2  Q(15)   147.246211 0.000000e+00\n Ljung-Box Test     R^2  Q(20)   159.654019 0.000000e+00\n LM Arch Test       R    TR^2    114.581427 0.000000e+00\n\nInformation Criterion Statistics:\n     AIC      BIC      SIC     HQIC \n11.79937 11.81824 11.79933 11.80665 \n\n\n\n# GARCH(1,1)\nmodel11 = garchFit(~garch(1,1), data=e, trace=FALSE)\nsummary(model11)\n\n\nTitle:\n GARCH Modelling \n\nCall:\n garchFit(formula = ~garch(1, 1), data = e, trace = FALSE) \n\nMean and Variance Equation:\n data ~ garch(1, 1)\n&lt;environment: 0x000001e4ecb46428&gt;\n [data = e]\n\nConditional Distribution:\n norm \n\nCoefficient(s):\n       mu      omega     alpha1      beta1  \n -2.41759  366.97243    0.25035    0.74326  \n\nStd. Errors:\n based on Hessian \n\nError Analysis:\n        Estimate  Std. Error  t value Pr(&gt;|t|)    \nmu      -2.41759     2.21121   -1.093    0.274    \nomega  366.97243    87.52212    4.193 2.75e-05 ***\nalpha1   0.25035     0.04215    5.940 2.85e-09 ***\nbeta1    0.74326     0.03132   23.734  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog Likelihood:\n -4188.199    normalized:  -5.73726 \n\nDescription:\n Sat Jul  5 23:34:33 2025 by user: derik \n\n\nStandardised Residuals Tests:\n                                   Statistic     p-Value\n Jarque-Bera Test   R    Chi^2  1527.8454237 0.000000000\n Shapiro-Wilk Test  R    W         0.9121068 0.000000000\n Ljung-Box Test     R    Q(10)    28.3515452 0.001585409\n Ljung-Box Test     R    Q(15)    31.1437863 0.008403721\n Ljung-Box Test     R    Q(20)    32.4515827 0.038717818\n Ljung-Box Test     R^2  Q(10)     4.8877685 0.898547895\n Ljung-Box Test     R^2  Q(15)     9.1420867 0.869971676\n Ljung-Box Test     R^2  Q(20)    11.4700908 0.933109279\n LM Arch Test       R    TR^2      5.5858038 0.935507011\n\nInformation Criterion Statistics:\n     AIC      BIC      SIC     HQIC \n11.48548 11.51065 11.48542 11.49519 \n\n\n\n# GARCH(1,1) with mean equation ARMA(0,1)\nmodel11b = garchFit(~arma(0,1)+garch(1,1), data=e, trace=FALSE)\nsummary(model11b)\n\n\nTitle:\n GARCH Modelling \n\nCall:\n garchFit(formula = ~arma(0, 1) + garch(1, 1), data = e, trace = FALSE) \n\nMean and Variance Equation:\n data ~ arma(0, 1) + garch(1, 1)\n&lt;environment: 0x000001e4f379c708&gt;\n [data = e]\n\nConditional Distribution:\n norm \n\nCoefficient(s):\n       mu        ma1      omega     alpha1      beta1  \n -2.53982   -0.22537  337.43876    0.23716    0.75465  \n\nStd. Errors:\n based on Hessian \n\nError Analysis:\n        Estimate  Std. Error  t value Pr(&gt;|t|)    \nmu      -2.53982     1.74379   -1.456    0.145    \nma1     -0.22537     0.04724   -4.771 1.83e-06 ***\nomega  337.43876    85.21204    3.960 7.50e-05 ***\nalpha1   0.23716     0.04038    5.874 4.26e-09 ***\nbeta1    0.75465     0.03129   24.118  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog Likelihood:\n -4177.446    normalized:  -5.722529 \n\nDescription:\n Sat Jul  5 23:34:33 2025 by user: derik \n\n\nStandardised Residuals Tests:\n                                   Statistic    p-Value\n Jarque-Bera Test   R    Chi^2  1331.0510650 0.00000000\n Shapiro-Wilk Test  R    W         0.9147019 0.00000000\n Ljung-Box Test     R    Q(10)    20.1208930 0.02812976\n Ljung-Box Test     R    Q(15)    23.9601552 0.06577322\n Ljung-Box Test     R    Q(20)    26.1490496 0.16094547\n Ljung-Box Test     R^2  Q(10)     4.7499032 0.90724638\n Ljung-Box Test     R^2  Q(15)     8.8134669 0.88706688\n Ljung-Box Test     R^2  Q(20)    11.6275315 0.92829976\n LM Arch Test       R    TR^2      5.4233826 0.94232413\n\nInformation Criterion Statistics:\n     AIC      BIC      SIC     HQIC \n11.45876 11.49021 11.45866 11.47089 \n\n\n\n# Best Model = \"model11b\"\nDates2 = seq(as.Date(\"2019-01-02\"), as.Date(\"2020-12-31\"), \"day\") \nstdev = xts(model11b@sigma.t, order.by = Dates2)\nplot(stdev, main=\"Simpangan Baku\")\n\n\n\n\n\n\n\n\n\n# Forecasting\npredict(model11b, n.ahead=20, plot=TRUE, nx=731)\n\n\n\n\n\n\n\n\n   meanForecast meanError standardDeviation lowerInterval upperInterval\n1     15.748251  76.11087          76.11087     -133.4263      164.9228\n2     -2.539819  79.85676          77.99279     -159.0562      153.9765\n3     -2.539819  81.72802          79.81549     -162.7238      157.6442\n4     -2.539819  83.54257          81.58306     -166.2802      161.2006\n5     -2.539819  85.30415          83.29911     -169.7329      164.6532\n6     -2.539819  87.01608          84.96689     -173.0882      168.0086\n7     -2.539819  88.68137          86.58929     -176.3521      171.2725\n8     -2.539819  90.30269          88.16892     -179.5298      174.4502\n9     -2.539819  91.88248          89.70815     -182.6262      177.5465\n10    -2.539819  93.42296          91.20912     -185.6454      180.5658\n11    -2.539819  94.92613          92.67380     -188.5916      183.5120\n12    -2.539819  96.39384          94.10397     -191.4683      186.3886\n13    -2.539819  97.82780          95.50128     -194.2788      189.1991\n14    -2.539819  99.22954          96.86724     -197.0261      191.9465\n15    -2.539819 100.60052          98.20325     -199.7132      194.6336\n16    -2.539819 101.94206          99.51061     -202.3426      197.2630\n17    -2.539819 103.25541         100.79051     -204.9167      199.8371\n18    -2.539819 104.54171         102.04409     -207.4378      202.3582\n19    -2.539819 105.80203         103.27236     -209.9080      204.8283\n20    -2.539819 107.03737         104.47632     -212.3292      207.2496",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Univariate Time Series</span>"
    ]
  },
  {
    "objectID": "04-Bab4.html",
    "href": "04-Bab4.html",
    "title": "4  Multivariate Time Series",
    "section": "",
    "text": "4.1 VAR/VECM\nlibrary(readxl)\ndata1 &lt;- read_excel(\"Data/Bab 4/VECM.xlsx\")\ntsdata = data1[,c(-1,-2,-3,-4)]\ntsdata = ts(tsdata, start=c(2010,1), frequency=12)\nplot(tsdata)\n# Stationary Test\nlibrary(aTSA)\n\n\nAttaching package: 'aTSA'\n\n\nThe following object is masked from 'package:graphics':\n\n    identify\n\nadf.test(tsdata[,\"LnIHK\"])\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag  ADF p.value\n[1,]   0 3.25    0.99\n[2,]   1 7.29    0.99\n[3,]   2 3.75    0.99\n[4,]   3 5.84    0.99\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0 -0.506   0.869\n[2,]   1 -0.541   0.856\n[3,]   2 -0.727   0.791\n[4,]   3 -0.914   0.725\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -5.31  0.0100\n[2,]   1 -2.02  0.5601\n[3,]   2 -3.33  0.0732\n[4,]   3 -1.77  0.6648\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\nadf.test(tsdata[,\"LnRM2\"])\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag  ADF p.value\n[1,]   0 3.09    0.99\n[2,]   1 4.89    0.99\n[3,]   2 4.21    0.99\n[4,]   3 4.52    0.99\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -1.53   0.509\n[2,]   1 -2.12   0.284\n[3,]   2 -2.04   0.315\n[4,]   3 -2.39   0.177\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -2.31   0.441\n[2,]   1 -1.50   0.776\n[3,]   2 -1.36   0.836\n[4,]   3 -1.09   0.918\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\nadf.test(tsdata[,\"LnIPI\"])\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag  ADF p.value\n[1,]   0 1.03   0.916\n[2,]   1 1.45   0.961\n[3,]   2 1.81   0.981\n[4,]   3 2.09   0.990\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0 -1.588   0.487\n[2,]   1 -1.069   0.671\n[3,]   2 -0.493   0.873\n[4,]   3 -0.218   0.927\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -6.68    0.01\n[2,]   1 -5.35    0.01\n[3,]   2 -4.47    0.01\n[4,]   3 -4.11    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01\nadf.test(diff(tsdata[,\"LnIHK\"]))\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag    ADF p.value\n[1,]   0 -15.36    0.01\n[2,]   1  -3.52    0.01\n[3,]   2  -4.20    0.01\n[4,]   3  -2.61    0.01\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0 -21.22    0.01\n[2,]   1  -5.37    0.01\n[3,]   2  -7.78    0.01\n[4,]   3  -5.55    0.01\nType 3: with drift and trend \n     lag    ADF p.value\n[1,]   0 -21.09    0.01\n[2,]   1  -5.36    0.01\n[3,]   2  -7.79    0.01\n[4,]   3  -5.59    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\nadf.test(diff(tsdata[,\"LnRM2\"]))\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag    ADF p.value\n[1,]   0 -11.73    0.01\n[2,]   1  -5.61    0.01\n[3,]   2  -4.49    0.01\n[4,]   3  -3.31    0.01\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0 -14.27    0.01\n[2,]   1  -7.53    0.01\n[3,]   2  -6.83    0.01\n[4,]   3  -5.62    0.01\nType 3: with drift and trend \n     lag    ADF p.value\n[1,]   0 -14.60    0.01\n[2,]   1  -7.85    0.01\n[3,]   2  -7.34    0.01\n[4,]   3  -6.33    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\nadf.test(diff(tsdata[,\"LnIPI\"]))\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag    ADF p.value\n[1,]   0 -12.46    0.01\n[2,]   1  -9.27    0.01\n[3,]   2  -7.24    0.01\n[4,]   3  -5.75    0.01\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0 -12.64    0.01\n[2,]   1  -9.59    0.01\n[3,]   2  -7.70    0.01\n[4,]   3  -6.32    0.01\nType 3: with drift and trend \n     lag    ADF p.value\n[1,]   0 -12.56    0.01\n[2,]   1  -9.54    0.01\n[3,]   2  -7.67    0.01\n[4,]   3  -6.31    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01\nlibrary(urca)\nlibrary(vars)\n\nLoading required package: MASS\n\n\nLoading required package: strucchange\n\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nLoading required package: sandwich\n\n\nLoading required package: lmtest\n\n\n\nAttaching package: 'vars'\n\n\nThe following object is masked from 'package:aTSA':\n\n    arch.test\n\n# Lag Optimum\nVARselect(tsdata, lag.max = 10)\n\n$selection\nAIC(n)  HQ(n)  SC(n) FPE(n) \n     9      2      2      9 \n\n$criteria\n                   1             2             3             4             5\nAIC(n) -2.454158e+01 -2.517704e+01 -2.527724e+01 -2.529876e+01 -2.531948e+01\nHQ(n)  -2.438847e+01 -2.490910e+01 -2.489447e+01 -2.480116e+01 -2.470705e+01\nSC(n)  -2.415612e+01 -2.450249e+01 -2.431360e+01 -2.404603e+01 -2.377765e+01\nFPE(n)  2.197302e-11  1.165805e-11  1.058765e-11  1.043683e-11  1.034191e-11\n                   6             7             8             9            10\nAIC(n) -2.531117e+01 -2.509185e+01 -2.516992e+01 -2.557138e+01 -2.549790e+01\nHQ(n)  -2.458391e+01 -2.424976e+01 -2.421299e+01 -2.449963e+01 -2.431131e+01\nSC(n)  -2.348025e+01 -2.297184e+01 -2.276081e+01 -2.287319e+01 -2.251061e+01\nFPE(n)  1.060910e-11  1.353419e-11  1.293440e-11  9.038835e-12  1.028471e-11\n# Cointegration Test\ncointest_eigen = ca.jo(tsdata, K=2, type=\"eigen\", ecdet=\"const\", spec=\"longrun\")\nsummary(cointest_eigen)\n\n\n###################### \n# Johansen-Procedure # \n###################### \n\nTest type: maximal eigenvalue statistic (lambda max) , without linear trend and constant in cointegration \n\nEigenvalues (lambda):\n[1]  5.404113e-01  2.481996e-01  6.245216e-02 -2.633450e-15\n\nValues of teststatistic and critical values of test:\n\n          test 10pct  5pct  1pct\nr &lt;= 2 |  5.03  7.52  9.24 12.97\nr &lt;= 1 | 22.25 13.75 15.67 20.20\nr = 0  | 60.64 19.77 22.00 26.81\n\nEigenvectors, normalised to first column:\n(These are the cointegration relations)\n\n           LnIHK.l2    LnRM2.l2   LnIPI.l2   constant\nLnIHK.l2  1.0000000  1.00000000  1.0000000  1.0000000\nLnRM2.l2 -0.1153114  0.08719842 -1.0510635 -0.6085127\nLnIPI.l2 -0.8107822 -1.31468643  0.2406645  0.1913803\nconstant  0.4060887  0.96758544  4.8089173  0.5277719\n\nWeights W:\n(This is the loading matrix)\n\n           LnIHK.l2    LnRM2.l2    LnIPI.l2      constant\nLnIHK.d -0.07391103 -0.02494780 -0.03114995 -2.277816e-13\nLnRM2.d -0.06399547  0.08952368  0.07223974  4.294637e-13\nLnIPI.d -0.01046286  0.46857303 -0.03192575  8.303978e-13\n# VECM\nmodelvecm = cajorls(cointest_eigen)\nsummary(modelvecm$rlm)\n\nResponse LnIHK.d :\n\nCall:\nlm(formula = LnIHK.d ~ ect1 + LnIHK.dl1 + LnRM2.dl1 + LnIPI.dl1 - \n    1, data = data.mat)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.015021 -0.005668 -0.001157  0.003871  0.027827 \n\nCoefficients:\n          Estimate Std. Error t value Pr(&gt;|t|)    \nect1      -0.07391    0.01199  -6.166 3.37e-08 ***\nLnIHK.dl1 -0.70491    0.10168  -6.933 1.31e-09 ***\nLnRM2.dl1  0.08470    0.06861   1.234    0.221    \nLnIPI.dl1 -0.01593    0.02695  -0.591    0.556    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.008005 on 74 degrees of freedom\nMultiple R-squared:  0.6302,    Adjusted R-squared:  0.6102 \nF-statistic: 31.53 on 4 and 74 DF,  p-value: 2.518e-15\n\n\nResponse LnRM2.d :\n\nCall:\nlm(formula = LnRM2.d ~ ect1 + LnIHK.dl1 + LnRM2.dl1 + LnIPI.dl1 - \n    1, data = data.mat)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.030921 -0.011339  0.001549  0.010970  0.044395 \n\nCoefficients:\n          Estimate Std. Error t value Pr(&gt;|t|)   \nect1      -0.06400    0.02313  -2.767  0.00715 **\nLnIHK.dl1  0.33519    0.19621   1.708  0.09177 . \nLnRM2.dl1 -0.30552    0.13241  -2.307  0.02383 * \nLnIPI.dl1  0.02765    0.05200   0.532  0.59650   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.01545 on 74 degrees of freedom\nMultiple R-squared:  0.3241,    Adjusted R-squared:  0.2875 \nF-statistic:  8.87 on 4 and 74 DF,  p-value: 6.604e-06\n\n\nResponse LnIPI.d :\n\nCall:\nlm(formula = LnIPI.d ~ ect1 + LnIHK.dl1 + LnRM2.dl1 + LnIPI.dl1 - \n    1, data = data.mat)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.094660 -0.011913  0.000434  0.021986  0.101991 \n\nCoefficients:\n          Estimate Std. Error t value Pr(&gt;|t|)   \nect1      -0.01046    0.05068  -0.206  0.83700   \nLnIHK.dl1 -0.08499    0.42988  -0.198  0.84383   \nLnRM2.dl1  0.21190    0.29009   0.730  0.46742   \nLnIPI.dl1 -0.35319    0.11394  -3.100  0.00274 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.03385 on 74 degrees of freedom\nMultiple R-squared:  0.1312,    Adjusted R-squared:  0.08427 \nF-statistic: 2.794 on 4 and 74 DF,  p-value: 0.03214\nmodelvecm$beta\n\n               ect1\nLnIHK.l2  1.0000000\nLnRM2.l2 -0.1153114\nLnIPI.l2 -0.8107822\nconstant  0.4060887\nvecm = vec2var(cointest_eigen)\n# IRF\nir = irf(vecm, n.ahead=48)\nplot(ir)\n# FEVD\nvd = fevd(vecm, n.ahead=48)\nvd_LnIHK = as.matrix(vd$LnIHK)\nbarplot(t(vd_LnIHK), beside=FALSE, main=\"FEVD LnIHK\", xlab=\"periode\", col=c(\"blue\",\"red\",\"green\"), legend.text=TRUE)\nvd_LnRM2 = as.matrix(vd$LnRM2)\nbarplot(t(vd_LnRM2), beside=FALSE, main=\"FEVD LnRM2\", xlab=\"periode\", col=c(\"blue\",\"red\",\"green\"), legend.text=TRUE)\nvd_LnIPI = as.matrix(vd$LnIPI)\nbarplot(t(vd_LnIPI), beside=FALSE, main=\"FEVD LnIPI\", xlab=\"periode\", col=c(\"blue\",\"red\",\"green\"), legend.text=TRUE)\n# VAR FD, If No cointegtration\nD1LnIHK = diff(tsdata[,\"LnIHK\"])\nD1LnRM2 = diff(tsdata[,\"LnRM2\"])\nD1LnIPI = diff(tsdata[,\"LnIPI\"])\ndatadiff = cbind(D1LnIHK, D1LnRM2, D1LnIPI)\nplot(datadiff)\nVARselect(datadiff, lag.max = 10)\n\n$selection\nAIC(n)  HQ(n)  SC(n) FPE(n) \n    10      3      1      3 \n\n$criteria\n                   1             2             3             4             5\nAIC(n) -2.488624e+01 -2.508974e+01 -2.522710e+01 -2.513616e+01 -2.494060e+01\nHQ(n)  -2.473209e+01 -2.481999e+01 -2.484173e+01 -2.463518e+01 -2.432401e+01\nSC(n)  -2.449770e+01 -2.440980e+01 -2.425574e+01 -2.387340e+01 -2.338644e+01\nFPE(n)  1.556733e-11  1.272259e-11  1.113498e-11  1.228686e-11  1.512269e-11\n                   6             7             8             9            10\nAIC(n) -2.490228e+01 -2.492141e+01 -2.513204e+01 -2.515552e+01 -2.527308e+01\nHQ(n)  -2.417008e+01 -2.407360e+01 -2.416862e+01 -2.407649e+01 -2.407844e+01\nSC(n)  -2.305671e+01 -2.278444e+01 -2.270366e+01 -2.243574e+01 -2.226189e+01\nFPE(n)  1.599877e-11  1.609812e-11  1.349591e-11  1.379267e-11  1.300117e-11\nvarfd = VAR(datadiff, p=3, type=\"both\")\nsummary(varfd)\n\n\nVAR Estimation Results:\n========================= \nEndogenous variables: D1LnIHK, D1LnRM2, D1LnIPI \nDeterministic variables: both \nSample size: 76 \nLog Likelihood: 669.253 \nRoots of the characteristic polynomial:\n0.9777 0.7641 0.7641 0.6842 0.6842 0.6017 0.6017 0.5599 0.1487\nCall:\nVAR(y = datadiff, p = 3, type = \"both\")\n\n\nEstimation results for equation D1LnIHK: \n======================================== \nD1LnIHK = D1LnIHK.l1 + D1LnRM2.l1 + D1LnIPI.l1 + D1LnIHK.l2 + D1LnRM2.l2 + D1LnIPI.l2 + D1LnIHK.l3 + D1LnRM2.l3 + D1LnIPI.l3 + const + trend \n\n             Estimate Std. Error t value Pr(&gt;|t|)   \nD1LnIHK.l1 -2.695e-01  1.136e-01  -2.372  0.02065 * \nD1LnRM2.l1  1.048e-01  6.640e-02   1.578  0.11951   \nD1LnIPI.l1 -2.316e-02  2.636e-02  -0.879  0.38286   \nD1LnIHK.l2  2.542e-01  1.214e-01   2.095  0.04010 * \nD1LnRM2.l2  1.258e-01  6.760e-02   1.861  0.06733 . \nD1LnIPI.l2  7.308e-03  2.795e-02   0.261  0.79454   \nD1LnIHK.l3 -3.575e-01  1.219e-01  -2.933  0.00463 **\nD1LnRM2.l3  1.015e-01  6.679e-02   1.520  0.13348   \nD1LnIPI.l3  3.637e-02  2.675e-02   1.360  0.17860   \nconst       3.701e-03  2.760e-03   1.341  0.18469   \ntrend       3.603e-06  3.837e-05   0.094  0.92549   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 0.006803 on 65 degrees of freedom\nMultiple R-Squared: 0.7325, Adjusted R-squared: 0.6913 \nF-statistic: 17.79 on 10 and 65 DF,  p-value: 4.614e-15 \n\n\nEstimation results for equation D1LnRM2: \n======================================== \nD1LnRM2 = D1LnIHK.l1 + D1LnRM2.l1 + D1LnIPI.l1 + D1LnIHK.l2 + D1LnRM2.l2 + D1LnIPI.l2 + D1LnIHK.l3 + D1LnRM2.l3 + D1LnIPI.l3 + const + trend \n\n             Estimate Std. Error t value Pr(&gt;|t|)    \nD1LnIHK.l1 -1.023e-01  2.305e-01  -0.444 0.658605    \nD1LnRM2.l1 -4.005e-01  1.347e-01  -2.973 0.004138 ** \nD1LnIPI.l1 -4.924e-03  5.348e-02  -0.092 0.926915    \nD1LnIHK.l2 -7.711e-01  2.463e-01  -3.131 0.002611 ** \nD1LnRM2.l2 -3.981e-01  1.372e-01  -2.902 0.005054 ** \nD1LnIPI.l2  4.497e-02  5.671e-02   0.793 0.430615    \nD1LnIHK.l3  2.169e-01  2.473e-01   0.877 0.383719    \nD1LnRM2.l3 -1.699e-02  1.355e-01  -0.125 0.900617    \nD1LnIPI.l3 -4.905e-02  5.427e-02  -0.904 0.369493    \nconst       2.144e-02  5.601e-03   3.829 0.000292 ***\ntrend      -1.726e-04  7.786e-05  -2.217 0.030141 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 0.0138 on 65 degrees of freedom\nMultiple R-Squared: 0.4561, Adjusted R-squared: 0.3724 \nF-statistic:  5.45 on 10 and 65 DF,  p-value: 7.948e-06 \n\n\nEstimation results for equation D1LnIPI: \n======================================== \nD1LnIPI = D1LnIHK.l1 + D1LnRM2.l1 + D1LnIPI.l1 + D1LnIHK.l2 + D1LnRM2.l2 + D1LnIPI.l2 + D1LnIHK.l3 + D1LnRM2.l3 + D1LnIPI.l3 + const + trend \n\n             Estimate Std. Error t value Pr(&gt;|t|)    \nD1LnIHK.l1 -9.657e-01  5.265e-01  -1.834  0.07121 .  \nD1LnRM2.l1 -4.073e-02  3.078e-01  -0.132  0.89511    \nD1LnIPI.l1 -5.834e-01  1.221e-01  -4.776 1.06e-05 ***\nD1LnIHK.l2 -1.065e+00  5.625e-01  -1.893  0.06284 .  \nD1LnRM2.l2 -2.528e-01  3.133e-01  -0.807  0.42264    \nD1LnIPI.l2 -4.311e-01  1.295e-01  -3.328  0.00144 ** \nD1LnIHK.l3 -3.630e-01  5.648e-01  -0.643  0.52271    \nD1LnRM2.l3 -3.290e-01  3.096e-01  -1.063  0.29188    \nD1LnIPI.l3 -2.070e-01  1.240e-01  -1.670  0.09981 .  \nconst       2.268e-02  1.279e-02   1.773  0.08089 .  \ntrend       4.216e-06  1.778e-04   0.024  0.98116    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 0.03153 on 65 degrees of freedom\nMultiple R-Squared: 0.3186, Adjusted R-squared: 0.2138 \nF-statistic: 3.039 on 10 and 65 DF,  p-value: 0.003239 \n\n\n\nCovariance matrix of residuals:\n           D1LnIHK    D1LnRM2    D1LnIPI\nD1LnIHK  4.628e-05 -3.554e-05 -1.799e-06\nD1LnRM2 -3.554e-05  1.906e-04  8.303e-05\nD1LnIPI -1.799e-06  8.303e-05  9.941e-04\n\nCorrelation matrix of residuals:\n          D1LnIHK D1LnRM2   D1LnIPI\nD1LnIHK  1.000000 -0.3785 -0.008387\nD1LnRM2 -0.378457  1.0000  0.190775\nD1LnIPI -0.008387  0.1908  1.000000\n# Stablity VAR\n# plot(stability(varfd))\n# IRF\nimpres = irf(varfd, n.ahead=48)\nplot(impres)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Multivariate Time Series</span>"
    ]
  },
  {
    "objectID": "04-Bab4.html#svar",
    "href": "04-Bab4.html#svar",
    "title": "4  Multivariate Time Series",
    "section": "4.2 SVAR",
    "text": "4.2 SVAR\n\nlibrary(readxl)\ndata1 &lt;- read_excel(\"Data/Bab 4/SVAR.xlsx\")\nhead(data1)\n\n# A tibble: 6 × 4\n  quarter growth inflation interest\n  &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 2006q1    5.13     15.0     12.6 \n2 2006q2    4.93     14.8     12.8 \n3 2006q3    5.86     14.0     12.4 \n4 2006q4    6.06      6.41    11.2 \n5 2007q1    6.06      6.34     9.83\n6 2007q2    6.73      5.64     9.08\n\n\n\ntsdata = data1[,c(-1)]\ntsdata = ts(tsdata, start=c(2006,1), frequency=4)\nplot(tsdata)\n\n\n\n\n\n\n\n\n\nlibrary(aTSA)\nadf.test(tsdata[,\"growth\"])\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag    ADF p.value\n[1,]   0 -0.315   0.550\n[2,]   1 -0.265   0.564\n[3,]   2 -0.578   0.469\n[4,]   3 -0.583   0.467\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -2.34  0.1978\n[2,]   1 -2.68  0.0874\n[3,]   2 -2.63  0.0955\n[4,]   3 -2.25  0.2320\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -3.06  0.1453\n[2,]   1 -3.74  0.0296\n[3,]   2 -3.40  0.0647\n[4,]   3 -3.02  0.1627\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\nadf.test(tsdata[,\"inflation\"])\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag   ADF p.value\n[1,]   0 -2.34  0.0212\n[2,]   1 -2.37  0.0200\n[3,]   2 -2.31  0.0227\n[4,]   3 -1.14  0.2675\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -3.26  0.0236\n[2,]   1 -3.82  0.0100\n[3,]   2 -4.50  0.0100\n[4,]   3 -2.37  0.1887\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -3.46  0.0552\n[2,]   1 -4.32  0.0100\n[3,]   2 -5.67  0.0100\n[4,]   3 -3.86  0.0221\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\nadf.test(tsdata[,\"interest\"])\n\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag   ADF p.value\n[1,]   0 -2.72  0.0100\n[2,]   1 -2.02  0.0441\n[3,]   2 -1.93  0.0532\n[4,]   3 -1.67  0.0913\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -3.06  0.0391\n[2,]   1 -3.52  0.0126\n[3,]   2 -3.33  0.0206\n[4,]   3 -2.54  0.1232\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -2.49  0.3714\n[2,]   1 -4.07  0.0133\n[3,]   2 -3.82  0.0240\n[4,]   3 -2.90  0.2080\n---- \nNote: in fact, p.value = 0.01 means p.value &lt;= 0.01 \n\n\n\n#cLag Optimum\nlibrary(vars)\nVARselect(tsdata, lag.max = 10)\n\n$selection\nAIC(n)  HQ(n)  SC(n) FPE(n) \n     2      1      1      2 \n\n$criteria\n                 1           2           3           4           5           6\nAIC(n) -3.70894477 -3.80592549 -3.69612636 -3.74782971 -3.74823364 -3.50174099\nHQ(n)  -3.53024390 -3.49319896 -3.24937417 -3.16705186 -3.03343013 -2.65291182\nSC(n)  -3.23190789 -2.97111094 -2.50353415 -2.19745983 -1.84008610 -1.23581578\nFPE(n)  0.02453576  0.02239812  0.02535002  0.02471383  0.02580004  0.03528312\n                 7           8           9          10\nAIC(n) -3.37833948 -3.26151640 -3.71876734 -3.74360021\nHQ(n)  -2.39548466 -2.14463592 -2.46786120 -2.35866842\nSC(n)  -0.75463661 -0.28003587 -0.37950914 -0.04656435\nFPE(n)  0.04400099  0.05681734  0.04372386  0.05614527\n\n\n\n# VAR Estimation\nvar.est1 = VAR(tsdata, p = 2, type = \"none\")\nsummary(var.est1)\n\n\nVAR Estimation Results:\n========================= \nEndogenous variables: growth, inflation, interest \nDeterministic variables: none \nSample size: 54 \nLog Likelihood: -128.363 \nRoots of the characteristic polynomial:\n0.9909 0.706 0.706 0.4297 0.1321 0.1321\nCall:\nVAR(y = tsdata, p = 2, type = \"none\")\n\n\nEstimation results for equation growth: \n======================================= \ngrowth = growth.l1 + inflation.l1 + interest.l1 + growth.l2 + inflation.l2 + interest.l2 \n\n              Estimate Std. Error t value Pr(&gt;|t|)    \ngrowth.l1     0.833907   0.134741   6.189 1.29e-07 ***\ninflation.l1  0.001106   0.033450   0.033   0.9738    \ninterest.l1   0.044345   0.143583   0.309   0.7588    \ngrowth.l2     0.035982   0.128753   0.279   0.7811    \ninflation.l2 -0.095836   0.038141  -2.513   0.0154 *  \ninterest.l2   0.133608   0.114623   1.166   0.2495    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 0.3558 on 48 degrees of freedom\nMultiple R-Squared: 0.9963, Adjusted R-squared: 0.9959 \nF-statistic:  2164 on 6 and 48 DF,  p-value: &lt; 2.2e-16 \n\n\nEstimation results for equation inflation: \n========================================== \ninflation = growth.l1 + inflation.l1 + interest.l1 + growth.l2 + inflation.l2 + interest.l2 \n\n              Estimate Std. Error t value Pr(&gt;|t|)    \ngrowth.l1     0.232652   0.602805   0.386    0.701    \ninflation.l1  0.840256   0.149650   5.615 9.66e-07 ***\ninterest.l1  -0.061073   0.642360  -0.095    0.925    \ngrowth.l2     0.115551   0.576015   0.201    0.842    \ninflation.l2 -0.135143   0.170636  -0.792    0.432    \ninterest.l2   0.002248   0.512801   0.004    0.997    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 1.592 on 48 degrees of freedom\nMultiple R-Squared: 0.9381, Adjusted R-squared: 0.9304 \nF-statistic: 121.3 on 6 and 48 DF,  p-value: &lt; 2.2e-16 \n\n\nEstimation results for equation interest: \n========================================= \ninterest = growth.l1 + inflation.l1 + interest.l1 + growth.l2 + inflation.l2 + interest.l2 \n\n             Estimate Std. Error t value Pr(&gt;|t|)    \ngrowth.l1     0.20986    0.13119   1.600  0.11622    \ninflation.l1  0.11010    0.03257   3.381  0.00144 ** \ninterest.l1   1.12480    0.13979   8.046 1.88e-10 ***\ngrowth.l2    -0.06797    0.12536  -0.542  0.59017    \ninflation.l2 -0.03737    0.03713  -1.006  0.31930    \ninterest.l2  -0.30853    0.11160  -2.765  0.00806 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nResidual standard error: 0.3464 on 48 degrees of freedom\nMultiple R-Squared: 0.9979, Adjusted R-squared: 0.9976 \nF-statistic:  3734 on 6 and 48 DF,  p-value: &lt; 2.2e-16 \n\n\n\nCovariance matrix of residuals:\n           growth inflation interest\ngrowth    0.12655   0.08828  0.01781\ninflation 0.08828   2.53321  0.18157\ninterest  0.01781   0.18157  0.11999\n\nCorrelation matrix of residuals:\n          growth inflation interest\ngrowth    1.0000    0.1559   0.1445\ninflation 0.1559    1.0000   0.3293\ninterest  0.1445    0.3293   1.0000\n\n\n\n# Matriks A for SVAR AB-model\na.mat = diag(3)\ndiag(a.mat) = NA\na.mat[2,1] = NA\na.mat[3,1] = NA\na.mat[3,2] = NA\na.mat\n\n     [,1] [,2] [,3]\n[1,]   NA    0    0\n[2,]   NA   NA    0\n[3,]   NA   NA   NA\n\n\n\n# Matriks B for SVAR AB-model\nb.mat = diag(3)\ndiag(b.mat) = NA\nb.mat\n\n     [,1] [,2] [,3]\n[1,]   NA    0    0\n[2,]    0   NA    0\n[3,]    0    0   NA\n\n\n\n# Est SVAR\nsvar1 = SVAR(var.est1, Amat = a.mat, Bmat = b.mat, max.iter = 10000, hessian = TRUE)\n\nWarning in SVAR(var.est1, Amat = a.mat, Bmat = b.mat, max.iter = 10000, : The\nAB-model is just identified. No test possible.\n\nsvar1\n\n\nSVAR Estimation Results:\n======================== \n\n\nEstimated A matrix:\n            growth inflation interest\ngrowth     1.00000   0.00000        0\ninflation -0.69543   1.00000        0\ninterest  -0.09344  -0.06834        1\n\nEstimated B matrix:\n          growth inflation interest\ngrowth    0.3558     0.000   0.0000\ninflation 0.0000     1.573   0.0000\ninterest  0.0000     0.000   0.3255\n\n\n\n# IRF\ninf.int = irf(svar1, response = \"interest\", impulse = \"inflation\", n.ahead = 40)\nplot(inf.int)\n\n\n\n\n\n\n\ninf.gdp = irf(svar1, response = \"growth\", impulse = \"inflation\", n.ahead = 40)\nplot(inf.gdp)\n\n\n\n\n\n\n\ninf.inf = irf(svar1, response = \"inflation\", impulse = \"inflation\", n.ahead = 40)\nplot(inf.inf)\n\n\n\n\n\n\n\ngdp.inf = irf(svar1, response = \"inflation\", impulse = \"growth\", n.ahead = 40)\nplot(gdp.inf)\n\n\n\n\n\n\n\n\n\n#FEVD\nvd = fevd(svar1, n.ahead=40)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Multivariate Time Series</span>"
    ]
  },
  {
    "objectID": "04-Bab4.html#ardl",
    "href": "04-Bab4.html#ardl",
    "title": "4  Multivariate Time Series",
    "section": "4.3 ARDL",
    "text": "4.3 ARDL\n\nlibrary(ARDL)\n\nWarning: package 'ARDL' was built under R version 4.4.3\n\n\nTo cite the ARDL package in publications:\n\nUse this reference to refer to the validity of the ARDL package.\n\n  Natsiopoulos, Kleanthis, and Tzeremes, Nickolaos G. (2022). ARDL\n  bounds test for cointegration: Replicating the Pesaran et al. (2001)\n  results for the UK earnings equation using R. Journal of Applied\n  Econometrics, 37(5), 1079-1090. https://doi.org/10.1002/jae.2919\n\nUse this reference to cite this specific version of the ARDL package.\n\n  Kleanthis Natsiopoulos and Nickolaos Tzeremes (2023). ARDL: ARDL, ECM\n  and Bounds-Test for Cointegration. R package version 0.2.4.\n  https://CRAN.R-project.org/package=ARDL\n\n# data sample\ndata(denmark)\ndenmark &lt;- data.frame(denmark)\nattach(denmark)\nstr(denmark)\n\n'data.frame':   55 obs. of  5 variables:\n $ LRM: num  11.6 11.6 11.6 11.6 11.6 ...\n $ LRY: num  5.9 5.87 5.84 5.81 5.8 ...\n $ LPY: num  -0.619 -0.581 -0.543 -0.505 -0.486 ...\n $ IBO: num  0.155 0.178 0.171 0.152 0.134 ...\n $ IDE: num  0.094 0.0955 0.0955 0.0955 0.0885 0.079 0.076 0.074 0.072 0.078 ...\n\n\n\ndenmark = ts(denmark, start=c(1974,1), frequency=12)\nplot(denmark)\n\n\n\n\n\n\n\n\n\nlibrary(tseries)\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\nAttaching package: 'tseries'\n\n\nThe following objects are masked from 'package:aTSA':\n\n    adf.test, kpss.test, pp.test\n\npp.test(LRM) #Non-Stationary\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  LRM\nDickey-Fuller Z(alpha) = -3.2568, Truncation lag parameter = 3, p-value\n= 0.9205\nalternative hypothesis: stationary\n\npp.test(LRY) #Non-Stationary\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  LRY\nDickey-Fuller Z(alpha) = -11.467, Truncation lag parameter = 3, p-value\n= 0.428\nalternative hypothesis: stationary\n\npp.test(IBO) #Non-Stationary\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  IBO\nDickey-Fuller Z(alpha) = -5.5494, Truncation lag parameter = 3, p-value\n= 0.7882\nalternative hypothesis: stationary\n\npp.test(IDE) #Non-Stationary\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  IDE\nDickey-Fuller Z(alpha) = -9.0346, Truncation lag parameter = 3, p-value\n= 0.5761\nalternative hypothesis: stationary\n\npp.test(diff(LRM)) #Stationary\n\nWarning in pp.test(diff(LRM)): p-value smaller than printed p-value\n\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  diff(LRM)\nDickey-Fuller Z(alpha) = -59.819, Truncation lag parameter = 3, p-value\n= 0.01\nalternative hypothesis: stationary\n\npp.test(diff(LRY)) #Stationary\n\nWarning in pp.test(diff(LRY)): p-value smaller than printed p-value\n\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  diff(LRY)\nDickey-Fuller Z(alpha) = -42.472, Truncation lag parameter = 3, p-value\n= 0.01\nalternative hypothesis: stationary\n\npp.test(diff(IBO)) #Stationary\n\nWarning in pp.test(diff(IBO)): p-value smaller than printed p-value\n\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  diff(IBO)\nDickey-Fuller Z(alpha) = -38.898, Truncation lag parameter = 3, p-value\n= 0.01\nalternative hypothesis: stationary\n\npp.test(diff(IDE)) #Stationary\n\nWarning in pp.test(diff(IDE)): p-value smaller than printed p-value\n\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  diff(IDE)\nDickey-Fuller Z(alpha) = -35.668, Truncation lag parameter = 3, p-value\n= 0.01\nalternative hypothesis: stationary\n\n\n\n# ARDL Auto Search Optimum Lag\nmodels &lt;- auto_ardl(LRM ~ LRY + IBO + IDE, data = denmark, max_order = 5)\n# The top 20 models according to the AIC\nmodels$top_orders\n\n   LRM LRY IBO IDE       AIC\n1    3   1   3   2 -251.0259\n2    3   1   3   3 -250.1144\n3    2   2   0   0 -249.6266\n4    3   2   3   2 -249.1087\n5    3   2   3   3 -248.1858\n6    2   2   0   1 -247.7786\n7    2   1   0   0 -247.5643\n8    2   2   1   1 -246.6885\n9    3   3   3   3 -246.3061\n10   2   2   1   2 -246.2709\n11   2   1   1   1 -245.8736\n12   2   2   2   2 -245.7722\n13   1   1   0   0 -245.6620\n14   2   1   2   2 -245.1712\n15   3   1   2   2 -245.0996\n16   1   0   0   0 -244.4317\n17   1   1   0   1 -243.7702\n18   5   5   5   5 -243.3120\n19   4   1   3   2 -243.0728\n20   4   1   3   3 -242.4378\n\n\n\n# The best model was found to be the ARDL(3,1,3,2)\nardl_3132 &lt;- models$best_model\nardl_3132$order\n\nLRM LRY IBO IDE \n  3   1   3   2 \n\n\n\nsummary(ardl_3132)\n\n\nTime series regression with \"ts\" data:\nStart = 1974(4), End = 1978(7)\n\nCall:\ndynlm::dynlm(formula = full_formula, data = data, start = start, \n    end = end)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.029939 -0.008856 -0.002562  0.008190  0.072577 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   2.6202     0.5678   4.615 4.19e-05 ***\nL(LRM, 1)     0.3192     0.1367   2.336 0.024735 *  \nL(LRM, 2)     0.5326     0.1324   4.024 0.000255 ***\nL(LRM, 3)    -0.2687     0.1021  -2.631 0.012143 *  \nLRY           0.6728     0.1312   5.129 8.32e-06 ***\nL(LRY, 1)    -0.2574     0.1472  -1.749 0.088146 .  \nIBO          -1.0785     0.3217  -3.353 0.001790 ** \nL(IBO, 1)    -0.1062     0.5858  -0.181 0.857081    \nL(IBO, 2)     0.2877     0.5691   0.505 0.616067    \nL(IBO, 3)    -0.9947     0.3925  -2.534 0.015401 *  \nIDE           0.1255     0.5545   0.226 0.822161    \nL(IDE, 1)    -0.3280     0.7213  -0.455 0.651847    \nL(IDE, 2)     1.4079     0.5520   2.550 0.014803 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.0191 on 39 degrees of freedom\nMultiple R-squared:  0.988, Adjusted R-squared:  0.9843 \nF-statistic: 266.8 on 12 and 39 DF,  p-value: &lt; 2.2e-16\n\n\n\nlibrary(lmtest)\nbgtest(ardl_3132) # Autocorrelation Test\n\n\n    Breusch-Godfrey test for serial correlation of order up to 1\n\ndata:  ardl_3132\nLM test = 1.1192, df = 1, p-value = 0.2901\n\nbptest(ardl_3132) # Heteroscedasticity Test\n\n\n    studentized Breusch-Pagan test\n\ndata:  ardl_3132\nBP = 4.4815, df = 12, p-value = 0.9731\n\n\n\n# Cointegration Test\nfbounds &lt;- bounds_f_test(ardl_3132, case = 2, alpha = 0.05)\nfbounds$tab\n\n  statistic Lower-bound I(0) Upper-bound I(1) alpha     p.value\nF  5.116768          2.77498          3.65953  0.05 0.004417563\n\n\n\n# ARDL-ECM\nuecm_3132 &lt;- uecm(LRM ~ LRY + IBO + IDE, data = denmark, order = c(3,1,3,2))\nsummary(uecm_3132)\n\n\nTime series regression with \"ts\" data:\nStart = 1974(4), End = 1978(7)\n\nCall:\ndynlm::dynlm(formula = full_formula, data = data, start = start, \n    end = end)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.029939 -0.008856 -0.002562  0.008190  0.072577 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   2.62019    0.56777   4.615 4.19e-05 ***\nL(LRM, 1)    -0.41685    0.09166  -4.548 5.15e-05 ***\nL(LRY, 1)     0.41538    0.11761   3.532  0.00108 ** \nL(IBO, 1)    -1.89172    0.39111  -4.837 2.09e-05 ***\nL(IDE, 1)     1.20534    0.44690   2.697  0.01028 *  \nd(L(LRM, 1)) -0.26394    0.10192  -2.590  0.01343 *  \nd(L(LRM, 2))  0.26867    0.10213   2.631  0.01214 *  \nd(LRY)        0.67280    0.13116   5.129 8.32e-06 ***\nd(IBO)       -1.07852    0.32170  -3.353  0.00179 ** \nd(L(IBO, 1))  0.70701    0.46874   1.508  0.13953    \nd(L(IBO, 2))  0.99468    0.39251   2.534  0.01540 *  \nd(IDE)        0.12546    0.55445   0.226  0.82216    \nd(L(IDE, 1)) -1.40786    0.55204  -2.550  0.01480 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.0191 on 39 degrees of freedom\nMultiple R-squared:  0.7458,    Adjusted R-squared:  0.6676 \nF-statistic: 9.537 on 12 and 39 DF,  p-value: 3.001e-08\n\n\n\n# ARDL-ECM 2\nrecm_3132 &lt;- recm(uecm_3132, case = 2)\nsummary(recm_3132)\n\n\nTime series regression with \"zooreg\" data:\nStart = Apr 1974, End = Jul 1978\n\nCall:\ndynlm::dynlm(formula = full_formula, data = data, start = start, \n    end = end)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.029939 -0.008856 -0.002562  0.008190  0.072577 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \nd(L(LRM, 1)) -0.26394    0.09008  -2.930 0.005405 ** \nd(L(LRM, 2))  0.26867    0.09127   2.944 0.005214 ** \nd(LRY)        0.67280    0.11591   5.805 7.03e-07 ***\nd(IBO)       -1.07852    0.30025  -3.592 0.000837 ***\nd(L(IBO, 1))  0.70701    0.44359   1.594 0.118300    \nd(L(IBO, 2))  0.99468    0.36491   2.726 0.009242 ** \nd(IDE)        0.12546    0.48290   0.260 0.796248    \nd(L(IDE, 1)) -1.40786    0.48867  -2.881 0.006160 ** \nect          -0.41685    0.07849  -5.311 3.63e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.01819 on 43 degrees of freedom\n  (0 observations deleted due to missingness)\nMultiple R-squared:  0.7613,    Adjusted R-squared:  0.7113 \nF-statistic: 15.24 on 9 and 43 DF,  p-value: 9.545e-11\n\n\n\n# Short Run Coefficients\nmultipliers(ardl_3132, type = \"sr\")\n\n         Term   Estimate Std. Error    t value     Pr(&gt;|t|)\n1 (Intercept)  2.6201916  0.5677679  4.6148990 4.186867e-05\n2         LRY  0.6727993  0.1311638  5.1294603 8.317401e-06\n3         IBO -1.0785180  0.3217011 -3.3525465 1.790030e-03\n4         IDE  0.1254643  0.5544522  0.2262852 8.221614e-01\n\n\n\n# Long Run Coefficients\nmultipliers(ardl_3132, type = \"lr\")\n\n         Term   Estimate Std. Error   t value     Pr(&gt;|t|)\n1 (Intercept)  6.2856579  0.7719160  8.142930 6.107445e-10\n2         LRY  0.9964676  0.1239310  8.040503 8.358472e-10\n3         IBO -4.5381160  0.5202961 -8.722180 1.058619e-10\n4         IDE  2.8915201  0.9950853  2.905801 6.009239e-03\n\n\n\nlibrary(lmtest) # for resettest()\nlibrary(strucchange) # for efp(), and sctest()\nresettest(uecm_3132, type = c(\"regressor\"))\n\n\n    RESET test\n\ndata:  uecm_3132\nRESET = 1.2408, df1 = 24, df2 = 15, p-value = 0.3383\n\n\n\n# Stability\nuecm_3132_lm_names &lt;- to_lm(uecm_3132, fix_names = TRUE)\nfluctuation &lt;- efp(uecm_3132_lm_names$full_formula, \n                   data = uecm_3132_lm_names$model)\nplot(fluctuation)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Multivariate Time Series</span>"
    ]
  },
  {
    "objectID": "05-Bab5.html",
    "href": "05-Bab5.html",
    "title": "5  Panel Data Regression",
    "section": "",
    "text": "5.1 Static Panel Data\nlibrary(plm)\nmodel1 = log(realgdp) ~ log(population) + log(investment) + log(hdi)\n# time vs individual effect\npFtest(model1, data = datapanel, effect = \"time\")\n\n\n    F test for time effects\n\ndata:  model1\nF = 3.1305, df1 = 6, df2 = 221, p-value = 0.005777\nalternative hypothesis: significant effects\n\npFtest(model1, data = datapanel, effect = \"individual\")\n\n\n    F test for individual effects\n\ndata:  model1\nF = 824.45, df1 = 32, df2 = 195, p-value &lt; 2.2e-16\nalternative hypothesis: significant effects\n\npFtest(model1, data = datapanel, effect = \"twoways\")\n\n\n    F test for twoways effects\n\ndata:  model1\nF = 812.75, df1 = 38, df2 = 189, p-value &lt; 2.2e-16\nalternative hypothesis: significant effects",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Panel Data Regression</span>"
    ]
  },
  {
    "objectID": "05-Bab5.html#static-panel-data",
    "href": "05-Bab5.html#static-panel-data",
    "title": "5  Panel Data Regression",
    "section": "",
    "text": "5.1.1 Pooled OLS\n\nPOLS &lt;- plm(model1, data = datapanel, \n                      index = c(\"province\", \"year\"), \n                      effect = \"twoways\", model = \"pooling\")\nsummary(POLS)\n\nPooling Model\n\nCall:\nplm(formula = model1, data = datapanel, effect = \"twoways\", model = \"pooling\", \n    index = c(\"province\", \"year\"))\n\nBalanced Panel: n = 33, T = 7, N = 231\n\nResiduals:\n     Min.   1st Qu.    Median   3rd Qu.      Max. \n-0.802950 -0.288399 -0.071922  0.204733  1.211596 \n\nCoefficients:\n                  Estimate Std. Error t-value  Pr(&gt;|t|)    \n(Intercept)     -14.998414   1.789923 -8.3794 5.578e-15 ***\nlog(population)   0.761682   0.034219 22.2592 &lt; 2.2e-16 ***\nlog(investment)   0.200796   0.018761 10.7031 &lt; 2.2e-16 ***\nlog(hdi)          3.187128   0.432136  7.3753 3.050e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    316.63\nResidual Sum of Squares: 37.477\nR-Squared:      0.88164\nAdj. R-Squared: 0.88008\nF-statistic: 563.624 on 3 and 227 DF, p-value: &lt; 2.22e-16\n\n\n\n\n5.1.2 Fixed Effects Model\n\nFEM &lt;- plm(model1, data = datapanel, \n                      index = c(\"province\", \"year\"), \n                      effect = \"twoways\", model = \"within\")\n\nsummary(FEM)\n\nTwoways effects Within Model\n\nCall:\nplm(formula = model1, data = datapanel, effect = \"twoways\", model = \"within\", \n    index = c(\"province\", \"year\"))\n\nBalanced Panel: n = 33, T = 7, N = 231\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-0.1065933 -0.0108718  0.0010591  0.0107126  0.1302578 \n\nCoefficients:\n                  Estimate Std. Error t-value Pr(&gt;|t|)  \nlog(population) -0.4403249  0.2194092 -2.0069  0.04619 *\nlog(investment) -0.0046652  0.0039298 -1.1871  0.23666  \nlog(hdi)         1.4472500  0.7092888  2.0404  0.04270 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    0.24452\nResidual Sum of Squares: 0.22795\nR-Squared:      0.067783\nAdj. R-Squared: -0.13444\nF-statistic: 4.58081 on 3 and 189 DF, p-value: 0.0040297\n\n\n\n# FEM vs. Pooled OLS\npFtest(FEM, POLS)\n\n\n    F test for twoways effects\n\ndata:  model1\nF = 812.75, df1 = 38, df2 = 189, p-value &lt; 2.2e-16\nalternative hypothesis: significant effects\n\n\n\n\n5.1.3 Random Effects Model\n\nREM &lt;- plm(model1, data = datapanel, \n                      index = c(\"province\", \"year\"), \n                      effect = \"twoways\", model = \"random\")\nsummary(REM)\n\nTwoways effects Random Effect Model \n   (Swamy-Arora's transformation)\n\nCall:\nplm(formula = model1, data = datapanel, effect = \"twoways\", model = \"random\", \n    index = c(\"province\", \"year\"))\n\nBalanced Panel: n = 33, T = 7, N = 231\n\nEffects:\n                   var  std.dev share\nidiosyncratic 0.001206 0.034728 0.008\nindividual    0.141041 0.375555 0.992\ntime          0.000000 0.000000 0.000\ntheta: 0.9651 (id) 0 (time) 0 (total)\n\nResiduals:\n      Min.    1st Qu.     Median    3rd Qu.       Max. \n-0.1099833 -0.0205049  0.0012902  0.0165381  0.1635731 \n\nCoefficients:\n                   Estimate  Std. Error z-value Pr(&gt;|z|)    \n(Intercept)     -2.1127e+01  1.0047e+00 -21.029   &lt;2e-16 ***\nlog(population)  8.9072e-01  7.1716e-02  12.420   &lt;2e-16 ***\nlog(investment)  9.0107e-04  4.1329e-03   0.218   0.8274    \nlog(hdi)         4.5687e+00  2.2971e-01  19.889   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    3.599\nResidual Sum of Squares: 0.35333\nR-Squared:      0.90183\nAdj. R-Squared: 0.90053\nChisq: 2085.22 on 3 DF, p-value: &lt; 2.22e-16\n\n\n\n\n5.1.4 Hausman Test\n\nphtest(FEM,REM)\n\n\n    Hausman Test\n\ndata:  model1\nchisq = 46.609, df = 3, p-value = 4.208e-10\nalternative hypothesis: one model is inconsistent\n\n\n\n\n5.1.5 Model Diagnostics\n\n# Multicolinearity\nlibrary(car)\n\nLoading required package: carData\n\nvif(POLS)\n\nlog(population) log(investment)        log(hdi) \n       1.596289        1.641147        1.119590 \n\ncor(datapanel[,4:6])\n\n           population investment       hdi\npopulation  1.0000000  0.7052198 0.1212988\ninvestment  0.7052198  1.0000000 0.3222325\nhdi         0.1212988  0.3222325 1.0000000\n\n\n\nlibrary(lmtest)\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n# Heteroscedasticity\nbptest(FEM) \n\n\n    studentized Breusch-Pagan test\n\ndata:  FEM\nBP = 32.396, df = 3, p-value = 4.319e-07\n\n# Autocorrelation\npbgtest(FEM)\n\n\n    Breusch-Godfrey/Wooldridge test for serial correlation in panel models\n\ndata:  model1\nchisq = 84.76, df = 7, p-value = 1.468e-15\nalternative hypothesis: serial correlation in idiosyncratic errors\n\n\n\n# Cluster Robust Standard Error\nlibrary(sandwich)\ncoeftest(FEM, vcovHC(FEM, type = \"sss\", cluster = \"group\"))\n\n\nt test of coefficients:\n\n                  Estimate Std. Error t value Pr(&gt;|t|)\nlog(population) -0.4403249  0.4093013 -1.0758   0.2834\nlog(investment) -0.0046652  0.0056843 -0.8207   0.4128\nlog(hdi)         1.4472500  1.0807171  1.3392   0.1821\n\n\n\n# HAC Robust Standard Error\ncoeftest(FEM, vcovHC(FEM, method=\"arellano\"))\n\n\nt test of coefficients:\n\n                  Estimate Std. Error t value Pr(&gt;|t|)\nlog(population) -0.4403249  0.4012959 -1.0973   0.2739\nlog(investment) -0.0046652  0.0055732 -0.8371   0.4036\nlog(hdi)         1.4472500  1.0595795  1.3659   0.1736",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Panel Data Regression</span>"
    ]
  },
  {
    "objectID": "05-Bab5.html#dynamic-panel-data",
    "href": "05-Bab5.html#dynamic-panel-data",
    "title": "5  Panel Data Regression",
    "section": "5.2 Dynamic Panel Data",
    "text": "5.2 Dynamic Panel Data\n\nhead(datapanel)\n\n# A tibble: 6 × 6\n  province  year realgdp population investment   hdi\n  &lt;chr&gt;    &lt;dbl&gt;   &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Aceh      2010 101545.    4523100       82.3  67.1\n2 Aceh      2011 104874.    4619000      463.   67.4\n3 Aceh      2012 108915.    4715100     1726.   67.8\n4 Aceh      2013 111756.    4811100     4785.   68.3\n5 Aceh      2014 113488.    4906800     5497.   68.8\n6 Aceh      2015 112672.    5002000     4485.   69.4\n\n\n\n# lag(log(realgdp), 2:7) = Instrument\nmodeldyn1 = log(realgdp) ~ lag(log(realgdp)) + log(population) + log(investment) + log(hdi) | lag(log(realgdp),2:7) \n# Dynamic OLS and FEM\nmodeldyn2 = log(realgdp) ~ lag(log(realgdp)) + log(population) + log(investment) + log(hdi)\n\n\n5.2.1 First Difference GMM\n\nfd.gmm = pgmm(modeldyn1, data = datapanel)\n\nWarning in pgmm(modeldyn1, data = datapanel): the second-step matrix is\nsingular, a general inverse is used\n\nsummary(fd.gmm)\n\nWarning in vcovHC.pgmm(object): a general inverse is used\n\n\nTwoways effects One-step model Difference GMM \n\nCall:\npgmm(formula = modeldyn1, data = datapanel)\n\nBalanced Panel: n = 33, T = 7, N = 231\n\nNumber of Observations Used: 165\nResiduals:\n      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. \n-0.0926516 -0.0071905 -0.0006685  0.0000000  0.0051944  0.1291078 \n\nCoefficients:\n                    Estimate Std. Error z-value  Pr(&gt;|z|)    \nlag(log(realgdp))  0.7312958  0.2057587  3.5541 0.0003792 ***\nlog(population)   -0.1750407  0.1798151 -0.9734 0.3303305    \nlog(investment)    0.0013969  0.0022465  0.6218 0.5340580    \nlog(hdi)           2.1197608  1.3035304  1.6262 0.1039137    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSargan test: chisq(14) = 25.4339 (p-value = 0.030518)\nAutocorrelation test (1): normal = -1.836971 (p-value = 0.066214)\nAutocorrelation test (2): normal = 1.555262 (p-value = 0.11988)\nWald test for coefficients: chisq(4) = 95.86464 (p-value = &lt; 2.22e-16)\nWald test for time dummies: chisq(5) = 8.364699 (p-value = 0.13725)\n\n\n\n\n5.2.2 System GMM\n\nsys.gmm = pgmm(modeldyn1, data = datapanel, transformation=\"ld\")\n\nWarning in pgmm(modeldyn1, data = datapanel, transformation = \"ld\"): the\nsecond-step matrix is singular, a general inverse is used\n\nsummary(sys.gmm)\n\nWarning in vcovHC.pgmm(object): a general inverse is used\n\n\nTwoways effects One-step model System GMM \n\nCall:\npgmm(formula = modeldyn1, data = datapanel, transformation = \"ld\")\n\nBalanced Panel: n = 33, T = 7, N = 231\n\nNumber of Observations Used: 363\nResiduals:\n      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. \n-0.1198240 -0.0083907  0.0001403  0.0000000  0.0065018  0.1402918 \n\nCoefficients:\n                   Estimate Std. Error z-value  Pr(&gt;|z|)    \nlag(log(realgdp)) 0.9686425  0.0107842 89.8208 &lt; 2.2e-16 ***\nlog(population)   0.0207419  0.0078302  2.6490  0.008074 ** \nlog(investment)   0.0070513  0.0029150  2.4190  0.015565 *  \nlog(hdi)          0.1144280  0.0582058  1.9659  0.049308 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSargan test: chisq(22) = 23.67029 (p-value = 0.36475)\nAutocorrelation test (1): normal = -1.663193 (p-value = 0.096274)\nAutocorrelation test (2): normal = 1.368565 (p-value = 0.17114)\nWald test for coefficients: chisq(4) = 314880.1 (p-value = &lt; 2.22e-16)\nWald test for time dummies: chisq(5) = 29.57621 (p-value = 1.7869e-05)\n\n\n\n\n5.2.3 Model Diagnotics\n\n# FEM\nFEMdyn = plm(modeldyn2, data = datapanel, index=c(\"province\",\"year\"), model=\"within\")\nsummary(FEMdyn)\n\nOneway (individual) effect Within Model\n\nCall:\nplm(formula = modeldyn2, data = datapanel, model = \"within\", \n    index = c(\"province\", \"year\"))\n\nBalanced Panel: n = 33, T = 6, N = 198\n\nResiduals:\n       Min.     1st Qu.      Median     3rd Qu.        Max. \n-5.8397e-02 -6.5483e-03  1.4102e-05  5.9536e-03  1.1759e-01 \n\nCoefficients:\n                    Estimate Std. Error t-value  Pr(&gt;|t|)    \nlag(log(realgdp))  0.7670629  0.0397433 19.3004 &lt; 2.2e-16 ***\nlog(population)   -0.2488432  0.1100829 -2.2605   0.02513 *  \nlog(investment)   -0.0014210  0.0024243 -0.5861   0.55862    \nlog(hdi)           1.8786968  0.2913007  6.4493 1.253e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    1.9728\nResidual Sum of Squares: 0.050149\nR-Squared:      0.97458\nAdj. R-Squared: 0.96889\nF-statistic: 1543.1 on 4 and 161 DF, p-value: &lt; 2.22e-16\n\n# OLS\nOLSdyn = plm(modeldyn2, data = datapanel, index=c(\"province\",\"year\"), model=\"pooling\")\nsummary(OLSdyn)\n\nPooling Model\n\nCall:\nplm(formula = modeldyn2, data = datapanel, model = \"pooling\", \n    index = c(\"province\", \"year\"))\n\nBalanced Panel: n = 33, T = 6, N = 198\n\nResiduals:\n       Min.     1st Qu.      Median     3rd Qu.        Max. \n-0.10036444 -0.00975944 -0.00044271  0.00946369  0.12897120 \n\nCoefficients:\n                    Estimate Std. Error  t-value Pr(&gt;|t|)    \n(Intercept)       -0.1070843  0.1261711  -0.8487  0.39709    \nlag(log(realgdp))  0.9868710  0.0041424 238.2382  &lt; 2e-16 ***\nlog(population)    0.0088980  0.0036806   2.4175  0.01656 *  \nlog(investment)    0.0016145  0.0016016   1.0080  0.31470    \nlog(hdi)           0.0397307  0.0297085   1.3374  0.18268    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTotal Sum of Squares:    269.87\nResidual Sum of Squares: 0.09922\nR-Squared:      0.99963\nAdj. R-Squared: 0.99962\nF-statistic: 131187 on 4 and 193 DF, p-value: &lt; 2.22e-16\n\n\nFDGMM = 0.731 SysGMM = 0.968 FEM = 0.767 OLS = 0.986\nFEM &lt; GMM &lt; OLS Best Model: System GMM\n\nsummary(sys.gmm)\n\nWarning in vcovHC.pgmm(object): a general inverse is used\n\n\nTwoways effects One-step model System GMM \n\nCall:\npgmm(formula = modeldyn1, data = datapanel, transformation = \"ld\")\n\nBalanced Panel: n = 33, T = 7, N = 231\n\nNumber of Observations Used: 363\nResiduals:\n      Min.    1st Qu.     Median       Mean    3rd Qu.       Max. \n-0.1198240 -0.0083907  0.0001403  0.0000000  0.0065018  0.1402918 \n\nCoefficients:\n                   Estimate Std. Error z-value  Pr(&gt;|z|)    \nlag(log(realgdp)) 0.9686425  0.0107842 89.8208 &lt; 2.2e-16 ***\nlog(population)   0.0207419  0.0078302  2.6490  0.008074 ** \nlog(investment)   0.0070513  0.0029150  2.4190  0.015565 *  \nlog(hdi)          0.1144280  0.0582058  1.9659  0.049308 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nSargan test: chisq(22) = 23.67029 (p-value = 0.36475)\nAutocorrelation test (1): normal = -1.663193 (p-value = 0.096274)\nAutocorrelation test (2): normal = 1.368565 (p-value = 0.17114)\nWald test for coefficients: chisq(4) = 314880.1 (p-value = &lt; 2.22e-16)\nWald test for time dummies: chisq(5) = 29.57621 (p-value = 1.7869e-05)\n\n\n\n\n5.2.4 Speed of Adjustment\n\nalpha1 = sys.gmm$coef[1]\n1-alpha1\n\nlag(log(realgdp)) \n       0.03135749 \n\n\n\n\n5.2.5 Half Time\n\nlog(0.5)/log(sys.gmm$coef[1])\n\nlag(log(realgdp)) \n         21.75626 \n\n\n\n\n5.2.6 Short Run and Long Run Coefficients\n\nsys.gmm$coefficients[2] # Short Run Poppulation\n\nlog(population) \n     0.02074192 \n\nsys.gmm$coefficients[2] / (1-alpha1) # Long Run Poppulation\n\nlog(population) \n      0.6614661",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Panel Data Regression</span>"
    ]
  },
  {
    "objectID": "06-Bab6.html",
    "href": "06-Bab6.html",
    "title": "6  Spatial Regression",
    "section": "",
    "text": "6.1 Library\n# install.packages(\"spdep\")\n# install.packages(\"spatialreg\")\n# install.packages(\"RColorBrewer\")\n# install.packages(\"splm\")\n# install.packages(\"sf\")\n# install.packages(\"ggplot2\")\nlibrary(spdep)\n\nWarning: package 'spdep' was built under R version 4.4.3\n\n\nLoading required package: spData\n\n\nWarning: package 'spData' was built under R version 4.4.3\n\n\nTo access larger datasets in this package, install the spDataLarge\npackage with: `install.packages('spDataLarge',\nrepos='https://nowosad.github.io/drat/', type='source')`\n\n\nLoading required package: sf\n\n\nWarning: package 'sf' was built under R version 4.4.3\n\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(spatialreg)\n\nWarning: package 'spatialreg' was built under R version 4.4.3\n\n\nLoading required package: Matrix\n\n\n\nAttaching package: 'spatialreg'\n\n\nThe following objects are masked from 'package:spdep':\n\n    get.ClusterOption, get.coresOption, get.mcOption,\n    get.VerboseOption, get.ZeroPolicyOption, set.ClusterOption,\n    set.coresOption, set.mcOption, set.VerboseOption,\n    set.ZeroPolicyOption\n\nlibrary(RColorBrewer)\nlibrary(splm)\n\nWarning: package 'splm' was built under R version 4.4.3\n\nlibrary(sf)\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.4.3",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spatial Regression</span>"
    ]
  },
  {
    "objectID": "06-Bab6.html#cross-section",
    "href": "06-Bab6.html#cross-section",
    "title": "6  Spatial Regression",
    "section": "6.2 Cross-Section",
    "text": "6.2 Cross-Section\n\nlibrary(readxl)\nprovinsi &lt;- read_excel(\"Data/Bab6/provinsi Indonesia.xlsx\")\nhead(provinsi)\n\n# A tibble: 6 × 5\n  province    pdrb investment infra revenue\n  &lt;chr&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 Aceh     129093.      4485.  0.37  11694.\n2 Sumut    571722.     21477.  0.52   8481.\n3 Sumbar   179952.      2340.  0.52   4052.\n4 Riau     652762.     18957.  0.28   6911.\n5 Jambi    155066.      5026.  0.26   3130.\n6 Sumsel   331766.     19853.  0.2    5990.\n\n\n\n6.2.1 OLS Model\n\nmodel1 = log(pdrb) ~ log(investment) + log(infra) + log(revenue)\nols = lm(model1, data=provinsi)\nsummary(ols)\n\n\nCall:\nlm(formula = model1, data = provinsi)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.82306 -0.33812  0.00604  0.32399  0.83581 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      3.95883    0.85379   4.637 6.48e-05 ***\nlog(investment)  0.42187    0.08375   5.037 2.10e-05 ***\nlog(infra)       0.24988    0.07807   3.201  0.00323 ** \nlog(revenue)     0.53807    0.15207   3.538  0.00133 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4094 on 30 degrees of freedom\nMultiple R-squared:  0.8883,    Adjusted R-squared:  0.8771 \nF-statistic: 79.53 on 3 and 30 DF,  p-value: 2.226e-14\n\n\n\n\n6.2.2 Weight Matrix\n\nmigrasi &lt;- read_excel(\"Data/Bab6/matriks migrasi.xlsx\", sheet = 2, col_names = FALSE)\n\nNew names:\n• `` -&gt; `...1`\n• `` -&gt; `...2`\n• `` -&gt; `...3`\n• `` -&gt; `...4`\n• `` -&gt; `...5`\n• `` -&gt; `...6`\n• `` -&gt; `...7`\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n• `` -&gt; `...10`\n• `` -&gt; `...11`\n• `` -&gt; `...12`\n• `` -&gt; `...13`\n• `` -&gt; `...14`\n• `` -&gt; `...15`\n• `` -&gt; `...16`\n• `` -&gt; `...17`\n• `` -&gt; `...18`\n• `` -&gt; `...19`\n• `` -&gt; `...20`\n• `` -&gt; `...21`\n• `` -&gt; `...22`\n• `` -&gt; `...23`\n• `` -&gt; `...24`\n• `` -&gt; `...25`\n• `` -&gt; `...26`\n• `` -&gt; `...27`\n• `` -&gt; `...28`\n• `` -&gt; `...29`\n• `` -&gt; `...30`\n• `` -&gt; `...31`\n• `` -&gt; `...32`\n• `` -&gt; `...33`\n• `` -&gt; `...34`\n\nmigrasi = as.matrix(migrasi)\nW.migrasi = mat2listw(migrasi)\n\nWarning in mat2listw(migrasi): style is M (missing); style should be set to a\nvalid value\n\n\n\n\n6.2.3 Moran Test and Plot\n\nmoran.lm = lm.morantest(ols, W.migrasi)\nmoran.lm\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = model1, data = provinsi)\nweights: W.migrasi\n\nMoran I statistic standard deviate = 3.4669, p-value = 0.0002632\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n     0.213239417     -0.048308437      0.005691365 \n\nmoran.plot(ols$residuals, W.migrasi)\n\n\n\n\n\n\n\n\n\n\n6.2.4 LM Test\n\nLM = lm.LMtests(ols, W.migrasi, test=\"all\")\n\nPlease update scripts to use lm.RStests in place of lm.LMtests\n\n\nWarning in lm.RStests(model = model, listw = listw, zero.policy = zero.policy,\n: Spatial weights matrix not row standardized\n\nLM\n\n\n    Rao's score (a.k.a Lagrange multiplier) diagnostics for spatial\n    dependence\n\ndata:  \nmodel: lm(formula = model1, data = provinsi)\ntest weights: listw\n\nRSerr = 5.4456, df = 1, p-value = 0.01962\n\n\n    Rao's score (a.k.a Lagrange multiplier) diagnostics for spatial\n    dependence\n\ndata:  \nmodel: lm(formula = model1, data = provinsi)\ntest weights: listw\n\nRSlag = 3.2163, df = 1, p-value = 0.07291\n\n\n    Rao's score (a.k.a Lagrange multiplier) diagnostics for spatial\n    dependence\n\ndata:  \nmodel: lm(formula = model1, data = provinsi)\ntest weights: listw\n\nadjRSerr = 3.0702, df = 1, p-value = 0.07974\n\n\n    Rao's score (a.k.a Lagrange multiplier) diagnostics for spatial\n    dependence\n\ndata:  \nmodel: lm(formula = model1, data = provinsi)\ntest weights: listw\n\nadjRSlag = 0.84087, df = 1, p-value = 0.3591\n\n\n    Rao's score (a.k.a Lagrange multiplier) diagnostics for spatial\n    dependence\n\ndata:  \nmodel: lm(formula = model1, data = provinsi)\ntest weights: listw\n\nSARMA = 6.2865, df = 2, p-value = 0.04314\n\n\n\n\n6.2.5 SAR Model\n\nsar.provinsi = lagsarlm(model1, data=provinsi, W.migrasi)\nsummary(sar.provinsi)\n\n\nCall:lagsarlm(formula = model1, data = provinsi, listw = W.migrasi)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.679482 -0.291161 -0.083437  0.336403  0.808845 \n\nType: lag \nCoefficients: (asymptotic standard errors) \n                Estimate Std. Error z value  Pr(&gt;|z|)\n(Intercept)     1.744150   1.437574  1.2133 0.2250310\nlog(investment) 0.380784   0.079364  4.7979 1.603e-06\nlog(infra)      0.207431   0.073675  2.8155 0.0048701\nlog(revenue)    0.529174   0.136397  3.8797 0.0001046\n\nRho: 0.21114, LR test value: 3.0033, p-value: 0.083096\nAsymptotic standard error: 0.12002\n    z-value: 1.7592, p-value: 0.07854\nWald statistic: 3.0949, p-value: 0.07854\n\nLog likelihood: -14.24739 for lag model\nML residual variance (sigma squared): 0.13454, (sigma: 0.36679)\nNumber of observations: 34 \nNumber of parameters estimated: 6 \nAIC: 40.495, (AIC for lm: 41.498)\nLM test for residual autocorrelation\ntest value: 2.5558, p-value: 0.10989\n\n\n\n\n6.2.6 Impacts (Spillover)\n\nimpacts(sar.provinsi, listw=W.migrasi)\n\nImpact measures (lag, exact):\n                   Direct   Indirect     Total\nlog(investment) 0.3831961 0.09950271 0.4826988\nlog(infra)      0.2087457 0.05420401 0.2629497\nlog(revenue)    0.5325268 0.13827873 0.6708055\n\n\n\n\n6.2.7 SEM Model\n\nsem.provinsi = errorsarlm(model1, data=provinsi, W.migrasi)\nsummary(sem.provinsi)\n\n\nCall:errorsarlm(formula = model1, data = provinsi, listw = W.migrasi)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.770148 -0.273480 -0.020662  0.325690  0.647156 \n\nType: error \nCoefficients: (asymptotic standard errors) \n                Estimate Std. Error z value  Pr(&gt;|z|)\n(Intercept)     3.831947   0.772493  4.9605 7.031e-07\nlog(investment) 0.410266   0.072801  5.6354 1.746e-08\nlog(infra)      0.209178   0.071237  2.9364  0.003321\nlog(revenue)    0.550807   0.132071  4.1705 3.039e-05\n\nLambda: 0.60794, LR test value: 5.1345, p-value: 0.023455\nAsymptotic standard error: 0.19219\n    z-value: 3.1632, p-value: 0.0015604\nWald statistic: 10.006, p-value: 0.0015604\n\nLog likelihood: -13.18178 for error model\nML residual variance (sigma squared): 0.11956, (sigma: 0.34577)\nNumber of observations: 34 \nNumber of parameters estimated: 6 \nAIC: 38.364, (AIC for lm: 41.498)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spatial Regression</span>"
    ]
  },
  {
    "objectID": "06-Bab6.html#spatial-panel",
    "href": "06-Bab6.html#spatial-panel",
    "title": "6  Spatial Regression",
    "section": "6.3 Spatial Panel",
    "text": "6.3 Spatial Panel\n\nlibrary(readxl)\npaneljateng &lt;- read_excel(\"Data/Bab6/panel jateng.xlsx\")\nhead(paneljateng)\n\n# A tibble: 6 × 8\n  Region        Tahun      PDRB     AK     PAD      UMK   IPM NO   \n  &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n1 Kab. Cilacap   2011 78156819. 797518 173141.  718667.  64.7 01   \n2 Kab. Cilacap   2012 79702238. 716465 196673.  773000   65.7 01   \n3 Kab. Cilacap   2013 81022670. 729059 278508.  887667   66.8 01   \n4 Kab. Cilacap   2014 83392999. 736247 373907. 1016667.  67.2 01   \n5 Kab. Cilacap   2015 88777805. 715819 409846. 1195667.  67.8 01   \n6 Kab. Banyumas  2011 24538596. 761034 193263.  750000   67.4 02   \n\n\n\n6.3.1 Static Panel Regression\n\nlibrary(plm)\nmodelpanel = log(PDRB) ~ log(AK) + log(PAD) + log(UMK) + log(IPM)\nfem1 = plm(modelpanel, data=paneljateng, index=c(\"Region\", \"Tahun\"), model=\"within\")\nrem1 = plm(modelpanel, data=paneljateng, index=c(\"Region\", \"Tahun\"), model=\"random\")\nphtest(fem1, rem1)\n\n\n    Hausman Test\n\ndata:  modelpanel\nchisq = 37.156, df = 4, p-value = 1.673e-07\nalternative hypothesis: one model is inconsistent\n\n\n\nlibrary(lmtest)\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nbptest(fem1)\n\n\n    studentized Breusch-Pagan test\n\ndata:  fem1\nBP = 5.8081, df = 4, p-value = 0.2139\n\npbgtest(fem1)\n\n\n    Breusch-Godfrey/Wooldridge test for serial correlation in panel models\n\ndata:  modelpanel\nchisq = 51.619, df = 5, p-value = 6.458e-10\nalternative hypothesis: serial correlation in idiosyncratic errors\n\n\n\n\n6.3.2 Depndency Test\n\npcdtest(fem1, test=\"lm\")\n\n\n    Breusch-Pagan LM test for cross-sectional dependence in panels\n\ndata:  log(PDRB) ~ log(AK) + log(PAD) + log(UMK) + log(IPM)\nchisq = 1268.3, df = 595, p-value &lt; 2.2e-16\nalternative hypothesis: cross-sectional dependence\n\npcdtest(fem1, test=\"cd\")\n\n\n    Pesaran CD test for cross-sectional dependence in panels\n\ndata:  log(PDRB) ~ log(AK) + log(PAD) + log(UMK) + log(IPM)\nz = 12.724, p-value &lt; 2.2e-16\nalternative hypothesis: cross-sectional dependence\n\n\n\n\n6.3.3 Maps Visualization\n\njateng.map = st_read('Data/Bab6/peta jateng/Jawa_Tengah.shp')\n\nReading layer `Jawa_Tengah' from data source \n  `D:\\Dokumentasi\\econometricsbook\\Data\\Bab6\\peta jateng\\Jawa_Tengah.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 35 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 108.5559 ymin: -8.211962 xmax: 111.6914 ymax: -5.725698\nGeodetic CRS:  WGS 84\n\n\n\njateng2011 = subset(paneljateng,(Tahun==2011))\njateng2011 = merge(jateng.map, jateng2011, by.x=\"KABKOTNO\", by.y=\"NO\")\njateng2011 &lt;- st_make_valid(jateng2011)\nggplot(jateng2011) +\n  geom_sf(aes(fill = PDRB)) +\n  scale_fill_gradientn(colours = brewer.pal(5, \"Blues\"),\n                       values = scales::rescale(seq(min(jateng2011$PDRB), \n                                                    max(jateng2011$PDRB)*1.01, \n                                                    length = 6))) +\n  theme_minimal() +\n  labs(fill = \"PDRB\")\n\n\n\n\n\n\n\n\n\nggplot(jateng2011) +\n  geom_sf(aes(fill = IPM)) +\n  scale_fill_gradientn(colours = brewer.pal(5, \"Greens\"),\n                       values = scales::rescale(seq(min(jateng2011$IPM), \n                                                    max(jateng2011$IPM)*1.01, \n                                                    length = 6))) +\n  theme_minimal() +\n  labs(fill = \"IPM\")\n\n\n\n\n\n\n\n\n\n\n6.3.4 Function for Spatial Panel Evalutation\n\ngodf.spml&lt;-function(object, k=2, criterion=c(\"AIC\", \"BIC\"),  ...){\n  s&lt;-summary(object)\n  l&lt;-s$logLik\n  np&lt;- length(coef(s))\n  N&lt;- nrow(s$model)\n  if(criterion==\"AIC\"){\n    aic&lt;- -2*l+k*np\n    names(aic)&lt;-\"AIC\"\n    return(aic)\n  }\n  if(criterion==\"BIC\"){\n    bic&lt;- -2*l+log(N)*np\n    names(bic)&lt;-\"BIC\"\n    if(k!=2){\n      warning(\"parameter &lt;k&gt; not used for BIC\")\n    }\n    return(bic)\n  }\n}\n\n\n\n6.3.5 Spatial Panel Model with Contiguity Weight Matrix\n\njateng.map &lt;- st_make_valid(jateng.map)\nlistqueen = poly2nb(jateng.map, queen=TRUE)\nW.queen = nb2listw(listqueen, style=\"W\")\nW.queen\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 35 \nNumber of nonzero links: 148 \nPercentage nonzero weights: 12.08163 \nAverage number of links: 4.228571 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 35 1225 35 18.64242 151.0178\n\n\n\n# SAR Model\nsar.fem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"within\", lag=TRUE, spatial.error=\"none\")\nsar.rem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"random\", lag=TRUE, spatial.error=\"none\")\nsphtest(sar.fem.contig, sar.rem.contig)\n\n\n    Hausman test for spatial models\n\ndata:  modelpanel\nchisq = 0.15855, df = 4, p-value = 0.997\nalternative hypothesis: one model is inconsistent\n\ngodf.spml(sar.rem.contig, criterion=\"AIC\")\n\n      AIC \n-703.0118 \n\n\n\n# SEM Model\nsem.fem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"within\", lag=FALSE, spatial.error=\"b\")\nsem.rem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"random\", lag=FALSE, spatial.error=\"b\")\nsphtest(sem.fem.contig, sem.rem.contig)\n\n\n    Hausman test for spatial models\n\ndata:  modelpanel\nchisq = 5.4546, df = 4, p-value = 0.2438\nalternative hypothesis: one model is inconsistent\n\ngodf.spml(sem.rem.contig, criterion=\"AIC\")\n\n      AIC \n-633.5611 \n\n\n\n\n6.3.6 Spatial Panel Model with KNN Weight Matrix\n\n# K-nearest neighbour with 5 neighbour \ncentroids &lt;- st_centroid(jateng.map)\n\nWarning: st_centroid assumes attributes are constant over geometries\n\ncoords &lt;- st_coordinates(centroids)\nneighbour = knearneigh(coords, k=5, longlat=T) \nneighbourlist = knn2nb(neighbour)                              \nmat.knn5 = nb2mat(neighbourlist, style=\"W\")                     \nW.knn5 = nb2listw(neighbourlist, style=\"W\")\nW.knn5\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 35 \nNumber of nonzero links: 175 \nPercentage nonzero weights: 14.28571 \nAverage number of links: 5 \nNon-symmetric neighbours list\n\nWeights style: W \nWeights constants summary:\n   n   nn S0    S1     S2\nW 35 1225 35 12.44 144.48\n\n\n\n# SAR Model\nsar.fem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"within\", lag=TRUE, spatial.error=\"none\")\nsar.rem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"random\", lag=TRUE, spatial.error=\"none\")\nsphtest(sar.fem.5nn, sar.rem.5nn)\n\n\n    Hausman test for spatial models\n\ndata:  modelpanel\nchisq = 0.9208, df = 4, p-value = 0.9216\nalternative hypothesis: one model is inconsistent\n\ngodf.spml(sar.rem.5nn, criterion=\"AIC\")\n\n      AIC \n-717.8954 \n\n# SEM Model\nsem.fem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"within\", lag=FALSE, spatial.error=\"b\")\nsem.rem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"random\", lag=FALSE, spatial.error=\"b\")\nsphtest(sem.fem.5nn, sem.rem.5nn)\n\n\n    Hausman test for spatial models\n\ndata:  modelpanel\nchisq = 5.3246, df = 4, p-value = 0.2556\nalternative hypothesis: one model is inconsistent\n\ngodf.spml(sem.rem.5nn, criterion=\"AIC\")\n\n      AIC \n-636.4432 \n\n\n\n\n6.3.7 Best Model\n\nsummary(sar.rem.5nn)\n\nML panel with spatial lag, random effects \n\nCall:\nspreml(formula = formula, data = data, index = index, w = listw2mat(listw), \n    w2 = listw2mat(listw2), lag = lag, errors = errors, cl = cl)\n\nResiduals:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   11.2    12.1    12.4    12.4    12.7    14.2 \n\nError variance parameters:\n    Estimate Std. Error t-value  Pr(&gt;|t|)    \nphi   4204.2     1172.1  3.5868 0.0003348 ***\n\nSpatial autoregressive coefficient:\n       Estimate Std. Error t-value  Pr(&gt;|t|)    \nlambda 0.750456   0.053423  14.047 &lt; 2.2e-16 ***\n\nCoefficients:\n             Estimate Std. Error t-value Pr(&gt;|t|)   \n(Intercept) 1.2042585  0.7177210  1.6779 0.093368 . \nlog(AK)     0.0474276  0.0241591  1.9631 0.049630 * \nlog(PAD)    0.0134898  0.0063019  2.1406 0.032306 * \nlog(UMK)    0.0470068  0.0167872  2.8002 0.005108 **\nlog(IPM)    0.3633197  0.1772088  2.0502 0.040342 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n6.3.8 Impacts (Spillovr) - Only for SAR Model\n\n# Direct and Indirect Effect\ntime = length(unique(paneljateng$Tahun))\nsW.5knn = kronecker(Diagonal(time), listw2dgCMatrix(W.knn5))\nset.seed(12345)\ntrMatc = trW(sW.5knn, type=\"mult\")\nimp = impacts(sar.rem.5nn, tr = trMatc, R = 200)\nsummary(imp, zstats=TRUE, short=T)\n\nImpact measures (lag, trace):\n             Direct  Indirect      Total\nlog(AK)  0.05723256 0.1327900 0.19002256\nlog(PAD) 0.01627868 0.0377695 0.05404818\nlog(UMK) 0.05672481 0.1316119 0.18833673\nlog(IPM) 0.43843072 1.0172393 1.45567006\n========================================================\nSimulation results ( variance matrix):\n========================================================\nSimulated standard errors\n              Direct   Indirect      Total\nlog(AK)  0.029013340 0.08364084 0.10974771\nlog(PAD) 0.007350001 0.02062333 0.02706877\nlog(UMK) 0.021472770 0.08001914 0.09849884\nlog(IPM) 0.228933484 0.65969232 0.86740920\n\nSimulated z-values:\n           Direct Indirect    Total\nlog(AK)  1.994004 1.692971 1.817389\nlog(PAD) 2.422582 2.079346 2.242031\nlog(UMK) 2.675263 1.800226 2.045687\nlog(IPM) 1.772324 1.503129 1.610943\n\nSimulated p-values:\n         Direct    Indirect Total   \nlog(AK)  0.0461516 0.090461 0.069158\nlog(PAD) 0.0154107 0.037586 0.024959\nlog(UMK) 0.0074671 0.071825 0.040787\nlog(IPM) 0.0763407 0.132806 0.107192",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Spatial Regression</span>"
    ]
  },
  {
    "objectID": "07-Bab7.html",
    "href": "07-Bab7.html",
    "title": "7  Time Series Spillover - GVAR",
    "section": "",
    "text": "7.1 Library\nlibrary(Spillover)\n\nLoading required package: vars\n\n\nLoading required package: MASS\n\n\nLoading required package: strucchange\n\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nLoading required package: sandwich\n\n\nLoading required package: urca\n\n\nLoading required package: lmtest\n\nlibrary(vars)\nlibrary(urca)\nlibrary(splitstackshape)\nlibrary(igraph)\n\n\nAttaching package: 'igraph'\n\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\n\nThe following object is masked from 'package:base':\n\n    union\n\nlibrary(reshape)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Time Series Spillover - GVAR</span>"
    ]
  },
  {
    "objectID": "07-Bab7.html#data-diebold-yilmaz-2012",
    "href": "07-Bab7.html#data-diebold-yilmaz-2012",
    "title": "7  Time Series Spillover - GVAR",
    "section": "7.2 Data: Diebold-Yilmaz 2012",
    "text": "7.2 Data: Diebold-Yilmaz 2012\n\ndata(dy2012)\nhead(dy2012)  # in log volatility form\n\n        Date     Stocks      Bonds Commodities         FX\n1 1999-01-25  -9.891998 -10.081905   -9.797694 -12.971578\n2 1999-01-26  -9.353294 -10.090498  -11.475212 -13.237477\n3 1999-01-27  -9.314619 -10.103319  -15.317140  -9.749465\n4 1999-01-28  -8.997370 -10.090498  -12.044040 -10.853610\n5 1999-01-29  -8.855955  -9.426092  -12.928477 -11.788281\n6 1999-02-01 -10.282395  -8.936206  -12.821930 -11.308455\n\n\nlog volatility return: \\[\n\\sigma^2_{it} = 0.361[ln(P^{max}_{i,t}) - ln(P^{min}_{i,t-1}))]^2\n\\]\n\\[\n\\sigma_{it} = 100*(\\sqrt{252*\\sigma^2_{it}})\n\\]\n\nclass(dy2012)\n\n[1] \"data.frame\"\n\n\n\nnrow(dy2012)\n\n[1] 2771",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Time Series Spillover - GVAR</span>"
    ]
  },
  {
    "objectID": "07-Bab7.html#var-model",
    "href": "07-Bab7.html#var-model",
    "title": "7  Time Series Spillover - GVAR",
    "section": "7.3 VAR Model",
    "text": "7.3 VAR Model\n\nPP.test(dy2012$Stocks)\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  dy2012$Stocks\nDickey-Fuller = -32.546, Truncation lag parameter = 9, p-value = 0.01\n\nPP.test(dy2012$Bonds)\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  dy2012$Bonds\nDickey-Fuller = -41.249, Truncation lag parameter = 9, p-value = 0.01\n\nPP.test(dy2012$Commodities)\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  dy2012$Commodities\nDickey-Fuller = -48.523, Truncation lag parameter = 9, p-value = 0.01\n\nPP.test(dy2012$FX)\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  dy2012$FX\nDickey-Fuller = -47.527, Truncation lag parameter = 9, p-value = 0.01\n\n\n\n# Optimum Lag\nVARselect(dy2012[,-1], lag.max = 4, type = c(\"both\"))\n\n$selection\nAIC(n)  HQ(n)  SC(n) FPE(n) \n     4      4      4      4 \n\n$criteria\n                 1          2          3          4\nAIC(n) -0.11329876 -0.4490460 -0.5882320 -0.6679637\nHQ(n)  -0.09473562 -0.4181074 -0.5449180 -0.6122743\nSC(n)  -0.06190286 -0.3633861 -0.4683083 -0.5137760\nFPE(n)  0.89288389  0.6382368  0.5553084  0.5127520\n\n\n\n# VAR Model\nVAR_4 &lt;- VAR(dy2012[,-1], p=4)\nVAR_4\n\n\nVAR Estimation Results:\n======================= \n\nEstimated coefficients for equation Stocks: \n=========================================== \nCall:\nStocks = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n\n     Stocks.l1       Bonds.l1 Commodities.l1          FX.l1      Stocks.l2 \n  0.1835084630  -0.0242487169  -0.0036337209   0.0219988664   0.2741423171 \n      Bonds.l2 Commodities.l2          FX.l2      Stocks.l3       Bonds.l3 \n  0.0027926328  -0.0108044031   0.0040316592   0.2025153665   0.0360740337 \nCommodities.l3          FX.l3      Stocks.l4       Bonds.l4 Commodities.l4 \n -0.0158017651   0.0007938866   0.1620506569   0.0333733392  -0.0029608791 \n         FX.l4          const \n -0.0007384703  -1.3401330918 \n\n\nEstimated coefficients for equation Bonds: \n========================================== \nCall:\nBonds = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n\n     Stocks.l1       Bonds.l1 Commodities.l1          FX.l1      Stocks.l2 \n   0.068141170    0.163772247    0.052592815    0.004319034    0.025511120 \n      Bonds.l2 Commodities.l2          FX.l2      Stocks.l3       Bonds.l3 \n   0.174716290    0.024936542    0.013962476    0.041353468    0.129894730 \nCommodities.l3          FX.l3      Stocks.l4       Bonds.l4 Commodities.l4 \n  -0.043136698    0.011844827   -0.026075514    0.218597337    0.039128430 \n         FX.l4          const \n  -0.027491905   -1.080792116 \n\n\nEstimated coefficients for equation Commodities: \n================================================ \nCall:\nCommodities = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n\n     Stocks.l1       Bonds.l1 Commodities.l1          FX.l1      Stocks.l2 \n  -0.022755735    0.098201350    0.183333080    0.048298645   -0.013291588 \n      Bonds.l2 Commodities.l2          FX.l2      Stocks.l3       Bonds.l3 \n  -0.013132921    0.207410140    0.044188995   -0.049827512    0.004592325 \nCommodities.l3          FX.l3      Stocks.l4       Bonds.l4 Commodities.l4 \n   0.185198136   -0.037523992   -0.030251601    0.060251069    0.156050483 \n         FX.l4          const \n   0.038706445   -1.543777242 \n\n\nEstimated coefficients for equation FX: \n======================================= \nCall:\nFX = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n\n     Stocks.l1       Bonds.l1 Commodities.l1          FX.l1      Stocks.l2 \n    0.06467245    -0.01930672     0.02517504     0.06996402     0.03590206 \n      Bonds.l2 Commodities.l2          FX.l2      Stocks.l3       Bonds.l3 \n   -0.02073267     0.01066279     0.20847309    -0.01249224     0.03780188 \nCommodities.l3          FX.l3      Stocks.l4       Bonds.l4 Commodities.l4 \n   -0.00393800     0.18185464    -0.01552454     0.05072537     0.01667104 \n         FX.l4          const \n    0.11443511    -2.99838336",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Time Series Spillover - GVAR</span>"
    ]
  },
  {
    "objectID": "07-Bab7.html#volatility-spillover-dy-2012",
    "href": "07-Bab7.html#volatility-spillover-dy-2012",
    "title": "7  Time Series Spillover - GVAR",
    "section": "7.4 Volatility Spillover DY-2012",
    "text": "7.4 Volatility Spillover DY-2012\n\n# Total Spillover Index\nsp &lt;- G.spillover(VAR_4, n.ahead = 10, standardized = F )\nsp\n\n                               Stocks     Bonds Commodities        FX\nStocks                      88.757002  7.291185   0.3453279  3.606486\nBonds                       10.213545 81.445712   2.7269737  5.613770\nCommodities                  0.468118  3.695953  93.6941893  2.141740\nFX                           5.691579  7.026017   1.5477592 85.734645\nC. to others (spillover)    16.373241 18.013154   4.6200608 11.361996\nC. to others including own 105.130243 99.458866  98.3142500 97.096641\n                           C. from others\nStocks                          11.242998\nBonds                           18.554288\nCommodities                      6.305811\nFX                              14.265355\nC. to others (spillover)        12.592113\nC. to others including own     400.000000\n\n\nThe total volatility spillover appears in the lower right corner of Table, which indicates that, on average, across our entire sample, 12.6% of the volatility forecast error variance in all four markets comes from spillovers\n\nSpillover::net(sp)\n\nWarning in Spillover::net(sp): 'Spillover::net' is deprecated.\nUse 'dynamic.spillover' instead.\nSee help(\"Deprecated\")\n\n\n                   To      From        Net Transmitter\nStocks      16.373241 11.242998  5.1302430        TRUE\nBonds       18.013154 18.554288 -0.5411342       FALSE\nCommodities  4.620061  6.305811 -1.6857500       FALSE\nFX          11.361996 14.265355 -2.9033588       FALSE",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Time Series Spillover - GVAR</span>"
    ]
  },
  {
    "objectID": "07-Bab7.html#dynamic-spillover-index-rolling-sample-total-volatility-spillover",
    "href": "07-Bab7.html#dynamic-spillover-index-rolling-sample-total-volatility-spillover",
    "title": "7  Time Series Spillover - GVAR",
    "section": "7.5 Dynamic Spillover Index / rolling-sample total volatility spillover",
    "text": "7.5 Dynamic Spillover Index / rolling-sample total volatility spillover\n\n# Data Setting\ndata(dy2012)\ndy2012$Date &lt;- as.Date(dy2012$Date, \"%Y-%m-%d\")\ndy2012 &lt;- as.zoo(dy2012[,-1], order.by = dy2012$Date)\nclass(dy2012)\n\n[1] \"zoo\"\n\n\n\n# Generalized rolling spillover index based on a VAR(4)\nG_index&lt;- total.dynamic.spillover(dy2012, width = 200, index=\"generalized\", p=4) \nhead(G_index, n=10)\n\n1999-11-05 1999-11-08 1999-11-09 1999-11-10 1999-11-11 1999-11-12 1999-11-15 \n  13.50622   13.60646   13.16968   13.04980   12.95939   12.92011   14.27211 \n1999-11-16 1999-11-17 1999-11-18 \n  14.04579   13.90963   13.85581 \n\n\n\nplot(G_index)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Time Series Spillover - GVAR</span>"
    ]
  },
  {
    "objectID": "07-Bab7.html#directional-volatility-spillovers",
    "href": "07-Bab7.html#directional-volatility-spillovers",
    "title": "7  Time Series Spillover - GVAR",
    "section": "7.6 Directional volatility spillovers",
    "text": "7.6 Directional volatility spillovers\n\nlibrary(zoo)\ndata(dy2012) # re-import data\nclass(dy2012)\n\n[1] \"data.frame\"\n\n\n\ndy_results &lt;- dynamic.spillover(dy2012, width=200, remove.own = FALSE)\nstr(dy_results)\n\nList of 5\n $ from            :'data.frame':   2771 obs. of  5 variables:\n  ..$ Date       : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ Stocks     : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n $ to              :'data.frame':   2771 obs. of  5 variables:\n  ..$ Date       : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ Stocks     : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n $ net             :'data.frame':   2771 obs. of  5 variables:\n  ..$ Date       : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ Stocks     : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n $ net_pairwise    :'data.frame':   2771 obs. of  7 variables:\n  ..$ Date              : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ Stocks-Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Stocks-Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Stocks-FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Bonds-Commodities : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Bonds-FX          : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n  ..$ Commodities-FX    : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n $ from_to_pairwise:'data.frame':   44336 obs. of  3 variables:\n  ..$ Date     : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ variables: chr [1:44336] \"From: Stocks  to: Stocks\" \"From: Stocks  to: Bonds\" \"From: Stocks  to: Commodities\" \"From: Stocks  to: FX\" ...\n  ..$ value    : num [1:44336] 0 0 0 0 0 0 0 0 0 0 ...\n - attr(*, \"class\")= chr \"directional.spillover\"\n\n\n\n# Directional volatility spillovers, FROM four asset classes.\npp_from &lt;- plotdy(dy_results, direction = \"from\")\n\n\n\n\n\n\n\n\n\n# Directional volatility spillovers, TO four asset classes.\npp_to &lt;- plotdy(dy_results, direction = \"to\")\n\n\n\n\n\n\n\n\n\n# Net volatility spillovers, four asset classes\npp_net &lt;- plotdy(dy_results, direction = \"net\")\n\n\n\n\n\n\n\n\n\n# Net pairwise volatility spillovers\npp_netpairwise &lt;- plotdy(dy_results, direction = \"net_pairwise\")\n\n\n\n\n\n\n\n\n\npp_from_to_pairwise &lt;- plotdy(dy_results, direction = \"from_to_pairwise\")",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Time Series Spillover - GVAR</span>"
    ]
  },
  {
    "objectID": "07-Bab7.html#connectedness-network",
    "href": "07-Bab7.html#connectedness-network",
    "title": "7  Time Series Spillover - GVAR",
    "section": "7.7 Connectedness Network",
    "text": "7.7 Connectedness Network\n\nsp &lt;- G.spillover(VAR_4, n.ahead = 10, standardized = F )\ndatanet &lt;-  Spillover::net(sp)\n\nWarning in Spillover::net(sp): 'Spillover::net' is deprecated.\nUse 'dynamic.spillover' instead.\nSee help(\"Deprecated\")\n\ndatanet\n\n                   To      From        Net Transmitter\nStocks      16.373241 11.242998  5.1302430        TRUE\nBonds       18.013154 18.554288 -0.5411342       FALSE\nCommodities  4.620061  6.305811 -1.6857500       FALSE\nFX          11.361996 14.265355 -2.9033588       FALSE\n\n\n\n# Data frame node\nnode_df &lt;- data.frame(rownames(datanet), rownames(datanet),datanet$Net)\nnames(node_df) &lt;- c(\"id\",\"label\",\"size\")\nhead(node_df)\n\n           id       label       size\n1      Stocks      Stocks  5.1302430\n2       Bonds       Bonds -0.5411342\n3 Commodities Commodities -1.6857500\n4          FX          FX -2.9033588\n\n\n\nsp &lt;- sp[1:4,1:4]\nsp\n\n               Stocks     Bonds Commodities        FX\nStocks      88.757002  7.291185   0.3453279  3.606486\nBonds       10.213545 81.445712   2.7269737  5.613770\nCommodities  0.468118  3.695953  93.6941893  2.141740\nFX           5.691579  7.026017   1.5477592 85.734645\n\n\n\n# Data frame edge\nm1 &lt;- melt(sp)[melt(upper.tri(sp))$value,] # FROM\nm2 &lt;- melt(sp)[melt(lower.tri(sp))$value,] # TO\nm1 &lt;- m1[order(m1$X1),]\nm2 &lt;- m2[order(m2$X2),]\n\n\nedge_df &lt;- data.frame(\"to\"=m1[,2],\"from\"=m1[,1], \"weight\" = m1$value-m2$value)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:reshape':\n\n    rename\n\n\nThe following objects are masked from 'package:igraph':\n\n    as_data_frame, groups, union\n\n\nThe following object is masked from 'package:MASS':\n\n    select\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nedge_df_positive &lt;- edge_df %&gt;% filter(weight &gt;= 0)\nedge_df_negative &lt;- edge_df %&gt;% filter(weight &lt; 0)\n\nedge_df_negative &lt;- edge_df_negative %&gt;%\n  mutate(weight = -weight) %&gt;%\n  dplyr::rename(to = from, from = to)\nedge_df &lt;- bind_rows(edge_df_positive, edge_df_negative)\n\n\npositive_weight &lt;- edge_df$weight[edge_df$weight &gt; 0]\nnegative_weight &lt;- edge_df$weight[edge_df$weight &lt; 0]\npositive_size &lt;- node_df$size[node_df$size &gt; 0]\nnegative_size &lt;- node_df$size[node_df$size &lt; 0]\n\nlibrary(RColorBrewer)\nTransmitter_color &lt;- \"#2ca25f\"\nelse_color &lt;- \"#de2d26\"\ncolor_vec1 &lt;- ifelse(edge_df$weight &gt; 0, Transmitter_color, else_color)\ncolor_vec2 &lt;- ifelse(node_df$size &gt; 0, Transmitter_color, else_color)\n\n\ngraph &lt;- graph_from_data_frame(edge_df, directed = TRUE, vertices = node_df)\nE(graph)$color &lt;- \"black\" # Egde\nV(graph)$color &lt;- color_vec2 # Node\nE(graph)$weight &lt;- abs(edge_df$weight)\nV(graph)$size &lt;- abs(node_df$size)\n\n\nE(graph)$weight &lt;- E(graph)$weight / max(E(graph)$weight) * 2\nV(graph)$size &lt;- V(graph)$size / max(V(graph)$size) * 50\n\n\nplot(graph, edge.width = E(graph)$weight, layout=layout_in_circle(graph), edge.arrow.mode=2, edge.arrow.size=0.2)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Time Series Spillover - GVAR</span>"
    ]
  },
  {
    "objectID": "08-Bab8.html",
    "href": "08-Bab8.html",
    "title": "8  Multivariate GARCH",
    "section": "",
    "text": "8.1 DCC-GARCH\nlibrary(quantmod)\n\nLoading required package: xts\n\n\nLoading required package: zoo\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nLoading required package: TTR\n\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n# Needed Internet Connection !! alike install packages\n# Stock Ticker\nstocks &lt;- c(\"ASII.JK\",\"BBCA.JK\")\n\ndata_list &lt;- lapply(stocks, function(stock) {\n    getSymbols(stock, src = \"yahoo\", from = \"2018-01-01\", to=\"2022-12-31\", auto.assign = FALSE)\n})\n\nWarning: ASII.JK contains missing values. Some functions will not work if\nobjects contain missing values in the middle of the series. Consider using\nna.omit(), na.approx(), na.fill(), etc to remove or replace them.\n\n# Daily Return\nreturns &lt;- lapply(data_list, function(data) {\n    dailyReturn(Cl(data))\n})\n\nWarning in to_period(xx, period = on.opts[[period]], ...): missing values\nremoved from data\n\n# Combine data\ncombined_returns &lt;- do.call(merge, returns)\nnames(combined_returns) &lt;- stocks\ncombined_returns &lt;- na.omit(combined_returns)\nhead(combined_returns)\n\n                ASII.JK     BBCA.JK\n2018-01-01  0.000000000 0.000000000\n2018-01-02 -0.012048193 0.000000000\n2018-01-03 -0.018292683 0.000000000\n2018-01-04  0.021739130 0.014840183\n2018-01-05  0.009118541 0.001124859\n2018-01-08  0.000000000 0.004494382\nlibrary(rugarch)\n\nLoading required package: parallel\n\n\n\nAttaching package: 'rugarch'\n\n\nThe following object is masked from 'package:stats':\n\n    sigma\n\nlibrary(rmgarch)\n\n\nAttaching package: 'rmgarch'\n\n\nThe following objects are masked from 'package:xts':\n\n    first, last\n\n# GARCH Specification for a Single Asset\nunispec &lt;- ugarchspec(mean.model = list(armaOrder = c(0, 0)),\n                     variance.model = list(model = \"gjrGARCH\",\n                                           garchOrder = c(1, 1)),\n                     distribution.model = \"norm\")\n\n# Determine the number of assets\nn_assets &lt;- ncol(combined_returns)\n\n# Replicate GARCH Specification for All Assets\ngarch_spec &lt;- multispec(replicate(n_assets, unispec)) \n\n# DCC Model Specification\ndcc_spec &lt;- dccspec(uspec = garch_spec, \n                   dccOrder = c(1, 1), \n                   distribution = \"mvnorm\")\n## Fit DCC\ndcc.fit &lt;- dccfit(dcc_spec, \n                 data = combined_returns, \n                 fit.control=list(scale=TRUE))\ndcc.fit\n\n\n*---------------------------------*\n*          DCC GARCH Fit          *\n*---------------------------------*\n\nDistribution         :  mvnorm\nModel                :  DCC(1,1)\nNo. Parameters       :  13\n[VAR GARCH DCC UncQ] : [0+10+2+1]\nNo. Series           :  2\nNo. Obs.             :  1253\nLog-Likelihood       :  6804.626\nAv.Log-Likelihood    :  5.43 \n\nOptimal Parameters\n-----------------------------------\n                  Estimate  Std. Error   t value Pr(&gt;|t|)\n[ASII.JK].mu     -0.000439    0.000538  -0.81597 0.414515\n[ASII.JK].omega   0.000013    0.000001  12.73770 0.000000\n[ASII.JK].alpha1  0.029271    0.009480   3.08756 0.002018\n[ASII.JK].beta1   0.912943    0.007720 118.25080 0.000000\n[ASII.JK].gamma1  0.056569    0.023773   2.37952 0.017335\n[BBCA.JK].mu      0.000635    0.000531   1.19598 0.231706\n[BBCA.JK].omega   0.000015    0.000008   1.90315 0.057021\n[BBCA.JK].alpha1  0.053503    0.030192   1.77212 0.076374\n[BBCA.JK].beta1   0.820666    0.052704  15.57124 0.000000\n[BBCA.JK].gamma1  0.127614    0.044277   2.88221 0.003949\n[Joint]dcca1      0.050241    0.033824   1.48539 0.137441\n[Joint]dccb1      0.766227    0.197276   3.88403 0.000103\n\nInformation Criteria\n---------------------\n                    \nAkaike       -10.841\nBayes        -10.787\nShibata      -10.841\nHannan-Quinn -10.821\n\n\nElapsed time : 2.327933\n# Conditional Covariances\ncov &lt;- rcov(dcc.fit)\ndim(cov)\n\n[1]    2    2 1253\n\ncov[,,1:4]\n\n, , 2018-01-01\n\n             ASII.JK      BBCA.JK\nASII.JK 0.0004465808 0.0001387231\nBBCA.JK 0.0001387231 0.0002527424\n\n, , 2018-01-02\n\n             ASII.JK      BBCA.JK\nASII.JK 0.0004207083 0.0001246004\nBBCA.JK 0.0001246004 0.0002229686\n\n, , 2018-01-03\n\n             ASII.JK      BBCA.JK\nASII.JK 0.0004086508 0.0001138079\nBBCA.JK 0.0001138079 0.0001985343\n\n, , 2018-01-04\n\n             ASII.JK      BBCA.JK\nASII.JK 0.0004134356 0.0001058398\nBBCA.JK 0.0001058398 0.0001784819\n# Conditional Volatilities\nvol &lt;- sigma(dcc.fit)\nhead(vol)\n\n              ASII.JK    BBCA.JK\n2018-01-01 0.02113246 0.01589787\n2018-01-02 0.02051117 0.01493213\n2018-01-03 0.02021511 0.01409022\n2018-01-04 0.02033311 0.01335971\n2018-01-05 0.02012066 0.01314337\n2018-01-08 0.01962831 0.01254032\nplot(vol$ASII.JK)\nplot(vol$BBCA.JK)\n# Conditional Correlations\ncor &lt;- rcor(dcc.fit)\ncor[,,1:4]\n\n, , 2018-01-01\n\n          ASII.JK   BBCA.JK\nASII.JK 1.0000000 0.4129141\nBBCA.JK 0.4129141 1.0000000\n\n, , 2018-01-02\n\n          ASII.JK   BBCA.JK\nASII.JK 1.0000000 0.4068245\nBBCA.JK 0.4068245 1.0000000\n\n, , 2018-01-03\n\n          ASII.JK   BBCA.JK\nASII.JK 1.0000000 0.3995568\nBBCA.JK 0.3995568 1.0000000\n\n, , 2018-01-04\n\n          ASII.JK   BBCA.JK\nASII.JK 1.0000000 0.3896261\nBBCA.JK 0.3896261 1.0000000\ndate &lt;- row.names(data.frame(cor[1,1,])) \ncor2 &lt;- xts(cor[1, 2, ], order.by = as.Date(date))\nplot(cor2)\nforecast &lt;- dccforecast(dcc.fit, n.ahead = 5)\nforecast@mforecast$H #Cov\n\n[[1]]\n, , 1\n\n             [,1]         [,2]\n[1,] 2.400993e-04 5.997351e-05\n[2,] 5.997351e-05 1.426083e-04\n\n, , 2\n\n             [,1]         [,2]\n[1,] 2.460159e-04 6.413044e-05\n[2,] 6.413044e-05 1.492416e-04\n\n, , 3\n\n             [,1]         [,2]\n[1,] 2.517579e-04 6.792145e-05\n[2,] 6.792145e-05 1.554635e-04\n\n, , 4\n\n             [,1]         [,2]\n[1,] 2.573305e-04 7.138253e-05\n[2,] 7.138253e-05 1.612995e-04\n\n, , 5\n\n             [,1]         [,2]\n[1,] 2.627387e-04 7.454746e-05\n[2,] 7.454746e-05 1.667735e-04\nforecast@mforecast$R #Cor\n\n[[1]]\n, , 1\n\n          [,1]      [,2]\n[1,] 1.0000000 0.3241094\n[2,] 0.3241094 1.0000000\n\n, , 2\n\n          [,1]      [,2]\n[1,] 1.0000000 0.3346861\n[2,] 0.3346861 1.0000000\n\n, , 3\n\n          [,1]      [,2]\n[1,] 1.0000000 0.3433217\n[2,] 0.3433217 1.0000000\n\n, , 4\n\n          [,1]      [,2]\n[1,] 1.0000000 0.3503723\n[2,] 0.3503723 1.0000000\n\n, , 5\n\n          [,1]      [,2]\n[1,] 1.0000000 0.3561289\n[2,] 0.3561289 1.0000000\nforecast@mforecast$mu\n\n, , 1\n\n              [,1]         [,2]\n[1,] -0.0004392902 0.0006354097\n[2,] -0.0004392902 0.0006354097\n[3,] -0.0004392902 0.0006354097\n[4,] -0.0004392902 0.0006354097\n[5,] -0.0004392902 0.0006354097",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Multivariate GARCH</span>"
    ]
  },
  {
    "objectID": "09-Bab9.html",
    "href": "09-Bab9.html",
    "title": "9  NARDL",
    "section": "",
    "text": "# install.packages(\"ardl.nardl\")\nlibrary(ardl.nardl)\n\nWarning: package 'ardl.nardl' was built under R version 4.4.3\n\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\n\n# Data\ndatanardl &lt;- read.csv(\"Data/Bab 9/datanardl.csv\")\nhead(datanardl)\n\n      date price.Vietnam price.China\n1 1/1/2002           115    143.7978\n2 2/1/2002           105    129.4568\n3 3/1/2002           100    127.9081\n4 4/1/2002           117    149.8740\n5 5/1/2002           103    131.0987\n6 6/1/2002           113    145.1878\n\n\n\n# Phillips-Perron Unit Root Test\nPP.test(datanardl$price.Vietnam)\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  datanardl$price.Vietnam\nDickey-Fuller = -5.6063, Truncation lag parameter = 3, p-value = 0.01\n\nPP.test(datanardl$price.China)\n\n\n    Phillips-Perron Unit Root Test\n\ndata:  datanardl$price.China\nDickey-Fuller = -5.0955, Truncation lag parameter = 3, p-value = 0.01\n\n\n\n# Auto Selecet Model\nmodel1 &lt;- gets_nardl_uecm(x =  datanardl,\n                          decomp = 'price.China',\n                          dep_var = 'price.Vietnam',\n                          p_order = c(5),\n                          q_order = c(5),\n                          graph_save = TRUE,\n                          case = 3,\n                          F_HC = TRUE)\n\nPercentage of positive changes in decomp is 56 percent while negative change is 44\n\n\n\n\n\n\n\n\n\n\n# Cointegratio Test\nmodel1$cointegration$Fstat\n\n                   observation k    fstat case lower.b upper.b\n10% critical value          91 1 10.88198    3    4.04    4.78\n5% critical value           91 1 10.88198    3    4.94    5.73\n1% critical value           91 1 10.88198    3    6.84    7.84\n\n\n\n# NARDL Form\nsummary(model1$Parsimonious_NARDL_fit)\n\n\nCall:\nlm(formula = price.Vietnam ~ price.Vietnam_1 + price.Vietnam_3 + \n    price.Vietnam_4 + price.Vietnam_5 + price.China_pos + price.China_pos_1 + \n    price.China_pos_2 + price.China_pos_4 + price.China_pos_5 + \n    price.China_neg + price.China_neg_1 + price.China_neg_4 + \n    price.China_neg_5, na.action = na.exclude)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-16.3047  -4.4665  -0.3095   4.0691  21.2637 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       66.70011   14.83287   4.497 2.40e-05 ***\nprice.Vietnam_1    0.52746    0.09462   5.575 3.52e-07 ***\nprice.Vietnam_3    0.14052    0.10138   1.386  0.16974    \nprice.Vietnam_4   -0.03782    0.10453  -0.362  0.71847    \nprice.Vietnam_5   -0.14259    0.09817  -1.452  0.15043    \nprice.China_pos    0.08230    0.18191   0.452  0.65223    \nprice.China_pos_1 -0.28087    0.22492  -1.249  0.21553    \nprice.China_pos_2  0.19196    0.17400   1.103  0.27338    \nprice.China_pos_4 -0.26694    0.19885  -1.342  0.18341    \nprice.China_pos_5  0.25245    0.16491   1.531  0.12991    \nprice.China_neg    0.04123    0.15263   0.270  0.78778    \nprice.China_neg_1  0.05460    0.17787   0.307  0.75969    \nprice.China_neg_4 -0.50597    0.17240  -2.935  0.00440 ** \nprice.China_neg_5  0.41552    0.15347   2.708  0.00835 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.061 on 77 degrees of freedom\nMultiple R-squared:  0.5657,    Adjusted R-squared:  0.4923 \nF-statistic: 7.714 on 13 and 77 DF,  p-value: 1.571e-09\n\n\n\n# NARDL ECM Form\nsummary(model1$Parsimonious_ECM_fit)\n\n\nCall:\nlm(formula = D.price.Vietnam ~ price.Vietnam_1 + price.China_pos_1 + \n    price.China_neg_1 + D.price.Vietnam_2 + D.price.Vietnam_3 + \n    D.price.Vietnam_4 + D.price.China_neg_4, na.action = na.exclude)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-16.0510  -5.0380  -0.3461   3.9997  23.1158 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         61.8968384 11.5905403   5.340 7.95e-07 ***\nprice.Vietnam_1     -0.5138343  0.0903867  -5.685 1.90e-07 ***\nprice.China_pos_1   -0.0192273  0.0771006  -0.249   0.8037    \nprice.China_neg_1    0.0003975  0.0741449   0.005   0.9957    \nD.price.Vietnam_2    0.0790419  0.0929207   0.851   0.3974    \nD.price.Vietnam_3    0.2409279  0.0963186   2.501   0.0143 *  \nD.price.Vietnam_4    0.1413008  0.0922292   1.532   0.1293    \nD.price.China_neg_4 -0.5632653  0.1217687  -4.626 1.36e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 7.093 on 83 degrees of freedom\nMultiple R-squared:  0.4579,    Adjusted R-squared:  0.4122 \nF-statistic: 10.01 on 7 and 83 DF,  p-value: 5.192e-09\n\n\n\n# Long Run Coefficients\nmodel1$Longrun_relation\n\n                       Estimate Std. Error      t value  Pr(&gt;|t|)\nprice.China_pos_1 -0.0374192226  0.1505206 -0.248598606 0.8042781\nprice.China_neg_1  0.0007735328  0.1442840  0.005361181 0.9957351\n\n\n\n# Long Run Asymetric Test\nmodel1$longrun_asym\n\n               Fstat       Pval\nprice.China 5.031109 0.02756084\n\n\n\n# Short Run Asymetric Test\nmodel1$Shortrun_asym\n\n               Fstat         Pval\nprice.China 21.39708 1.359712e-05",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>NARDL</span>"
    ]
  }
]