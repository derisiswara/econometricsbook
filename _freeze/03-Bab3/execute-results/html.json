{
  "hash": "7f294a9df7d6ce04b6cdc21f457e0825",
  "result": {
    "engine": "knitr",
    "markdown": "# Univariate Time Series\n## Data EDA\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nhargaberas <- read_excel(\"Data/Bab 3/ARIMA.xlsx\")\nhargaberas = hargaberas[,c(-1)]\nhargaberas = ts(hargaberas, start=c(2012,1), frequency=12)\nhargaberas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov   Dec\n2012  8726  8778  8687  8583  8537  8554  8606  8635  8624  8624  8655  8702\n2013  8835  8843  8783  8711  8681  8784  9018  9057  9058  9108  9152  9262\n2014  9433  9531  9596  9425  9414  9462  9525  9525  9694  9781  9924 10344\n2015 10612 10766 10987 10648 10569 10679 10732 10935 11055 11169 11365 11465\n2016 11614 11729 11678 11449 11417 11469 11498 11475 11448 11433 11450 11476\n2017 11579 11571 11494 11449 11465 11465 11448 11411 11482 11552 11665 11838\n2018 12276 12414 12299 12035 11943 11907 11936 11899 11900 11926 12013 12106\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(hargaberas, main=\"Harga Beras di Perdagangan Besar\")\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndekomposisi = decompose(hargaberas)\nplot(dekomposisi)\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n## ACF and PACF Plot\n\n::: {.cell}\n\n```{.r .cell-code}\n# plot acf dan pacf\npar(mfrow=c(2,1))\nacf(hargaberas, lag=48)\npacf(hargaberas, lag=48)\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n##Stationary Test\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aTSA)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'aTSA'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:graphics':\n\n    identify\n```\n\n\n:::\n\n```{.r .cell-code}\n# Augmented Dickey-Fuller Test \nadf.test(hargaberas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag  ADF p.value\n[1,]   0 2.96   0.990\n[2,]   1 1.65   0.975\n[3,]   2 2.04   0.990\n[4,]   3 2.18   0.990\nType 2: with drift no trend \n     lag    ADF p.value\n[1,]   0 -0.537   0.858\n[2,]   1 -0.717   0.795\n[3,]   2 -0.831   0.755\n[4,]   3 -0.917   0.724\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -1.42   0.814\n[2,]   1 -2.56   0.340\n[3,]   2 -2.00   0.570\n[4,]   3 -1.78   0.663\n---- \nNote: in fact, p.value = 0.01 means p.value <= 0.01 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Firs Difference Form\nadf.test(diff(hargaberas))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAugmented Dickey-Fuller Test \nalternative: stationary \n \nType 1: no drift no trend \n     lag   ADF p.value\n[1,]   0 -5.11    0.01\n[2,]   1 -5.02    0.01\n[3,]   2 -4.42    0.01\n[4,]   3 -4.36    0.01\nType 2: with drift no trend \n     lag   ADF p.value\n[1,]   0 -5.47    0.01\n[2,]   1 -5.58    0.01\n[3,]   2 -5.10    0.01\n[4,]   3 -5.27    0.01\nType 3: with drift and trend \n     lag   ADF p.value\n[1,]   0 -5.43    0.01\n[2,]   1 -5.55    0.01\n[3,]   2 -5.10    0.01\n[4,]   3 -5.28    0.01\n---- \nNote: in fact, p.value = 0.01 means p.value <= 0.01 \n```\n\n\n:::\n:::\n\n## ARIMA\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'forecast'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:aTSA':\n\n    forecast\n```\n\n\n:::\n\n```{.r .cell-code}\nauto.arima(hargaberas, trace=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n ARIMA(2,1,2)(1,1,1)[12]                    : Inf\n ARIMA(0,1,0)(0,1,0)[12]                    : 884.0934\n ARIMA(1,1,0)(1,1,0)[12]                    : 872.3993\n ARIMA(0,1,1)(0,1,1)[12]                    : Inf\n ARIMA(1,1,0)(0,1,0)[12]                    : 876.5573\n ARIMA(1,1,0)(2,1,0)[12]                    : 863.6643\n ARIMA(1,1,0)(2,1,1)[12]                    : Inf\n ARIMA(1,1,0)(1,1,1)[12]                    : Inf\n ARIMA(0,1,0)(2,1,0)[12]                    : 867.3178\n ARIMA(2,1,0)(2,1,0)[12]                    : 865.871\n ARIMA(1,1,1)(2,1,0)[12]                    : 865.1084\n ARIMA(0,1,1)(2,1,0)[12]                    : 862.9856\n ARIMA(0,1,1)(1,1,0)[12]                    : 871.9363\n ARIMA(0,1,1)(2,1,1)[12]                    : Inf\n ARIMA(0,1,1)(1,1,1)[12]                    : Inf\n ARIMA(0,1,2)(2,1,0)[12]                    : 861.8543\n ARIMA(0,1,2)(1,1,0)[12]                    : 872.2305\n ARIMA(0,1,2)(2,1,1)[12]                    : Inf\n ARIMA(0,1,2)(1,1,1)[12]                    : Inf\n ARIMA(1,1,2)(2,1,0)[12]                    : 867.0498\n ARIMA(0,1,3)(2,1,0)[12]                    : 854.8026\n ARIMA(0,1,3)(1,1,0)[12]                    : 865.2557\n ARIMA(0,1,3)(2,1,1)[12]                    : Inf\n ARIMA(0,1,3)(1,1,1)[12]                    : Inf\n ARIMA(1,1,3)(2,1,0)[12]                    : Inf\n ARIMA(0,1,4)(2,1,0)[12]                    : 857.2177\n ARIMA(1,1,4)(2,1,0)[12]                    : 859.7882\n\n Best model: ARIMA(0,1,3)(2,1,0)[12]                    \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: hargaberas \nARIMA(0,1,3)(2,1,0)[12] \n\nCoefficients:\n         ma1     ma2     ma3     sar1     sar2\n      0.3775  0.0028  0.4180  -0.4831  -0.4956\ns.e.  0.1166  0.1301  0.1403   0.1231   0.1239\n\nsigma^2 = 7757:  log likelihood = -420.75\nAIC=853.49   AICc=854.8   BIC=867.07\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lmtest)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: zoo\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'zoo'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n```\n\n\n:::\n\n```{.r .cell-code}\n# Best model: ARIMA(0,1,3)(2,1,0)[12]\nmodel1 = arima(hargaberas, order=c(0,1,3), seasonal=list(order=c(2,1,0), period=12))\ncoeftest(model1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nz test of coefficients:\n\n      Estimate Std. Error z value  Pr(>|z|)    \nma1   0.377526   0.116627  3.2370  0.001208 ** \nma2   0.002799   0.130115  0.0215  0.982837    \nma3   0.417985   0.140264  2.9800  0.002883 ** \nsar1 -0.483126   0.123055 -3.9261 8.634e-05 ***\nsar2 -0.495630   0.123883 -4.0008 6.313e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Arch Test\narch.test(model1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nARCH heteroscedasticity test for residuals \nalternative: heteroscedastic \n\nPortmanteau-Q test: \n     order    PQ p.value\n[1,]     4  5.41   0.247\n[2,]     8  8.53   0.384\n[3,]    12 11.36   0.498\n[4,]    16 13.03   0.670\n[5,]    20 14.44   0.808\n[6,]    24 16.04   0.887\nLagrange-Multiplier test: \n     order    LM  p.value\n[1,]     4 41.16 6.04e-09\n[2,]     8 13.84 5.42e-02\n[3,]    12  6.06 8.69e-01\n[4,]    16  3.39 9.99e-01\n[5,]    20  2.16 1.00e+00\n[6,]    24  1.16 1.00e+00\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Autocorrelartion Test\nBox.test(model1$residuals, lag = 1, type = c(\"Ljung-Box\"), fitdf = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tBox-Ljung test\n\ndata:  model1$residuals\nX-squared = 0.0041444, df = 1, p-value = 0.9487\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Forecasting\nforecast(model1, h=12)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\nJan 2019       12355.67 12246.95 12464.39 12189.39 12521.95\nFeb 2019       12493.09 12308.02 12678.16 12210.05 12776.13\nMar 2019       12392.80 12154.53 12631.07 12028.40 12757.21\nApr 2019       12143.41 11835.19 12451.63 11672.03 12614.80\nMay 2019       12079.80 11714.79 12444.80 11521.57 12638.02\nJun 2019       12086.96 11672.89 12501.04 11453.70 12720.23\nJul 2019       12116.54 11658.63 12574.45 11416.22 12816.85\nAug 2019       12086.48 11588.57 12584.38 11325.00 12847.96\nSep 2019       12072.73 11537.81 12607.64 11254.64 12890.81\nOct 2019       12077.85 11508.32 12647.38 11206.83 12948.88\nNov 2019       12129.83 11527.68 12731.99 11208.92 13050.75\nDec 2019       12188.63 11555.52 12821.73 11220.38 13156.88\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(forecast(model1, h=12))\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## ARCH-GARCH\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nkurs <- read_excel(\"Data/Bab 3/ARCH-GARCH.xlsx\")\nkurs = kurs[,c(-1)]\nDates = seq(as.Date(\"2019-01-01\"), as.Date(\"2020-12-31\"), \"day\") \n\nlibrary(xts)\nkurs = xts(kurs, order.by = Dates)\nplot(kurs, main=\"Nilai Tukar US Dollar terhadap Rupiah\")\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ARIMA\nauto.arima(kurs, trace=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Fitting models using approximations to speed things up...\n\n ARIMA(2,1,2) with drift         : 8738.664\n ARIMA(0,1,0) with drift         : 8755.631\n ARIMA(1,1,0) with drift         : 8745.702\n ARIMA(0,1,1) with drift         : 8744.836\n ARIMA(0,1,0)                    : 8753.644\n ARIMA(1,1,2) with drift         : 8742.017\n ARIMA(2,1,1) with drift         : 8748.12\n ARIMA(3,1,2) with drift         : 8746.649\n ARIMA(2,1,3) with drift         : 8740.697\n ARIMA(1,1,1) with drift         : 8746.629\n ARIMA(1,1,3) with drift         : 8743.813\n ARIMA(3,1,1) with drift         : 8748.657\n ARIMA(3,1,3) with drift         : 8751.34\n ARIMA(2,1,2)                    : 8736.651\n ARIMA(1,1,2)                    : 8740.011\n ARIMA(2,1,1)                    : 8746.122\n ARIMA(3,1,2)                    : 8744.611\n ARIMA(2,1,3)                    : 8738.68\n ARIMA(1,1,1)                    : 8744.657\n ARIMA(1,1,3)                    : 8741.802\n ARIMA(3,1,1)                    : 8746.636\n ARIMA(3,1,3)                    : 8749.317\n\n Now re-fitting the best model(s) without approximations...\n\n ARIMA(2,1,2)                    : 8739.165\n\n Best model: ARIMA(2,1,2)                    \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSeries: kurs \nARIMA(2,1,2) \n\nCoefficients:\n         ar1      ar2      ma1     ma2\n      1.2304  -0.7997  -1.3560  0.8726\ns.e.  0.0650   0.0506   0.0599  0.0425\n\nsigma^2 = 9181:  log likelihood = -4364.54\nAIC=8739.08   AICc=8739.16   BIC=8762.05\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#  Best model: ARIMA(2,1,2)\nmodel2 = arima(kurs, order=c(2,1,2))\ncoeftest(model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nz test of coefficients:\n\n     Estimate Std. Error z value  Pr(>|z|)    \nar1  1.230421   0.065027  18.922 < 2.2e-16 ***\nar2 -0.799713   0.050577 -15.812 < 2.2e-16 ***\nma1 -1.355960   0.059905 -22.635 < 2.2e-16 ***\nma2  0.872641   0.042457  20.554 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ARCH Test\narch.test(model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nARCH heteroscedasticity test for residuals \nalternative: heteroscedastic \n\nPortmanteau-Q test: \n     order    PQ p.value\n[1,]     4  70.7 1.6e-14\n[2,]     8 134.2 0.0e+00\n[3,]    12 188.4 0.0e+00\n[4,]    16 206.3 0.0e+00\n[5,]    20 216.8 0.0e+00\n[6,]    24 225.0 0.0e+00\nLagrange-Multiplier test: \n     order   LM  p.value\n[1,]     4 1471 0.00e+00\n[2,]     8  446 0.00e+00\n[3,]    12  251 0.00e+00\n[4,]    16  179 0.00e+00\n[5,]    20  135 0.00e+00\n[6,]    24  106 1.14e-12\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\nif p.value <- 0.05 = ARCH/GARCH\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fGarch)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'fGarch' was built under R version 4.4.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNOTE: Packages 'fBasics', 'timeDate', and 'timeSeries' are no longer\nattached to the search() path when 'fGarch' is attached.\n\nIf needed attach them yourself in your R script by e.g.,\n        require(\"timeSeries\")\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Stationary Test\n# Phillips-Perron Unit Root Test \npp.test(kurs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPhillips-Perron Unit Root Test \nalternative: stationary \n \nType 1: no drift no trend \n lag   Z_rho p.value\n   6 -0.0408   0.683\n----- \n Type 2: with drift no trend \n lag Z_rho p.value\n   6 -11.1   0.107\n----- \n Type 3: with drift and trend \n lag Z_rho p.value\n   6 -12.1   0.367\n--------------- \nNote: p-value = 0.01 means p.value <= 0.01 \n```\n\n\n:::\n\n```{.r .cell-code}\npp.test(diff(kurs))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nPhillips-Perron Unit Root Test \nalternative: stationary \n \nType 1: no drift no trend \n lag Z_rho p.value\n   6  -804    0.01\n----- \n Type 2: with drift no trend \n lag Z_rho p.value\n   6  -804    0.01\n----- \n Type 3: with drift and trend \n lag Z_rho p.value\n   6  -804    0.01\n--------------- \nNote: p-value = 0.01 means p.value <= 0.01 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ne = diff(kurs)[-1]\npar(mfrow=c(1,1))\nacf(e)\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n```{.r .cell-code}\npacf(e)\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(e)\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-19-3.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ARCH(1) = GARCH(1,0)\nmodel10 = garchFit(~garch(1,0), data=e, trace=FALSE)\nsummary(model10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTitle:\n GARCH Modelling \n\nCall:\n garchFit(formula = ~garch(1, 0), data = e, trace = FALSE) \n\nMean and Variance Equation:\n data ~ garch(1, 0)\n<environment: 0x000001e4fdd103c0>\n [data = e]\n\nConditional Distribution:\n norm \n\nCoefficient(s):\n        mu       omega      alpha1  \n  -1.15887  5442.67260     0.61303  \n\nStd. Errors:\n based on Hessian \n\nError Analysis:\n        Estimate  Std. Error  t value Pr(>|t|)    \nmu       -1.1589      2.8293   -0.410    0.682    \nomega  5442.6726    374.5058   14.533  < 2e-16 ***\nalpha1    0.6130      0.1073    5.713 1.11e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog Likelihood:\n -4303.768    normalized:  -5.895573 \n\nDescription:\n Sat Jul  5 23:34:33 2025 by user: derik \n\n\nStandardised Residuals Tests:\n                                  Statistic      p-Value\n Jarque-Bera Test   R    Chi^2  4839.704460 0.000000e+00\n Shapiro-Wilk Test  R    W         0.839958 0.000000e+00\n Ljung-Box Test     R    Q(10)    29.630084 9.844469e-04\n Ljung-Box Test     R    Q(15)    39.676117 5.074432e-04\n Ljung-Box Test     R    Q(20)    41.959542 2.799349e-03\n Ljung-Box Test     R^2  Q(10)    91.109411 3.219647e-15\n Ljung-Box Test     R^2  Q(15)   147.246211 0.000000e+00\n Ljung-Box Test     R^2  Q(20)   159.654019 0.000000e+00\n LM Arch Test       R    TR^2    114.581427 0.000000e+00\n\nInformation Criterion Statistics:\n     AIC      BIC      SIC     HQIC \n11.79937 11.81824 11.79933 11.80665 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# GARCH(1,1)\nmodel11 = garchFit(~garch(1,1), data=e, trace=FALSE)\nsummary(model11)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTitle:\n GARCH Modelling \n\nCall:\n garchFit(formula = ~garch(1, 1), data = e, trace = FALSE) \n\nMean and Variance Equation:\n data ~ garch(1, 1)\n<environment: 0x000001e4ecb46428>\n [data = e]\n\nConditional Distribution:\n norm \n\nCoefficient(s):\n       mu      omega     alpha1      beta1  \n -2.41759  366.97243    0.25035    0.74326  \n\nStd. Errors:\n based on Hessian \n\nError Analysis:\n        Estimate  Std. Error  t value Pr(>|t|)    \nmu      -2.41759     2.21121   -1.093    0.274    \nomega  366.97243    87.52212    4.193 2.75e-05 ***\nalpha1   0.25035     0.04215    5.940 2.85e-09 ***\nbeta1    0.74326     0.03132   23.734  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog Likelihood:\n -4188.199    normalized:  -5.73726 \n\nDescription:\n Sat Jul  5 23:34:33 2025 by user: derik \n\n\nStandardised Residuals Tests:\n                                   Statistic     p-Value\n Jarque-Bera Test   R    Chi^2  1527.8454237 0.000000000\n Shapiro-Wilk Test  R    W         0.9121068 0.000000000\n Ljung-Box Test     R    Q(10)    28.3515452 0.001585409\n Ljung-Box Test     R    Q(15)    31.1437863 0.008403721\n Ljung-Box Test     R    Q(20)    32.4515827 0.038717818\n Ljung-Box Test     R^2  Q(10)     4.8877685 0.898547895\n Ljung-Box Test     R^2  Q(15)     9.1420867 0.869971676\n Ljung-Box Test     R^2  Q(20)    11.4700908 0.933109279\n LM Arch Test       R    TR^2      5.5858038 0.935507011\n\nInformation Criterion Statistics:\n     AIC      BIC      SIC     HQIC \n11.48548 11.51065 11.48542 11.49519 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# GARCH(1,1) with mean equation ARMA(0,1)\nmodel11b = garchFit(~arma(0,1)+garch(1,1), data=e, trace=FALSE)\nsummary(model11b)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nTitle:\n GARCH Modelling \n\nCall:\n garchFit(formula = ~arma(0, 1) + garch(1, 1), data = e, trace = FALSE) \n\nMean and Variance Equation:\n data ~ arma(0, 1) + garch(1, 1)\n<environment: 0x000001e4f379c708>\n [data = e]\n\nConditional Distribution:\n norm \n\nCoefficient(s):\n       mu        ma1      omega     alpha1      beta1  \n -2.53982   -0.22537  337.43876    0.23716    0.75465  \n\nStd. Errors:\n based on Hessian \n\nError Analysis:\n        Estimate  Std. Error  t value Pr(>|t|)    \nmu      -2.53982     1.74379   -1.456    0.145    \nma1     -0.22537     0.04724   -4.771 1.83e-06 ***\nomega  337.43876    85.21204    3.960 7.50e-05 ***\nalpha1   0.23716     0.04038    5.874 4.26e-09 ***\nbeta1    0.75465     0.03129   24.118  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nLog Likelihood:\n -4177.446    normalized:  -5.722529 \n\nDescription:\n Sat Jul  5 23:34:33 2025 by user: derik \n\n\nStandardised Residuals Tests:\n                                   Statistic    p-Value\n Jarque-Bera Test   R    Chi^2  1331.0510650 0.00000000\n Shapiro-Wilk Test  R    W         0.9147019 0.00000000\n Ljung-Box Test     R    Q(10)    20.1208930 0.02812976\n Ljung-Box Test     R    Q(15)    23.9601552 0.06577322\n Ljung-Box Test     R    Q(20)    26.1490496 0.16094547\n Ljung-Box Test     R^2  Q(10)     4.7499032 0.90724638\n Ljung-Box Test     R^2  Q(15)     8.8134669 0.88706688\n Ljung-Box Test     R^2  Q(20)    11.6275315 0.92829976\n LM Arch Test       R    TR^2      5.4233826 0.94232413\n\nInformation Criterion Statistics:\n     AIC      BIC      SIC     HQIC \n11.45876 11.49021 11.45866 11.47089 \n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Best Model = \"model11b\"\nDates2 = seq(as.Date(\"2019-01-02\"), as.Date(\"2020-12-31\"), \"day\") \nstdev = xts(model11b@sigma.t, order.by = Dates2)\nplot(stdev, main=\"Simpangan Baku\")\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Forecasting\npredict(model11b, n.ahead=20, plot=TRUE, nx=731)\n```\n\n::: {.cell-output-display}\n![](03-Bab3_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   meanForecast meanError standardDeviation lowerInterval upperInterval\n1     15.748251  76.11087          76.11087     -133.4263      164.9228\n2     -2.539819  79.85676          77.99279     -159.0562      153.9765\n3     -2.539819  81.72802          79.81549     -162.7238      157.6442\n4     -2.539819  83.54257          81.58306     -166.2802      161.2006\n5     -2.539819  85.30415          83.29911     -169.7329      164.6532\n6     -2.539819  87.01608          84.96689     -173.0882      168.0086\n7     -2.539819  88.68137          86.58929     -176.3521      171.2725\n8     -2.539819  90.30269          88.16892     -179.5298      174.4502\n9     -2.539819  91.88248          89.70815     -182.6262      177.5465\n10    -2.539819  93.42296          91.20912     -185.6454      180.5658\n11    -2.539819  94.92613          92.67380     -188.5916      183.5120\n12    -2.539819  96.39384          94.10397     -191.4683      186.3886\n13    -2.539819  97.82780          95.50128     -194.2788      189.1991\n14    -2.539819  99.22954          96.86724     -197.0261      191.9465\n15    -2.539819 100.60052          98.20325     -199.7132      194.6336\n16    -2.539819 101.94206          99.51061     -202.3426      197.2630\n17    -2.539819 103.25541         100.79051     -204.9167      199.8371\n18    -2.539819 104.54171         102.04409     -207.4378      202.3582\n19    -2.539819 105.80203         103.27236     -209.9080      204.8283\n20    -2.539819 107.03737         104.47632     -212.3292      207.2496\n```\n\n\n:::\n:::\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}