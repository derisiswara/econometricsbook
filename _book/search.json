[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"code version Application Econometric Models RStudio, book released 2023 IPB Press. book written Muhammad Firdaus, Tony Irawan, Fahmi Salam Ahmad, Hermanto Siregar, Deri Siswara, Rodi Jakariya. can order full version , includes detailed explanations.book aims help students researchers apply econometric models analysis using RStudio software. begins introduction use R programming language RStudio IDE. book covers topics theory application OLS models, including testing Gauss-Markov conditions. Additionally, presents application time-series models ARMA, GARCH, VAR, VECM, ARDL, SVAR., static dynamic panel data analysis using RStudioâ€™s instruments accommodate heteroscedasticity autocorrelation assumptions. Finally, discussion spatial model applications analysis spatial regional elements. latest publication update includes three additional chapters: spillover analysis time series data; DCC-GARCH; Non-linear ARDL. Updates made frequently.book may contain bugs/errors readers can report Buku.rstudio.ipb@gmail.com","code":""},{"path":"basics-of-r.html","id":"basics-of-r","chapter":"1 Basics of R","heading":"1 Basics of R","text":"","code":""},{"path":"basics-of-r.html","id":"introduction","chapter":"1 Basics of R","heading":"1.1 Introduction","text":"","code":"\nA <- 2  \nA # Print A\n#> [1] 2\nA = 2\nA\n#> [1] 2\nB <- \"Halo Semua\"\nB\n#> [1] \"Halo Semua\"\na<-10 # Space is not sensitive but lettercase is sensitive.\nA\n#> [1] 2\na\n#> [1] 10\n# Arithmetic operation\nx <- 5\ny <- 3\nx + y     \n#> [1] 8\nx - y     \n#> [1] 2\nx * y     \n#> [1] 15\nx / y     \n#> [1] 1.666667\n# Logic operation\na <- TRUE\nb <- FALSE\na & b     \n#> [1] FALSE\na | b     \n#> [1] TRUE\n!a        \n#> [1] FALSE\nx <- 5\ny <- 3\nx > y     \n#> [1] TRUE\nx < y     \n#> [1] FALSE\nx == y    \n#> [1] FALSE\nx >= y    \n#> [1] TRUE\nx <= y    \n#> [1] FALSE"},{"path":"basics-of-r.html","id":"types-of-objects-in-r","chapter":"1 Basics of R","heading":"1.2 Types of Objects in R","text":"","code":""},{"path":"basics-of-r.html","id":"vector","chapter":"1 Basics of R","heading":"1.2.1 Vector","text":"","code":"\na1 <- c(2,4,7,3) # Numeric vector\na2 <- c(\"one\",\"two\",\"three\") # Character vector\na3 <- c(TRUE,TRUE,TRUE,FALSE,TRUE,FALSE) # Logical vector\na1\n#> [1] 2 4 7 3\na3[4]        \n#> [1] FALSE\na2[c(1,3)]   \n#> [1] \"one\"   \"three\"\na1[-1]       \n#> [1] 4 7 3\na1[2:4]      \n#> [1] 4 7 3\na <- c(1, 2, 3)\nb <- c(4, 5, 6)\nc <- c(a, b)      \nc                 \n#> [1] 1 2 3 4 5 6\nc[1:3]            \n#> [1] 1 2 3\nd <- a + b        \nd                 \n#> [1] 5 7 9\na4 <- 1:12 \nb1 <- matrix(a4,3,4)\nb2 <- matrix(a4,3,4,byrow=TRUE) \nb3 <- matrix(1:14,4,4)\n#> Warning in matrix(1:14, 4, 4): data length [14] is not a\n#> sub-multiple or multiple of the number of rows [4]\nb1\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    4    7   10\n#> [2,]    2    5    8   11\n#> [3,]    3    6    9   12\nb2\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    2    3    4\n#> [2,]    5    6    7    8\n#> [3,]    9   10   11   12\nb3\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    5    9   13\n#> [2,]    2    6   10   14\n#> [3,]    3    7   11    1\n#> [4,]    4    8   12    2\nb2[2,3]   \n#> [1] 7\nb2[1:2,]  \n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    2    3    4\n#> [2,]    5    6    7    8\nb2[c(1,3),-2] \n#>      [,1] [,2] [,3]\n#> [1,]    1    3    4\n#> [2,]    9   11   12\ndim(b2) \n#> [1] 3 4\nm1 <- matrix(c(1, 2, 3, 4, 5, 6), nrow = 2, ncol = 3)\nm2 <- matrix(c(7, 8, 9, 10, 11, 12), nrow = 2, ncol = 3)\nm3 <- m1 + m2\nm3\n#>      [,1] [,2] [,3]\n#> [1,]    8   12   16\n#> [2,]   10   14   18\nm4 <- m1 %*% t(m2)\nm4\n#>      [,1] [,2]\n#> [1,]   89   98\n#> [2,]  116  128"},{"path":"basics-of-r.html","id":"factor","chapter":"1 Basics of R","heading":"1.2.2 Factor","text":"","code":"\na5 <- c(\"A\",\"B\",\"AB\",\"O\")\nd1 <- factor(a5) \nlevels(d1)\n#> [1] \"A\"  \"AB\" \"B\"  \"O\"\nlevels(d1) <- c(\"Darah A\",\"Darah AB\",\"Darah B\",\"Darah O\")\nd1\n#> [1] Darah A  Darah B  Darah AB Darah O \n#> Levels: Darah A Darah AB Darah B Darah O\na6 <- c(\"SMA\",\"SD\",\"SMP\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\",\"SMA\")\nd5 <- factor(a6, levels=c(\"SD\",\"SMP\",\"SMA\")) # Skala pengukuran ordinal  \nlevels(d5) \n#> [1] \"SD\"  \"SMP\" \"SMA\"\nd5\n#>  [1] SMA SD  SMP SMA SMA SMA SMA SMA SMA SMA SMA SMA SMA\n#> Levels: SD SMP SMA"},{"path":"basics-of-r.html","id":"list","chapter":"1 Basics of R","heading":"1.2.3 List","text":"","code":"\na1; b2; d1\n#> [1] 2 4 7 3\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    2    3    4\n#> [2,]    5    6    7    8\n#> [3,]    9   10   11   12\n#> [1] Darah A  Darah B  Darah AB Darah O \n#> Levels: Darah A Darah AB Darah B Darah O\ne1 <- list(a1,b2,d1)\ne2 <- list(vect=a1,mat=b2,fac=d1) \ne1\n#> [[1]]\n#> [1] 2 4 7 3\n#> \n#> [[2]]\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    2    3    4\n#> [2,]    5    6    7    8\n#> [3,]    9   10   11   12\n#> \n#> [[3]]\n#> [1] Darah A  Darah B  Darah AB Darah O \n#> Levels: Darah A Darah AB Darah B Darah O\ne2\n#> $vect\n#> [1] 2 4 7 3\n#> \n#> $mat\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    2    3    4\n#> [2,]    5    6    7    8\n#> [3,]    9   10   11   12\n#> \n#> $fac\n#> [1] Darah A  Darah B  Darah AB Darah O \n#> Levels: Darah A Darah AB Darah B Darah O\ne1[[1]][2] \n#> [1] 4\ne2$fac \n#> [1] Darah A  Darah B  Darah AB Darah O \n#> Levels: Darah A Darah AB Darah B Darah O\ne2[2] \n#> $mat\n#>      [,1] [,2] [,3] [,4]\n#> [1,]    1    2    3    4\n#> [2,]    5    6    7    8\n#> [3,]    9   10   11   12\nnames(e2)\n#> [1] \"vect\" \"mat\"  \"fac\""},{"path":"basics-of-r.html","id":"data-frame","chapter":"1 Basics of R","heading":"1.2.4 Data Frame","text":"","code":"\nAngka <- 11:15\nHuruf <- factor(LETTERS[6:10])\nf1 <- data.frame(Angka,Huruf)\nf1\n#>   Angka Huruf\n#> 1    11     F\n#> 2    12     G\n#> 3    13     H\n#> 4    14     I\n#> 5    15     J\nf1[1,2] \n#> [1] F\n#> Levels: F G H I J\nf1$Angka \n#> [1] 11 12 13 14 15\nf1[,\"Huruf\"] \n#> [1] F G H I J\n#> Levels: F G H I J\ncolnames(f1) \n#> [1] \"Angka\" \"Huruf\"\nstr(f1)\n#> 'data.frame':    5 obs. of  2 variables:\n#>  $ Angka: int  11 12 13 14 15\n#>  $ Huruf: Factor w/ 5 levels \"F\",\"G\",\"H\",\"I\",..: 1 2 3 4 5"},{"path":"basics-of-r.html","id":"data-frame-management","chapter":"1 Basics of R","heading":"1.3 Data Frame Management","text":"","code":"\ndata(iris) \nhead(iris) \n#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          5.1         3.5          1.4         0.2  setosa\n#> 2          4.9         3.0          1.4         0.2  setosa\n#> 3          4.7         3.2          1.3         0.2  setosa\n#> 4          4.6         3.1          1.5         0.2  setosa\n#> 5          5.0         3.6          1.4         0.2  setosa\n#> 6          5.4         3.9          1.7         0.4  setosa\ntail(iris) \n#>     Sepal.Length Sepal.Width Petal.Length Petal.Width\n#> 145          6.7         3.3          5.7         2.5\n#> 146          6.7         3.0          5.2         2.3\n#> 147          6.3         2.5          5.0         1.9\n#> 148          6.5         3.0          5.2         2.0\n#> 149          6.2         3.4          5.4         2.3\n#> 150          5.9         3.0          5.1         1.8\n#>       Species\n#> 145 virginica\n#> 146 virginica\n#> 147 virginica\n#> 148 virginica\n#> 149 virginica\n#> 150 virginica\nstr(iris)\n#> 'data.frame':    150 obs. of  5 variables:\n#>  $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n#>  $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n#>  $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n#>  $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n#>  $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"basics-of-r.html","id":"r-package","chapter":"1 Basics of R","heading":"1.3.1 R Package","text":"","code":"\n# install.packages(\"readxl\") - code to install R package\nlibrary(readxl)\n#> Warning: package 'readxl' was built under R version 4.2.3\n#install.packages(\"dplyr\")\nlibrary(dplyr)\n#> Warning: package 'dplyr' was built under R version 4.2.3\n#> \n#> Attaching package: 'dplyr'\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union"},{"path":"basics-of-r.html","id":"data-management-with-dplyr","chapter":"1 Basics of R","heading":"1.3.2 Data Management With dplyr","text":"","code":"\nhead(iris)\n#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          5.1         3.5          1.4         0.2  setosa\n#> 2          4.9         3.0          1.4         0.2  setosa\n#> 3          4.7         3.2          1.3         0.2  setosa\n#> 4          4.6         3.1          1.5         0.2  setosa\n#> 5          5.0         3.6          1.4         0.2  setosa\n#> 6          5.4         3.9          1.7         0.4  setosa\nirisbaru  <- mutate(iris, sepal2 = Sepal.Length + Sepal.Width)\nhead(irisbaru)\n#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          5.1         3.5          1.4         0.2  setosa\n#> 2          4.9         3.0          1.4         0.2  setosa\n#> 3          4.7         3.2          1.3         0.2  setosa\n#> 4          4.6         3.1          1.5         0.2  setosa\n#> 5          5.0         3.6          1.4         0.2  setosa\n#> 6          5.4         3.9          1.7         0.4  setosa\n#>   sepal2\n#> 1    8.6\n#> 2    7.9\n#> 3    7.9\n#> 4    7.7\n#> 5    8.6\n#> 6    9.3\nirisetosa <- filter(iris, Species==\"setosa\")\nhead(irisetosa)\n#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          5.1         3.5          1.4         0.2  setosa\n#> 2          4.9         3.0          1.4         0.2  setosa\n#> 3          4.7         3.2          1.3         0.2  setosa\n#> 4          4.6         3.1          1.5         0.2  setosa\n#> 5          5.0         3.6          1.4         0.2  setosa\n#> 6          5.4         3.9          1.7         0.4  setosa\nlevels(iris$Species)\n#> [1] \"setosa\"     \"versicolor\" \"virginica\"\nirisversicolor <- filter(iris, Species==\"setosa\"& Petal.Length==1.3)\nhead(irisversicolor)\n#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          4.7         3.2          1.3         0.2  setosa\n#> 2          5.4         3.9          1.3         0.4  setosa\n#> 3          5.5         3.5          1.3         0.2  setosa\n#> 4          4.4         3.0          1.3         0.2  setosa\n#> 5          5.0         3.5          1.3         0.3  setosa\n#> 6          4.5         2.3          1.3         0.3  setosa\niris3 <- select(iris, Sepal.Length, Species)\nhead(iris3)\n#>   Sepal.Length Species\n#> 1          5.1  setosa\n#> 2          4.9  setosa\n#> 3          4.7  setosa\n#> 4          4.6  setosa\n#> 5          5.0  setosa\n#> 6          5.4  setosa\niris4 <- arrange(iris, Petal.Width)\nhead(iris4)\n#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          4.9         3.1          1.5         0.1  setosa\n#> 2          4.8         3.0          1.4         0.1  setosa\n#> 3          4.3         3.0          1.1         0.1  setosa\n#> 4          5.2         4.1          1.5         0.1  setosa\n#> 5          4.9         3.6          1.4         0.1  setosa\n#> 6          5.1         3.5          1.4         0.2  setosa\niris4 <- arrange(iris, Species, desc(Petal.Width))\nhead(iris4)\n#>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#> 1          5.0         3.5          1.6         0.6  setosa\n#> 2          5.1         3.3          1.7         0.5  setosa\n#> 3          5.4         3.9          1.7         0.4  setosa\n#> 4          5.7         4.4          1.5         0.4  setosa\n#> 5          5.4         3.9          1.3         0.4  setosa\n#> 6          5.1         3.7          1.5         0.4  setosa\nnames(iris4)[1] <- \"length\" \nhead(iris4)\n#>   length Sepal.Width Petal.Length Petal.Width Species\n#> 1    5.0         3.5          1.6         0.6  setosa\n#> 2    5.1         3.3          1.7         0.5  setosa\n#> 3    5.4         3.9          1.7         0.4  setosa\n#> 4    5.7         4.4          1.5         0.4  setosa\n#> 5    5.4         3.9          1.3         0.4  setosa\n#> 6    5.1         3.7          1.5         0.4  setosa\nhead(iris4[,c(-1,-3)])\n#>   Sepal.Width Petal.Width Species\n#> 1         3.5         0.6  setosa\n#> 2         3.3         0.5  setosa\n#> 3         3.9         0.4  setosa\n#> 4         4.4         0.4  setosa\n#> 5         3.9         0.4  setosa\n#> 6         3.7         0.4  setosa\niris %>% group_by(Species) %>% summarise(rata2_Sepal.Width = mean(Sepal.Width))\n#> # A tibble: 3 Ã— 2\n#>   Species    rata2_Sepal.Width\n#>   <fct>                  <dbl>\n#> 1 setosa                  3.43\n#> 2 versicolor              2.77\n#> 3 virginica               2.97"},{"path":"basics-of-r.html","id":"visualization","chapter":"1 Basics of R","heading":"1.4 Visualization","text":"","code":""},{"path":"basics-of-r.html","id":"histogram","chapter":"1 Basics of R","heading":"1.4.1 Histogram","text":"","code":"\nhist(iris$Sepal.Length)"},{"path":"basics-of-r.html","id":"box-plot","chapter":"1 Basics of R","heading":"1.4.2 Box Plot","text":"","code":"\nboxplot(iris$Sepal.Length)"},{"path":"basics-of-r.html","id":"barplot","chapter":"1 Basics of R","heading":"1.4.3 Barplot","text":"","code":"\ntable(iris$Species)\n#> \n#>     setosa versicolor  virginica \n#>         50         50         50\nbarplot(table(iris$Species))"},{"path":"basics-of-r.html","id":"pie-chart","chapter":"1 Basics of R","heading":"1.4.4 Pie Chart","text":"","code":"\npie(table(iris$Species))"},{"path":"basics-of-r.html","id":"scatter-plot","chapter":"1 Basics of R","heading":"1.4.5 Scatter Plot","text":"","code":"\nplot(iris$Sepal.Length,iris$Sepal.Width)\nplot(iris$Sepal.Length, iris$Sepal.Width, main = \"Sepal Length vs. Sepal Width\", \n     xlab = \"Sepal Length\", ylab = \"Sepal Width\", col = \"red\")"},{"path":"basic-linear-regression.html","id":"basic-linear-regression","chapter":"2 Basic Linear Regression","heading":"2 Basic Linear Regression","text":"","code":""},{"path":"basic-linear-regression.html","id":"eda","chapter":"2 Basic Linear Regression","heading":"2.1 EDA","text":"","code":"\nlibrary(readxl)\n#> Warning: package 'readxl' was built under R version 4.2.3\ndata1 <- read_excel(\"Data/Bab 2/data1.xlsx\")\nhead(data1)\n#> # A tibble: 6 Ã— 11\n#>   Time                `Outstanding KPR (miliar)` LnKPR\n#>   <dttm>                                   <dbl> <dbl>\n#> 1 2014-10-01 00:00:00                     38047.  10.5\n#> 2 2014-11-01 00:00:00                     38526.  10.6\n#> 3 2014-12-01 00:00:00                     39221.  10.6\n#> 4 2015-01-01 00:00:00                     39023.  10.6\n#> 5 2015-02-01 00:00:00                     39756.  10.6\n#> 6 2015-03-01 00:00:00                     39954.  10.6\n#> # â„¹ 8 more variables: `PDB Nominal` <dbl>, LnPDB <dbl>,\n#> #   `Growth PDB YtY` <dbl>, Inflasi <dbl>,\n#> #   CreditRate <dbl>, JII <dbl>, LnJII <dbl>, DFTV <dbl>\nnames(data1)[2] <- \"Outstanding KPR\"\nnames(data1)[7] <- \"Inflasi\"\nnames(data1)[8] <- \"CreditRate\"\ndata1baru = data1[,c(2,4,7,8,9)]\ntsData = ts(data1baru, start=c(2014,10), frequency=12)\nhead(tsData,5)\n#>      Outstanding KPR PDB Nominal Inflasi CreditRate    JII\n#> [1,]        38047.46    723517.8    1.04       7.50 670.44\n#> [2,]        38525.78    719995.7    0.49       7.75 683.02\n#> [3,]        39220.50    718039.5    1.45       7.75 691.04\n#> [4,]        39022.75    715580.1    0.80       7.75 706.68\n#> [5,]        39755.80    718307.4    0.41       7.50 722.10\n# Exploration\nplot(tsData, type=\"l\", main=\"Plot Data\", xlab=\"Waktu\")\n# correlation\nround(cor(tsData),3)\n#>                 Outstanding KPR PDB Nominal Inflasi\n#> Outstanding KPR           1.000       0.968  -0.267\n#> PDB Nominal               0.968       1.000  -0.315\n#> Inflasi                  -0.267      -0.315   1.000\n#> CreditRate               -0.548      -0.590   0.074\n#> JII                       0.218       0.204   0.179\n#>                 CreditRate    JII\n#> Outstanding KPR     -0.548  0.218\n#> PDB Nominal         -0.590  0.204\n#> Inflasi              0.074  0.179\n#> CreditRate           1.000 -0.624\n#> JII                 -0.624  1.000\n# Descriptive\nsummary(tsData)\n#>  Outstanding KPR  PDB Nominal        Inflasi       \n#>  Min.   :38047   Min.   :715580   Min.   :-0.4500  \n#>  1st Qu.:43622   1st Qu.:766385   1st Qu.: 0.1300  \n#>  Median :53612   Median :812954   Median : 0.2050  \n#>  Mean   :55303   Mean   :818266   Mean   : 0.2838  \n#>  3rd Qu.:65595   3rd Qu.:871216   3rd Qu.: 0.3125  \n#>  Max.   :78998   Max.   :947281   Max.   : 1.4500  \n#>    CreditRate         JII       \n#>  Min.   :4.250   Min.   :556.1  \n#>  1st Qu.:4.750   1st Qu.:659.2  \n#>  Median :5.875   Median :691.5  \n#>  Mean   :5.896   Mean   :688.1  \n#>  3rd Qu.:7.312   3rd Qu.:726.7  \n#>  Max.   :7.750   Max.   :787.1"},{"path":"basic-linear-regression.html","id":"ordinary-least-square-ols","chapter":"2 Basic Linear Regression","heading":"2.2 Ordinary Least Square (OLS)","text":"","code":"\n# OLS\nregresi1 = lm(LnKPR ~ LnPDB + Inflasi + CreditRate + LnJII + DFTV, data=data1)\nsummary(regresi1)\n#> \n#> Call:\n#> lm(formula = LnKPR ~ LnPDB + Inflasi + CreditRate + LnJII + DFTV, \n#>     data = data1)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.138338 -0.029350  0.004568  0.029305  0.073667 \n#> \n#> Coefficients:\n#>              Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept) -21.79826    2.19407  -9.935 8.61e-14 ***\n#> LnPDB         2.29744    0.14887  15.432  < 2e-16 ***\n#> Inflasi      -0.02407    0.02223  -1.083 0.283737    \n#> CreditRate    0.04397    0.01081   4.067 0.000156 ***\n#> LnJII         0.16152    0.10803   1.495 0.140715    \n#> DFTV          0.18359    0.03372   5.444 1.31e-06 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.04381 on 54 degrees of freedom\n#> Multiple R-squared:  0.9659, Adjusted R-squared:  0.9627 \n#> F-statistic: 305.6 on 5 and 54 DF,  p-value: < 2.2e-16"},{"path":"basic-linear-regression.html","id":"diagnostic-gauss-markov","chapter":"2 Basic Linear Regression","heading":"2.3 Diagnostic Gauss Markov","text":"","code":"\n# Normality, Linearity, Heteroscedasticity\nlibrary(gvlma)\ngvlma(regresi1)\n#> \n#> Call:\n#> lm(formula = LnKPR ~ LnPDB + Inflasi + CreditRate + LnJII + DFTV, \n#>     data = data1)\n#> \n#> Coefficients:\n#> (Intercept)        LnPDB      Inflasi   CreditRate  \n#>   -21.79826      2.29744     -0.02407      0.04397  \n#>       LnJII         DFTV  \n#>     0.16152      0.18359  \n#> \n#> \n#> ASSESSMENT OF THE LINEAR MODEL ASSUMPTIONS\n#> USING THE GLOBAL TEST ON 4 DEGREES-OF-FREEDOM:\n#> Level of Significance =  0.05 \n#> \n#> Call:\n#>  gvlma(x = regresi1) \n#> \n#>                      Value p-value                Decision\n#> Global Stat        7.04469 0.13355 Assumptions acceptable.\n#> Skewness           3.60383 0.05765 Assumptions acceptable.\n#> Kurtosis           0.86268 0.35299 Assumptions acceptable.\n#> Link Function      2.52749 0.11188 Assumptions acceptable.\n#> Heteroscedasticity 0.05069 0.82187 Assumptions acceptable.\n# Heteroscedasticity Test\nlibrary(car)\n#> Warning: package 'car' was built under R version 4.2.3\n#> Loading required package: carData\n# White test\nncvTest(regresi1)\n#> Non-constant Variance Score Test \n#> Variance formula: ~ fitted.values \n#> Chisquare = 0.4905034, Df = 1, p = 0.4837\n# Autocorrelation Test\nlibrary(lmtest)\n#> Loading required package: zoo\n#> Warning: package 'zoo' was built under R version 4.2.3\n#> \n#> Attaching package: 'zoo'\n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\ndwtest(regresi1)\n#> \n#>  Durbin-Watson test\n#> \n#> data:  regresi1\n#> DW = 0.58729, p-value = 9.399e-13\n#> alternative hypothesis: true autocorrelation is greater than 0\n# Assumption: No perfect multicollinearity\nvif(regresi1)\n#>      LnPDB    Inflasi CreditRate      LnJII       DFTV \n#>   4.011533   1.412398   5.368989   1.828592   8.404443\n# Re-estimate Standard Error\nlibrary(sandwich)\n#> Warning: package 'sandwich' was built under R version 4.2.3\n# Account for heteroskedasticity\ncoeftest(regresi1, vcov = vcovHC(regresi1, \"HC1\"))\n#> \n#> t test of coefficients:\n#> \n#>               Estimate Std. Error  t value  Pr(>|t|)    \n#> (Intercept) -21.798262   1.581079 -13.7870 < 2.2e-16 ***\n#> LnPDB         2.297444   0.118364  19.4100 < 2.2e-16 ***\n#> Inflasi      -0.024070   0.019603  -1.2279    0.2248    \n#> CreditRate    0.043970   0.009386   4.6846 1.937e-05 ***\n#> LnJII         0.161515   0.099960   1.6158    0.1120    \n#> DFTV          0.183586   0.028221   6.5052 2.615e-08 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# Account for heteroskedasticity and autocorrelation\ncoeftest(regresi1, vcov = vcovHAC)\n#> \n#> t test of coefficients:\n#> \n#>               Estimate Std. Error  t value  Pr(>|t|)    \n#> (Intercept) -21.798262   1.500741 -14.5250 < 2.2e-16 ***\n#> LnPDB         2.297444   0.134419  17.0917 < 2.2e-16 ***\n#> Inflasi      -0.024070   0.020238  -1.1894  0.239504    \n#> CreditRate    0.043970   0.016296   2.6981  0.009286 ** \n#> LnJII         0.161515   0.117986   1.3689  0.176686    \n#> DFTV          0.183586   0.041167   4.4595 4.197e-05 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"univariate-time-series.html","id":"univariate-time-series","chapter":"3 Univariate Time Series","heading":"3 Univariate Time Series","text":"","code":""},{"path":"univariate-time-series.html","id":"data-eda","chapter":"3 Univariate Time Series","heading":"3.1 Data EDA","text":"","code":"\nlibrary(readxl)\n#> Warning: package 'readxl' was built under R version 4.2.3\nhargaberas <- read_excel(\"Data/Bab 3/ARIMA.xlsx\")\nhargaberas = hargaberas[,c(-1)]\nhargaberas = ts(hargaberas, start=c(2012,1), frequency=12)\nhargaberas\n#>        Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep\n#> 2012  8726  8778  8687  8583  8537  8554  8606  8635  8624\n#> 2013  8835  8843  8783  8711  8681  8784  9018  9057  9058\n#> 2014  9433  9531  9596  9425  9414  9462  9525  9525  9694\n#> 2015 10612 10766 10987 10648 10569 10679 10732 10935 11055\n#> 2016 11614 11729 11678 11449 11417 11469 11498 11475 11448\n#> 2017 11579 11571 11494 11449 11465 11465 11448 11411 11482\n#> 2018 12276 12414 12299 12035 11943 11907 11936 11899 11900\n#>        Oct   Nov   Dec\n#> 2012  8624  8655  8702\n#> 2013  9108  9152  9262\n#> 2014  9781  9924 10344\n#> 2015 11169 11365 11465\n#> 2016 11433 11450 11476\n#> 2017 11552 11665 11838\n#> 2018 11926 12013 12106\nplot(hargaberas, main=\"Harga Beras di Perdagangan Besar\")\ndekomposisi = decompose(hargaberas)\nplot(dekomposisi)\n# plot acf dan pacf\npar(mfrow=c(2,1))\nacf(hargaberas, lag=48)\npacf(hargaberas, lag=48)\nlibrary(aTSA)\n#> Warning: package 'aTSA' was built under R version 4.2.3\n#> \n#> Attaching package: 'aTSA'\n#> The following object is masked from 'package:graphics':\n#> \n#>     identify\n# Augmented Dickey-Fuller Test \nadf.test(hargaberas)\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag  ADF p.value\n#> [1,]   0 2.96   0.990\n#> [2,]   1 1.65   0.975\n#> [3,]   2 2.04   0.990\n#> [4,]   3 2.18   0.990\n#> Type 2: with drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -0.537   0.858\n#> [2,]   1 -0.717   0.795\n#> [3,]   2 -0.831   0.755\n#> [4,]   3 -0.917   0.724\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -1.42   0.814\n#> [2,]   1 -2.56   0.340\n#> [3,]   2 -2.00   0.570\n#> [4,]   3 -1.78   0.663\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\n# Firs Difference Form\nadf.test(diff(hargaberas))\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -5.11    0.01\n#> [2,]   1 -5.02    0.01\n#> [3,]   2 -4.42    0.01\n#> [4,]   3 -4.36    0.01\n#> Type 2: with drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -5.47    0.01\n#> [2,]   1 -5.58    0.01\n#> [3,]   2 -5.10    0.01\n#> [4,]   3 -5.27    0.01\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -5.43    0.01\n#> [2,]   1 -5.55    0.01\n#> [3,]   2 -5.10    0.01\n#> [4,]   3 -5.28    0.01\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01"},{"path":"univariate-time-series.html","id":"arima","chapter":"3 Univariate Time Series","heading":"3.2 ARIMA","text":"","code":"\nlibrary(forecast)\n#> Warning: package 'forecast' was built under R version 4.2.3\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n#> \n#> Attaching package: 'forecast'\n#> The following object is masked from 'package:aTSA':\n#> \n#>     forecast\nauto.arima(hargaberas, trace=TRUE)\n#> \n#>  ARIMA(2,1,2)(1,1,1)[12]                    : Inf\n#>  ARIMA(0,1,0)(0,1,0)[12]                    : 884.0934\n#>  ARIMA(1,1,0)(1,1,0)[12]                    : 872.3993\n#>  ARIMA(0,1,1)(0,1,1)[12]                    : Inf\n#>  ARIMA(1,1,0)(0,1,0)[12]                    : 876.5573\n#>  ARIMA(1,1,0)(2,1,0)[12]                    : 863.6643\n#>  ARIMA(1,1,0)(2,1,1)[12]                    : Inf\n#>  ARIMA(1,1,0)(1,1,1)[12]                    : Inf\n#>  ARIMA(0,1,0)(2,1,0)[12]                    : 867.3178\n#>  ARIMA(2,1,0)(2,1,0)[12]                    : 865.871\n#>  ARIMA(1,1,1)(2,1,0)[12]                    : 865.1084\n#>  ARIMA(0,1,1)(2,1,0)[12]                    : 862.9856\n#>  ARIMA(0,1,1)(1,1,0)[12]                    : 871.9363\n#>  ARIMA(0,1,1)(2,1,1)[12]                    : Inf\n#>  ARIMA(0,1,1)(1,1,1)[12]                    : Inf\n#>  ARIMA(0,1,2)(2,1,0)[12]                    : 861.8543\n#>  ARIMA(0,1,2)(1,1,0)[12]                    : 872.2305\n#>  ARIMA(0,1,2)(2,1,1)[12]                    : Inf\n#>  ARIMA(0,1,2)(1,1,1)[12]                    : Inf\n#>  ARIMA(1,1,2)(2,1,0)[12]                    : 867.0498\n#>  ARIMA(0,1,3)(2,1,0)[12]                    : 854.8026\n#>  ARIMA(0,1,3)(1,1,0)[12]                    : 865.2557\n#>  ARIMA(0,1,3)(2,1,1)[12]                    : Inf\n#>  ARIMA(0,1,3)(1,1,1)[12]                    : Inf\n#>  ARIMA(1,1,3)(2,1,0)[12]                    : Inf\n#>  ARIMA(0,1,4)(2,1,0)[12]                    : 857.2177\n#>  ARIMA(1,1,4)(2,1,0)[12]                    : 859.7882\n#> \n#>  Best model: ARIMA(0,1,3)(2,1,0)[12]\n#> Series: hargaberas \n#> ARIMA(0,1,3)(2,1,0)[12] \n#> \n#> Coefficients:\n#>          ma1     ma2     ma3     sar1     sar2\n#>       0.3775  0.0028  0.4180  -0.4831  -0.4956\n#> s.e.  0.1166  0.1301  0.1403   0.1231   0.1239\n#> \n#> sigma^2 = 7757:  log likelihood = -420.75\n#> AIC=853.49   AICc=854.8   BIC=867.07\nlibrary(lmtest)\n#> Loading required package: zoo\n#> Warning: package 'zoo' was built under R version 4.2.3\n#> \n#> Attaching package: 'zoo'\n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n# Best model: ARIMA(0,1,3)(2,1,0)[12]\nmodel1 = arima(hargaberas, order=c(0,1,3), seasonal=list(order=c(2,1,0), period=12))\ncoeftest(model1)\n#> \n#> z test of coefficients:\n#> \n#>       Estimate Std. Error z value  Pr(>|z|)    \n#> ma1   0.377526   0.116627  3.2370  0.001208 ** \n#> ma2   0.002799   0.130115  0.0215  0.982837    \n#> ma3   0.417985   0.140264  2.9800  0.002883 ** \n#> sar1 -0.483126   0.123055 -3.9261 8.634e-05 ***\n#> sar2 -0.495630   0.123883 -4.0008 6.313e-05 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# Arch Test\narch.test(model1)\n#> ARCH heteroscedasticity test for residuals \n#> alternative: heteroscedastic \n#> \n#> Portmanteau-Q test: \n#>      order    PQ p.value\n#> [1,]     4  5.41   0.247\n#> [2,]     8  8.53   0.384\n#> [3,]    12 11.36   0.498\n#> [4,]    16 13.03   0.670\n#> [5,]    20 14.44   0.808\n#> [6,]    24 16.04   0.887\n#> Lagrange-Multiplier test: \n#>      order    LM  p.value\n#> [1,]     4 41.16 6.04e-09\n#> [2,]     8 13.84 5.42e-02\n#> [3,]    12  6.06 8.69e-01\n#> [4,]    16  3.39 9.99e-01\n#> [5,]    20  2.16 1.00e+00\n#> [6,]    24  1.16 1.00e+00\n# Autocorrelartion Test\nBox.test(model1$residuals, lag = 1, type = c(\"Ljung-Box\"), fitdf = 0)\n#> \n#>  Box-Ljung test\n#> \n#> data:  model1$residuals\n#> X-squared = 0.0041444, df = 1, p-value = 0.9487\n# Forecasting\nforecast(model1, h=12)\n#>          Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95\n#> Jan 2019       12355.67 12246.95 12464.39 12189.39 12521.95\n#> Feb 2019       12493.09 12308.02 12678.16 12210.05 12776.13\n#> Mar 2019       12392.80 12154.53 12631.07 12028.40 12757.21\n#> Apr 2019       12143.41 11835.19 12451.63 11672.03 12614.80\n#> May 2019       12079.80 11714.79 12444.80 11521.57 12638.02\n#> Jun 2019       12086.96 11672.89 12501.04 11453.70 12720.23\n#> Jul 2019       12116.54 11658.63 12574.45 11416.22 12816.85\n#> Aug 2019       12086.48 11588.57 12584.38 11325.00 12847.96\n#> Sep 2019       12072.73 11537.81 12607.64 11254.64 12890.81\n#> Oct 2019       12077.85 11508.32 12647.38 11206.83 12948.88\n#> Nov 2019       12129.83 11527.68 12731.99 11208.92 13050.75\n#> Dec 2019       12188.63 11555.52 12821.73 11220.38 13156.88\nplot(forecast(model1, h=12))"},{"path":"univariate-time-series.html","id":"arch-garch","chapter":"3 Univariate Time Series","heading":"3.3 ARCH-GARCH","text":"","code":"\nlibrary(readxl)\nkurs <- read_excel(\"Data/Bab 3/ARCH-GARCH.xlsx\")\nkurs = kurs[,c(-1)]\nDates = seq(as.Date(\"2019-01-01\"), as.Date(\"2020-12-31\"), \"day\") \n\nlibrary(xts)\n#> Warning: package 'xts' was built under R version 4.2.3\nkurs = xts(kurs, order.by = Dates)\nplot(kurs, main=\"Nilai Tukar US Dollar terhadap Rupiah\")\n# ARIMA\nauto.arima(kurs, trace=TRUE)\n#> \n#>  Fitting models using approximations to speed things up...\n#> \n#>  ARIMA(2,1,2) with drift         : 8738.664\n#>  ARIMA(0,1,0) with drift         : 8755.631\n#>  ARIMA(1,1,0) with drift         : 8745.702\n#>  ARIMA(0,1,1) with drift         : 8744.836\n#>  ARIMA(0,1,0)                    : 8753.644\n#>  ARIMA(1,1,2) with drift         : 8742.017\n#>  ARIMA(2,1,1) with drift         : 8748.12\n#>  ARIMA(3,1,2) with drift         : 8746.649\n#>  ARIMA(2,1,3) with drift         : 8740.697\n#>  ARIMA(1,1,1) with drift         : 8746.629\n#>  ARIMA(1,1,3) with drift         : 8743.813\n#>  ARIMA(3,1,1) with drift         : 8748.657\n#>  ARIMA(3,1,3) with drift         : 8751.34\n#>  ARIMA(2,1,2)                    : 8736.651\n#>  ARIMA(1,1,2)                    : 8740.011\n#>  ARIMA(2,1,1)                    : 8746.122\n#>  ARIMA(3,1,2)                    : 8744.611\n#>  ARIMA(2,1,3)                    : 8738.68\n#>  ARIMA(1,1,1)                    : 8744.657\n#>  ARIMA(1,1,3)                    : 8741.802\n#>  ARIMA(3,1,1)                    : 8746.636\n#>  ARIMA(3,1,3)                    : 8749.317\n#> \n#>  Now re-fitting the best model(s) without approximations...\n#> \n#>  ARIMA(2,1,2)                    : 8739.165\n#> \n#>  Best model: ARIMA(2,1,2)\n#> Series: kurs \n#> ARIMA(2,1,2) \n#> \n#> Coefficients:\n#>          ar1      ar2      ma1     ma2\n#>       1.2304  -0.7997  -1.3560  0.8726\n#> s.e.  0.0650   0.0506   0.0599  0.0425\n#> \n#> sigma^2 = 9181:  log likelihood = -4364.54\n#> AIC=8739.08   AICc=8739.16   BIC=8762.05\n#  Best model: ARIMA(2,1,2)\nmodel2 = arima(kurs, order=c(2,1,2))\ncoeftest(model2)\n#> \n#> z test of coefficients:\n#> \n#>      Estimate Std. Error z value  Pr(>|z|)    \n#> ar1  1.230421   0.065027  18.922 < 2.2e-16 ***\n#> ar2 -0.799713   0.050577 -15.812 < 2.2e-16 ***\n#> ma1 -1.355960   0.059905 -22.635 < 2.2e-16 ***\n#> ma2  0.872641   0.042457  20.554 < 2.2e-16 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# ARCH Test\narch.test(model2)\n#> ARCH heteroscedasticity test for residuals \n#> alternative: heteroscedastic \n#> \n#> Portmanteau-Q test: \n#>      order    PQ p.value\n#> [1,]     4  70.7 1.6e-14\n#> [2,]     8 134.2 0.0e+00\n#> [3,]    12 188.4 0.0e+00\n#> [4,]    16 206.3 0.0e+00\n#> [5,]    20 216.8 0.0e+00\n#> [6,]    24 225.0 0.0e+00\n#> Lagrange-Multiplier test: \n#>      order   LM  p.value\n#> [1,]     4 1471 0.00e+00\n#> [2,]     8  446 0.00e+00\n#> [3,]    12  251 0.00e+00\n#> [4,]    16  179 0.00e+00\n#> [5,]    20  135 0.00e+00\n#> [6,]    24  106 1.14e-12\nlibrary(fGarch)\n#> Warning: package 'fGarch' was built under R version 4.2.3\n#> NOTE: Packages 'fBasics', 'timeDate', and 'timeSeries' are no longer\n#> attached to the search() path when 'fGarch' is attached.\n#> \n#> If needed attach them yourself in your R script by e.g.,\n#>         require(\"timeSeries\")\n# Stationary Test\n# Phillips-Perron Unit Root Test \npp.test(kurs)\n#> Phillips-Perron Unit Root Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>  lag   Z_rho p.value\n#>    6 -0.0408   0.683\n#> ----- \n#>  Type 2: with drift no trend \n#>  lag Z_rho p.value\n#>    6 -11.1   0.107\n#> ----- \n#>  Type 3: with drift and trend \n#>  lag Z_rho p.value\n#>    6 -12.1   0.367\n#> --------------- \n#> Note: p-value = 0.01 means p.value <= 0.01\npp.test(diff(kurs))\n#> Phillips-Perron Unit Root Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>  lag Z_rho p.value\n#>    6  -804    0.01\n#> ----- \n#>  Type 2: with drift no trend \n#>  lag Z_rho p.value\n#>    6  -804    0.01\n#> ----- \n#>  Type 3: with drift and trend \n#>  lag Z_rho p.value\n#>    6  -804    0.01\n#> --------------- \n#> Note: p-value = 0.01 means p.value <= 0.01\ne = diff(kurs)[-1]\npar(mfrow=c(1,1))\nacf(e)\npacf(e)\nplot(e)\n# ARCH(1) = GARCH(1,0)\nmodel10 = garchFit(~garch(1,0), data=e, trace=FALSE)\nsummary(model10)\n#> \n#> Title:\n#>  GARCH Modelling \n#> \n#> Call:\n#>  garchFit(formula = ~garch(1, 0), data = e, trace = FALSE) \n#> \n#> Mean and Variance Equation:\n#>  data ~ garch(1, 0)\n#> <environment: 0x000002dce167b308>\n#>  [data = e]\n#> \n#> Conditional Distribution:\n#>  norm \n#> \n#> Coefficient(s):\n#>         mu       omega      alpha1  \n#>   -1.15887  5442.67260     0.61303  \n#> \n#> Std. Errors:\n#>  based on Hessian \n#> \n#> Error Analysis:\n#>         Estimate  Std. Error  t value Pr(>|t|)    \n#> mu       -1.1589      2.8293   -0.410    0.682    \n#> omega  5442.6726    374.5058   14.533  < 2e-16 ***\n#> alpha1    0.6130      0.1073    5.713 1.11e-08 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Log Likelihood:\n#>  -4303.768    normalized:  -5.895573 \n#> \n#> Description:\n#>  Tue Apr  2 18:23:56 2024 by user: derik \n#> \n#> \n#> Standardised Residuals Tests:\n#>                                   Statistic      p-Value\n#>  Jarque-Bera Test   R    Chi^2  4839.704454 0.000000e+00\n#>  Shapiro-Wilk Test  R    W         0.839958 0.000000e+00\n#>  Ljung-Box Test     R    Q(10)    29.630084 9.844469e-04\n#>  Ljung-Box Test     R    Q(15)    39.676117 5.074432e-04\n#>  Ljung-Box Test     R    Q(20)    41.959542 2.799349e-03\n#>  Ljung-Box Test     R^2  Q(10)    91.109411 3.219647e-15\n#>  Ljung-Box Test     R^2  Q(15)   147.246211 0.000000e+00\n#>  Ljung-Box Test     R^2  Q(20)   159.654019 0.000000e+00\n#>  LM Arch Test       R    TR^2    114.581427 0.000000e+00\n#> \n#> Information Criterion Statistics:\n#>      AIC      BIC      SIC     HQIC \n#> 11.79937 11.81824 11.79933 11.80665\n# GARCH(1,1)\nmodel11 = garchFit(~garch(1,1), data=e, trace=FALSE)\nsummary(model11)\n#> \n#> Title:\n#>  GARCH Modelling \n#> \n#> Call:\n#>  garchFit(formula = ~garch(1, 1), data = e, trace = FALSE) \n#> \n#> Mean and Variance Equation:\n#>  data ~ garch(1, 1)\n#> <environment: 0x000002dcdd0f4c88>\n#>  [data = e]\n#> \n#> Conditional Distribution:\n#>  norm \n#> \n#> Coefficient(s):\n#>        mu      omega     alpha1      beta1  \n#>  -2.41759  366.97243    0.25035    0.74326  \n#> \n#> Std. Errors:\n#>  based on Hessian \n#> \n#> Error Analysis:\n#>         Estimate  Std. Error  t value Pr(>|t|)    \n#> mu      -2.41759     2.21121   -1.093    0.274    \n#> omega  366.97243    87.52212    4.193 2.75e-05 ***\n#> alpha1   0.25035     0.04215    5.940 2.85e-09 ***\n#> beta1    0.74326     0.03132   23.734  < 2e-16 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Log Likelihood:\n#>  -4188.199    normalized:  -5.73726 \n#> \n#> Description:\n#>  Tue Apr  2 18:23:57 2024 by user: derik \n#> \n#> \n#> Standardised Residuals Tests:\n#>                                    Statistic     p-Value\n#>  Jarque-Bera Test   R    Chi^2  1527.8453918 0.000000000\n#>  Shapiro-Wilk Test  R    W         0.9121068 0.000000000\n#>  Ljung-Box Test     R    Q(10)    28.3515449 0.001585409\n#>  Ljung-Box Test     R    Q(15)    31.1437861 0.008403721\n#>  Ljung-Box Test     R    Q(20)    32.4515824 0.038717821\n#>  Ljung-Box Test     R^2  Q(10)     4.8877686 0.898547890\n#>  Ljung-Box Test     R^2  Q(15)     9.1420869 0.869971665\n#>  Ljung-Box Test     R^2  Q(20)    11.4700910 0.933109272\n#>  LM Arch Test       R    TR^2      5.5858039 0.935507008\n#> \n#> Information Criterion Statistics:\n#>      AIC      BIC      SIC     HQIC \n#> 11.48548 11.51065 11.48542 11.49519\n# GARCH(1,1) with mean equation ARMA(0,1)\nmodel11b = garchFit(~arma(0,1)+garch(1,1), data=e, trace=FALSE)\nsummary(model11b)\n#> \n#> Title:\n#>  GARCH Modelling \n#> \n#> Call:\n#>  garchFit(formula = ~arma(0, 1) + garch(1, 1), data = e, trace = FALSE) \n#> \n#> Mean and Variance Equation:\n#>  data ~ arma(0, 1) + garch(1, 1)\n#> <environment: 0x000002dcd966c250>\n#>  [data = e]\n#> \n#> Conditional Distribution:\n#>  norm \n#> \n#> Coefficient(s):\n#>        mu        ma1      omega     alpha1      beta1  \n#>  -2.53982   -0.22537  337.43876    0.23716    0.75465  \n#> \n#> Std. Errors:\n#>  based on Hessian \n#> \n#> Error Analysis:\n#>         Estimate  Std. Error  t value Pr(>|t|)    \n#> mu      -2.53982     1.74379   -1.456    0.145    \n#> ma1     -0.22537     0.04724   -4.771 1.83e-06 ***\n#> omega  337.43876    85.21204    3.960 7.50e-05 ***\n#> alpha1   0.23716     0.04038    5.874 4.26e-09 ***\n#> beta1    0.75465     0.03129   24.118  < 2e-16 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Log Likelihood:\n#>  -4177.446    normalized:  -5.722529 \n#> \n#> Description:\n#>  Tue Apr  2 18:23:57 2024 by user: derik \n#> \n#> \n#> Standardised Residuals Tests:\n#>                                    Statistic    p-Value\n#>  Jarque-Bera Test   R    Chi^2  1331.0510666 0.00000000\n#>  Shapiro-Wilk Test  R    W         0.9147019 0.00000000\n#>  Ljung-Box Test     R    Q(10)    20.1208930 0.02812976\n#>  Ljung-Box Test     R    Q(15)    23.9601552 0.06577322\n#>  Ljung-Box Test     R    Q(20)    26.1490497 0.16094547\n#>  Ljung-Box Test     R^2  Q(10)     4.7499032 0.90724638\n#>  Ljung-Box Test     R^2  Q(15)     8.8134669 0.88706688\n#>  Ljung-Box Test     R^2  Q(20)    11.6275315 0.92829976\n#>  LM Arch Test       R    TR^2      5.4233826 0.94232413\n#> \n#> Information Criterion Statistics:\n#>      AIC      BIC      SIC     HQIC \n#> 11.45876 11.49021 11.45866 11.47089\n# Best Model = \"model11b\"\nDates2 = seq(as.Date(\"2019-01-02\"), as.Date(\"2020-12-31\"), \"day\") \nstdev = xts(model11b@sigma.t, order.by = Dates2)\nplot(stdev, main=\"Simpangan Baku\")\n# Forecasting\npredict(model11b, n.ahead=20, plot=TRUE, nx=731)#>    meanForecast meanError standardDeviation lowerInterval\n#> 1     15.748251  76.11087          76.11087     -133.4263\n#> 2     -2.539819  79.85676          77.99279     -159.0562\n#> 3     -2.539819  81.72802          79.81549     -162.7238\n#> 4     -2.539819  83.54257          81.58306     -166.2802\n#> 5     -2.539819  85.30415          83.29911     -169.7329\n#> 6     -2.539819  87.01608          84.96689     -173.0882\n#> 7     -2.539819  88.68137          86.58929     -176.3521\n#> 8     -2.539819  90.30269          88.16892     -179.5298\n#> 9     -2.539819  91.88248          89.70815     -182.6262\n#> 10    -2.539819  93.42296          91.20912     -185.6454\n#> 11    -2.539819  94.92613          92.67380     -188.5916\n#> 12    -2.539819  96.39384          94.10397     -191.4683\n#> 13    -2.539819  97.82780          95.50128     -194.2788\n#> 14    -2.539819  99.22954          96.86724     -197.0261\n#> 15    -2.539819 100.60052          98.20325     -199.7132\n#> 16    -2.539819 101.94206          99.51061     -202.3426\n#> 17    -2.539819 103.25541         100.79051     -204.9167\n#> 18    -2.539819 104.54171         102.04409     -207.4378\n#> 19    -2.539819 105.80203         103.27236     -209.9080\n#> 20    -2.539819 107.03737         104.47632     -212.3292\n#>    upperInterval\n#> 1       164.9228\n#> 2       153.9765\n#> 3       157.6442\n#> 4       161.2006\n#> 5       164.6532\n#> 6       168.0086\n#> 7       171.2725\n#> 8       174.4502\n#> 9       177.5465\n#> 10      180.5658\n#> 11      183.5120\n#> 12      186.3886\n#> 13      189.1991\n#> 14      191.9465\n#> 15      194.6336\n#> 16      197.2630\n#> 17      199.8371\n#> 18      202.3582\n#> 19      204.8283\n#> 20      207.2496"},{"path":"multivariate-time-series.html","id":"multivariate-time-series","chapter":"4 Multivariate Time Series","heading":"4 Multivariate Time Series","text":"","code":""},{"path":"multivariate-time-series.html","id":"varvecm","chapter":"4 Multivariate Time Series","heading":"4.1 VAR/VECM","text":"\n## SVAR","code":"\nlibrary(readxl)\n#> Warning: package 'readxl' was built under R version 4.2.3\ndata1 <- read_excel(\"Data/Bab 4/VECM.xlsx\")\ntsdata = data1[,c(-1,-2,-3,-4)]\ntsdata = ts(tsdata, start=c(2010,1), frequency=12)\nplot(tsdata)\n# Stationary Test\nlibrary(aTSA)\n#> Warning: package 'aTSA' was built under R version 4.2.3\n#> \n#> Attaching package: 'aTSA'\n#> The following object is masked from 'package:graphics':\n#> \n#>     identify\nadf.test(tsdata[,\"LnIHK\"])\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag  ADF p.value\n#> [1,]   0 3.25    0.99\n#> [2,]   1 7.29    0.99\n#> [3,]   2 3.75    0.99\n#> [4,]   3 5.84    0.99\n#> Type 2: with drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -0.506   0.869\n#> [2,]   1 -0.541   0.856\n#> [3,]   2 -0.727   0.791\n#> [4,]   3 -0.914   0.725\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -5.31  0.0100\n#> [2,]   1 -2.02  0.5601\n#> [3,]   2 -3.33  0.0732\n#> [4,]   3 -1.77  0.6648\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nadf.test(tsdata[,\"LnRM2\"])\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag  ADF p.value\n#> [1,]   0 3.09    0.99\n#> [2,]   1 4.89    0.99\n#> [3,]   2 4.21    0.99\n#> [4,]   3 4.52    0.99\n#> Type 2: with drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -1.53   0.509\n#> [2,]   1 -2.12   0.284\n#> [3,]   2 -2.04   0.315\n#> [4,]   3 -2.39   0.177\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -2.31   0.441\n#> [2,]   1 -1.50   0.776\n#> [3,]   2 -1.36   0.836\n#> [4,]   3 -1.09   0.918\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nadf.test(tsdata[,\"LnIPI\"])\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag  ADF p.value\n#> [1,]   0 1.03   0.916\n#> [2,]   1 1.45   0.961\n#> [3,]   2 1.81   0.981\n#> [4,]   3 2.09   0.990\n#> Type 2: with drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -1.588   0.487\n#> [2,]   1 -1.069   0.671\n#> [3,]   2 -0.493   0.873\n#> [4,]   3 -0.218   0.927\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -6.68    0.01\n#> [2,]   1 -5.35    0.01\n#> [3,]   2 -4.47    0.01\n#> [4,]   3 -4.11    0.01\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nadf.test(diff(tsdata[,\"LnIHK\"]))\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -15.36    0.01\n#> [2,]   1  -3.52    0.01\n#> [3,]   2  -4.20    0.01\n#> [4,]   3  -2.61    0.01\n#> Type 2: with drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -21.22    0.01\n#> [2,]   1  -5.37    0.01\n#> [3,]   2  -7.78    0.01\n#> [4,]   3  -5.55    0.01\n#> Type 3: with drift and trend \n#>      lag    ADF p.value\n#> [1,]   0 -21.09    0.01\n#> [2,]   1  -5.36    0.01\n#> [3,]   2  -7.79    0.01\n#> [4,]   3  -5.59    0.01\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nadf.test(diff(tsdata[,\"LnRM2\"]))\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -11.73    0.01\n#> [2,]   1  -5.61    0.01\n#> [3,]   2  -4.49    0.01\n#> [4,]   3  -3.31    0.01\n#> Type 2: with drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -14.27    0.01\n#> [2,]   1  -7.53    0.01\n#> [3,]   2  -6.83    0.01\n#> [4,]   3  -5.62    0.01\n#> Type 3: with drift and trend \n#>      lag    ADF p.value\n#> [1,]   0 -14.60    0.01\n#> [2,]   1  -7.85    0.01\n#> [3,]   2  -7.34    0.01\n#> [4,]   3  -6.33    0.01\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nadf.test(diff(tsdata[,\"LnIPI\"]))\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -12.46    0.01\n#> [2,]   1  -9.27    0.01\n#> [3,]   2  -7.24    0.01\n#> [4,]   3  -5.75    0.01\n#> Type 2: with drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -12.64    0.01\n#> [2,]   1  -9.59    0.01\n#> [3,]   2  -7.70    0.01\n#> [4,]   3  -6.32    0.01\n#> Type 3: with drift and trend \n#>      lag    ADF p.value\n#> [1,]   0 -12.56    0.01\n#> [2,]   1  -9.54    0.01\n#> [3,]   2  -7.67    0.01\n#> [4,]   3  -6.31    0.01\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nlibrary(urca)\nlibrary(vars)\n#> Warning: package 'vars' was built under R version 4.2.3\n#> Loading required package: MASS\n#> Warning: package 'MASS' was built under R version 4.2.3\n#> Loading required package: strucchange\n#> Loading required package: zoo\n#> Warning: package 'zoo' was built under R version 4.2.3\n#> \n#> Attaching package: 'zoo'\n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n#> Loading required package: sandwich\n#> Warning: package 'sandwich' was built under R version 4.2.3\n#> Loading required package: lmtest\n#> \n#> Attaching package: 'vars'\n#> The following object is masked from 'package:aTSA':\n#> \n#>     arch.test\n\n# Lag Optimum\nVARselect(tsdata, lag.max = 10)\n#> $selection\n#> AIC(n)  HQ(n)  SC(n) FPE(n) \n#>      9      2      2      9 \n#> \n#> $criteria\n#>                    1             2             3\n#> AIC(n) -2.454158e+01 -2.517704e+01 -2.527724e+01\n#> HQ(n)  -2.438847e+01 -2.490910e+01 -2.489447e+01\n#> SC(n)  -2.415612e+01 -2.450249e+01 -2.431360e+01\n#> FPE(n)  2.197302e-11  1.165805e-11  1.058765e-11\n#>                    4             5             6\n#> AIC(n) -2.529876e+01 -2.531948e+01 -2.531117e+01\n#> HQ(n)  -2.480116e+01 -2.470705e+01 -2.458391e+01\n#> SC(n)  -2.404603e+01 -2.377765e+01 -2.348025e+01\n#> FPE(n)  1.043683e-11  1.034191e-11  1.060910e-11\n#>                    7             8             9\n#> AIC(n) -2.509185e+01 -2.516992e+01 -2.557138e+01\n#> HQ(n)  -2.424976e+01 -2.421299e+01 -2.449963e+01\n#> SC(n)  -2.297184e+01 -2.276081e+01 -2.287319e+01\n#> FPE(n)  1.353419e-11  1.293440e-11  9.038835e-12\n#>                   10\n#> AIC(n) -2.549790e+01\n#> HQ(n)  -2.431131e+01\n#> SC(n)  -2.251061e+01\n#> FPE(n)  1.028471e-11\n# Cointegration Test\ncointest_eigen = ca.jo(tsdata, K=2, type=\"eigen\", ecdet=\"const\", spec=\"longrun\")\nsummary(cointest_eigen)\n#> \n#> ###################### \n#> # Johansen-Procedure # \n#> ###################### \n#> \n#> Test type: maximal eigenvalue statistic (lambda max) , without linear trend and constant in cointegration \n#> \n#> Eigenvalues (lambda):\n#> [1]  5.404113e-01  2.481996e-01  6.245216e-02 -2.633450e-15\n#> \n#> Values of teststatistic and critical values of test:\n#> \n#>           test 10pct  5pct  1pct\n#> r <= 2 |  5.03  7.52  9.24 12.97\n#> r <= 1 | 22.25 13.75 15.67 20.20\n#> r = 0  | 60.64 19.77 22.00 26.81\n#> \n#> Eigenvectors, normalised to first column:\n#> (These are the cointegration relations)\n#> \n#>            LnIHK.l2    LnRM2.l2   LnIPI.l2   constant\n#> LnIHK.l2  1.0000000  1.00000000  1.0000000  1.0000000\n#> LnRM2.l2 -0.1153114  0.08719842 -1.0510635 -0.6085127\n#> LnIPI.l2 -0.8107822 -1.31468643  0.2406645  0.1913803\n#> constant  0.4060887  0.96758544  4.8089173  0.5277719\n#> \n#> Weights W:\n#> (This is the loading matrix)\n#> \n#>            LnIHK.l2    LnRM2.l2    LnIPI.l2      constant\n#> LnIHK.d -0.07391103 -0.02494780 -0.03114995 -2.034556e-13\n#> LnRM2.d -0.06399547  0.08952368  0.07223974  4.136568e-13\n#> LnIPI.d -0.01046286  0.46857303 -0.03192575  8.440672e-13\n# VECM\nmodelvecm = cajorls(cointest_eigen)\nsummary(modelvecm$rlm)\n#> Response LnIHK.d :\n#> \n#> Call:\n#> lm(formula = LnIHK.d ~ ect1 + LnIHK.dl1 + LnRM2.dl1 + LnIPI.dl1 - \n#>     1, data = data.mat)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.015021 -0.005668 -0.001157  0.003871  0.027827 \n#> \n#> Coefficients:\n#>           Estimate Std. Error t value Pr(>|t|)    \n#> ect1      -0.07391    0.01199  -6.166 3.37e-08 ***\n#> LnIHK.dl1 -0.70491    0.10168  -6.933 1.31e-09 ***\n#> LnRM2.dl1  0.08470    0.06861   1.234    0.221    \n#> LnIPI.dl1 -0.01593    0.02695  -0.591    0.556    \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.008005 on 74 degrees of freedom\n#> Multiple R-squared:  0.6302, Adjusted R-squared:  0.6102 \n#> F-statistic: 31.53 on 4 and 74 DF,  p-value: 2.518e-15\n#> \n#> \n#> Response LnRM2.d :\n#> \n#> Call:\n#> lm(formula = LnRM2.d ~ ect1 + LnIHK.dl1 + LnRM2.dl1 + LnIPI.dl1 - \n#>     1, data = data.mat)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.030921 -0.011339  0.001549  0.010970  0.044395 \n#> \n#> Coefficients:\n#>           Estimate Std. Error t value Pr(>|t|)   \n#> ect1      -0.06400    0.02313  -2.767  0.00715 **\n#> LnIHK.dl1  0.33519    0.19621   1.708  0.09177 . \n#> LnRM2.dl1 -0.30552    0.13241  -2.307  0.02383 * \n#> LnIPI.dl1  0.02765    0.05200   0.532  0.59650   \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.01545 on 74 degrees of freedom\n#> Multiple R-squared:  0.3241, Adjusted R-squared:  0.2875 \n#> F-statistic:  8.87 on 4 and 74 DF,  p-value: 6.604e-06\n#> \n#> \n#> Response LnIPI.d :\n#> \n#> Call:\n#> lm(formula = LnIPI.d ~ ect1 + LnIHK.dl1 + LnRM2.dl1 + LnIPI.dl1 - \n#>     1, data = data.mat)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.094660 -0.011913  0.000434  0.021986  0.101991 \n#> \n#> Coefficients:\n#>           Estimate Std. Error t value Pr(>|t|)   \n#> ect1      -0.01046    0.05068  -0.206  0.83700   \n#> LnIHK.dl1 -0.08499    0.42988  -0.198  0.84383   \n#> LnRM2.dl1  0.21190    0.29009   0.730  0.46742   \n#> LnIPI.dl1 -0.35319    0.11394  -3.100  0.00274 **\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.03385 on 74 degrees of freedom\n#> Multiple R-squared:  0.1312, Adjusted R-squared:  0.08427 \n#> F-statistic: 2.794 on 4 and 74 DF,  p-value: 0.03214\nmodelvecm$beta\n#>                ect1\n#> LnIHK.l2  1.0000000\n#> LnRM2.l2 -0.1153114\n#> LnIPI.l2 -0.8107822\n#> constant  0.4060887\nvecm = vec2var(cointest_eigen)\n# IRF\nir = irf(vecm, n.ahead=48)\nplot(ir)\n# FEVD\nvd = fevd(vecm, n.ahead=48)\nplot(vd)\nvd_LnIHK = as.matrix(vd$LnIHK)\nbarplot(t(vd_LnIHK), beside=FALSE, main=\"FEVD LnIHK\", xlab=\"periode\", col=c(\"blue\",\"red\",\"green\"), legend.text=TRUE) \nvd_LnRM2 = as.matrix(vd$LnRM2)\nbarplot(t(vd_LnRM2), beside=FALSE, main=\"FEVD LnRM2\", xlab=\"periode\", col=c(\"blue\",\"red\",\"green\"), legend.text=TRUE)\nvd_LnIPI = as.matrix(vd$LnIPI)\nbarplot(t(vd_LnIPI), beside=FALSE, main=\"FEVD LnIPI\", xlab=\"periode\", col=c(\"blue\",\"red\",\"green\"), legend.text=TRUE)\n# VAR FD, If No cointegtration\nD1LnIHK = diff(tsdata[,\"LnIHK\"])\nD1LnRM2 = diff(tsdata[,\"LnRM2\"])\nD1LnIPI = diff(tsdata[,\"LnIPI\"])\ndatadiff = cbind(D1LnIHK, D1LnRM2, D1LnIPI)\nplot(datadiff)\nVARselect(datadiff, lag.max = 10)\n#> $selection\n#> AIC(n)  HQ(n)  SC(n) FPE(n) \n#>     10      3      1      3 \n#> \n#> $criteria\n#>                    1             2             3\n#> AIC(n) -2.488624e+01 -2.508974e+01 -2.522710e+01\n#> HQ(n)  -2.473209e+01 -2.481999e+01 -2.484173e+01\n#> SC(n)  -2.449770e+01 -2.440980e+01 -2.425574e+01\n#> FPE(n)  1.556733e-11  1.272259e-11  1.113498e-11\n#>                    4             5             6\n#> AIC(n) -2.513616e+01 -2.494060e+01 -2.490228e+01\n#> HQ(n)  -2.463518e+01 -2.432401e+01 -2.417008e+01\n#> SC(n)  -2.387340e+01 -2.338644e+01 -2.305671e+01\n#> FPE(n)  1.228686e-11  1.512269e-11  1.599877e-11\n#>                    7             8             9\n#> AIC(n) -2.492141e+01 -2.513204e+01 -2.515552e+01\n#> HQ(n)  -2.407360e+01 -2.416862e+01 -2.407649e+01\n#> SC(n)  -2.278444e+01 -2.270366e+01 -2.243574e+01\n#> FPE(n)  1.609812e-11  1.349591e-11  1.379267e-11\n#>                   10\n#> AIC(n) -2.527308e+01\n#> HQ(n)  -2.407844e+01\n#> SC(n)  -2.226189e+01\n#> FPE(n)  1.300117e-11\nvarfd = VAR(datadiff, p=3, type=\"both\")\nsummary(varfd)\n#> \n#> VAR Estimation Results:\n#> ========================= \n#> Endogenous variables: D1LnIHK, D1LnRM2, D1LnIPI \n#> Deterministic variables: both \n#> Sample size: 76 \n#> Log Likelihood: 669.253 \n#> Roots of the characteristic polynomial:\n#> 0.9777 0.7641 0.7641 0.6842 0.6842 0.6017 0.6017 0.5599 0.1487\n#> Call:\n#> VAR(y = datadiff, p = 3, type = \"both\")\n#> \n#> \n#> Estimation results for equation D1LnIHK: \n#> ======================================== \n#> D1LnIHK = D1LnIHK.l1 + D1LnRM2.l1 + D1LnIPI.l1 + D1LnIHK.l2 + D1LnRM2.l2 + D1LnIPI.l2 + D1LnIHK.l3 + D1LnRM2.l3 + D1LnIPI.l3 + const + trend \n#> \n#>              Estimate Std. Error t value Pr(>|t|)   \n#> D1LnIHK.l1 -2.695e-01  1.136e-01  -2.372  0.02065 * \n#> D1LnRM2.l1  1.048e-01  6.640e-02   1.578  0.11951   \n#> D1LnIPI.l1 -2.316e-02  2.636e-02  -0.879  0.38286   \n#> D1LnIHK.l2  2.542e-01  1.214e-01   2.095  0.04010 * \n#> D1LnRM2.l2  1.258e-01  6.760e-02   1.861  0.06733 . \n#> D1LnIPI.l2  7.308e-03  2.795e-02   0.261  0.79454   \n#> D1LnIHK.l3 -3.575e-01  1.219e-01  -2.933  0.00463 **\n#> D1LnRM2.l3  1.015e-01  6.679e-02   1.520  0.13348   \n#> D1LnIPI.l3  3.637e-02  2.675e-02   1.360  0.17860   \n#> const       3.701e-03  2.760e-03   1.341  0.18469   \n#> trend       3.603e-06  3.837e-05   0.094  0.92549   \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> \n#> Residual standard error: 0.006803 on 65 degrees of freedom\n#> Multiple R-Squared: 0.7325,  Adjusted R-squared: 0.6913 \n#> F-statistic: 17.79 on 10 and 65 DF,  p-value: 4.614e-15 \n#> \n#> \n#> Estimation results for equation D1LnRM2: \n#> ======================================== \n#> D1LnRM2 = D1LnIHK.l1 + D1LnRM2.l1 + D1LnIPI.l1 + D1LnIHK.l2 + D1LnRM2.l2 + D1LnIPI.l2 + D1LnIHK.l3 + D1LnRM2.l3 + D1LnIPI.l3 + const + trend \n#> \n#>              Estimate Std. Error t value Pr(>|t|)    \n#> D1LnIHK.l1 -1.023e-01  2.305e-01  -0.444 0.658605    \n#> D1LnRM2.l1 -4.005e-01  1.347e-01  -2.973 0.004138 ** \n#> D1LnIPI.l1 -4.924e-03  5.348e-02  -0.092 0.926915    \n#> D1LnIHK.l2 -7.711e-01  2.463e-01  -3.131 0.002611 ** \n#> D1LnRM2.l2 -3.981e-01  1.372e-01  -2.902 0.005054 ** \n#> D1LnIPI.l2  4.497e-02  5.671e-02   0.793 0.430615    \n#> D1LnIHK.l3  2.169e-01  2.473e-01   0.877 0.383719    \n#> D1LnRM2.l3 -1.699e-02  1.355e-01  -0.125 0.900617    \n#> D1LnIPI.l3 -4.905e-02  5.427e-02  -0.904 0.369493    \n#> const       2.144e-02  5.601e-03   3.829 0.000292 ***\n#> trend      -1.726e-04  7.786e-05  -2.217 0.030141 *  \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> \n#> Residual standard error: 0.0138 on 65 degrees of freedom\n#> Multiple R-Squared: 0.4561,  Adjusted R-squared: 0.3724 \n#> F-statistic:  5.45 on 10 and 65 DF,  p-value: 7.948e-06 \n#> \n#> \n#> Estimation results for equation D1LnIPI: \n#> ======================================== \n#> D1LnIPI = D1LnIHK.l1 + D1LnRM2.l1 + D1LnIPI.l1 + D1LnIHK.l2 + D1LnRM2.l2 + D1LnIPI.l2 + D1LnIHK.l3 + D1LnRM2.l3 + D1LnIPI.l3 + const + trend \n#> \n#>              Estimate Std. Error t value Pr(>|t|)    \n#> D1LnIHK.l1 -9.657e-01  5.265e-01  -1.834  0.07121 .  \n#> D1LnRM2.l1 -4.073e-02  3.078e-01  -0.132  0.89511    \n#> D1LnIPI.l1 -5.834e-01  1.221e-01  -4.776 1.06e-05 ***\n#> D1LnIHK.l2 -1.065e+00  5.625e-01  -1.893  0.06284 .  \n#> D1LnRM2.l2 -2.528e-01  3.133e-01  -0.807  0.42264    \n#> D1LnIPI.l2 -4.311e-01  1.295e-01  -3.328  0.00144 ** \n#> D1LnIHK.l3 -3.630e-01  5.648e-01  -0.643  0.52271    \n#> D1LnRM2.l3 -3.290e-01  3.096e-01  -1.063  0.29188    \n#> D1LnIPI.l3 -2.070e-01  1.240e-01  -1.670  0.09981 .  \n#> const       2.268e-02  1.279e-02   1.773  0.08089 .  \n#> trend       4.216e-06  1.778e-04   0.024  0.98116    \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> \n#> Residual standard error: 0.03153 on 65 degrees of freedom\n#> Multiple R-Squared: 0.3186,  Adjusted R-squared: 0.2138 \n#> F-statistic: 3.039 on 10 and 65 DF,  p-value: 0.003239 \n#> \n#> \n#> \n#> Covariance matrix of residuals:\n#>            D1LnIHK    D1LnRM2    D1LnIPI\n#> D1LnIHK  4.628e-05 -3.554e-05 -1.799e-06\n#> D1LnRM2 -3.554e-05  1.906e-04  8.303e-05\n#> D1LnIPI -1.799e-06  8.303e-05  9.941e-04\n#> \n#> Correlation matrix of residuals:\n#>           D1LnIHK D1LnRM2   D1LnIPI\n#> D1LnIHK  1.000000 -0.3785 -0.008387\n#> D1LnRM2 -0.378457  1.0000  0.190775\n#> D1LnIPI -0.008387  0.1908  1.000000\n# Stablity VAR\nplot(stability(varfd))\n# IRF\nimpres = irf(varfd, n.ahead=48)\nplot(impres)\nlibrary(readxl)\ndata1 <- read_excel(\"Data/Bab 4/SVAR.xlsx\")\nhead(data1)\n#> # A tibble: 6 Ã— 4\n#>   quarter growth inflation interest\n#>   <chr>    <dbl>     <dbl>    <dbl>\n#> 1 2006q1    5.13     15.0     12.6 \n#> 2 2006q2    4.93     14.8     12.8 \n#> 3 2006q3    5.86     14.0     12.4 \n#> 4 2006q4    6.06      6.41    11.2 \n#> 5 2007q1    6.06      6.34     9.83\n#> 6 2007q2    6.73      5.64     9.08\ntsdata = data1[,c(-1)]\ntsdata = ts(tsdata, start=c(2006,1), frequency=4)\nplot(tsdata)\nlibrary(aTSA)\nadf.test(tsdata[,\"growth\"])\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag    ADF p.value\n#> [1,]   0 -0.315   0.550\n#> [2,]   1 -0.265   0.564\n#> [3,]   2 -0.578   0.469\n#> [4,]   3 -0.583   0.467\n#> Type 2: with drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -2.34  0.1978\n#> [2,]   1 -2.68  0.0874\n#> [3,]   2 -2.63  0.0955\n#> [4,]   3 -2.25  0.2320\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -3.06  0.1453\n#> [2,]   1 -3.74  0.0296\n#> [3,]   2 -3.40  0.0647\n#> [4,]   3 -3.02  0.1627\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nadf.test(tsdata[,\"inflation\"])\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -2.34  0.0212\n#> [2,]   1 -2.37  0.0200\n#> [3,]   2 -2.31  0.0227\n#> [4,]   3 -1.14  0.2675\n#> Type 2: with drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -3.26  0.0236\n#> [2,]   1 -3.82  0.0100\n#> [3,]   2 -4.50  0.0100\n#> [4,]   3 -2.37  0.1887\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -3.46  0.0552\n#> [2,]   1 -4.32  0.0100\n#> [3,]   2 -5.67  0.0100\n#> [4,]   3 -3.86  0.0221\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\nadf.test(tsdata[,\"interest\"])\n#> Augmented Dickey-Fuller Test \n#> alternative: stationary \n#>  \n#> Type 1: no drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -2.72  0.0100\n#> [2,]   1 -2.02  0.0441\n#> [3,]   2 -1.93  0.0532\n#> [4,]   3 -1.67  0.0913\n#> Type 2: with drift no trend \n#>      lag   ADF p.value\n#> [1,]   0 -3.06  0.0391\n#> [2,]   1 -3.52  0.0126\n#> [3,]   2 -3.33  0.0206\n#> [4,]   3 -2.54  0.1232\n#> Type 3: with drift and trend \n#>      lag   ADF p.value\n#> [1,]   0 -2.49  0.3714\n#> [2,]   1 -4.07  0.0133\n#> [3,]   2 -3.82  0.0240\n#> [4,]   3 -2.90  0.2080\n#> ---- \n#> Note: in fact, p.value = 0.01 means p.value <= 0.01\n#cLag Optimum\nlibrary(vars)\nVARselect(tsdata, lag.max = 10)\n#> $selection\n#> AIC(n)  HQ(n)  SC(n) FPE(n) \n#>      2      1      1      2 \n#> \n#> $criteria\n#>                  1           2           3           4\n#> AIC(n) -3.70894477 -3.80592549 -3.69612636 -3.74782971\n#> HQ(n)  -3.53024390 -3.49319896 -3.24937417 -3.16705186\n#> SC(n)  -3.23190789 -2.97111094 -2.50353415 -2.19745983\n#> FPE(n)  0.02453576  0.02239812  0.02535002  0.02471383\n#>                  5           6           7           8\n#> AIC(n) -3.74823364 -3.50174099 -3.37833948 -3.26151640\n#> HQ(n)  -3.03343013 -2.65291182 -2.39548466 -2.14463592\n#> SC(n)  -1.84008610 -1.23581578 -0.75463661 -0.28003587\n#> FPE(n)  0.02580004  0.03528312  0.04400099  0.05681734\n#>                  9          10\n#> AIC(n) -3.71876734 -3.74360021\n#> HQ(n)  -2.46786120 -2.35866842\n#> SC(n)  -0.37950914 -0.04656435\n#> FPE(n)  0.04372386  0.05614527\n# VAR Estimation\nvar.est1 = VAR(tsdata, p = 2, type = \"none\")\nsummary(var.est1)\n#> \n#> VAR Estimation Results:\n#> ========================= \n#> Endogenous variables: growth, inflation, interest \n#> Deterministic variables: none \n#> Sample size: 54 \n#> Log Likelihood: -128.363 \n#> Roots of the characteristic polynomial:\n#> 0.9909 0.706 0.706 0.4297 0.1321 0.1321\n#> Call:\n#> VAR(y = tsdata, p = 2, type = \"none\")\n#> \n#> \n#> Estimation results for equation growth: \n#> ======================================= \n#> growth = growth.l1 + inflation.l1 + interest.l1 + growth.l2 + inflation.l2 + interest.l2 \n#> \n#>               Estimate Std. Error t value Pr(>|t|)    \n#> growth.l1     0.833907   0.134741   6.189 1.29e-07 ***\n#> inflation.l1  0.001106   0.033450   0.033   0.9738    \n#> interest.l1   0.044345   0.143583   0.309   0.7588    \n#> growth.l2     0.035982   0.128753   0.279   0.7811    \n#> inflation.l2 -0.095836   0.038141  -2.513   0.0154 *  \n#> interest.l2   0.133608   0.114623   1.166   0.2495    \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> \n#> Residual standard error: 0.3558 on 48 degrees of freedom\n#> Multiple R-Squared: 0.9963,  Adjusted R-squared: 0.9959 \n#> F-statistic:  2164 on 6 and 48 DF,  p-value: < 2.2e-16 \n#> \n#> \n#> Estimation results for equation inflation: \n#> ========================================== \n#> inflation = growth.l1 + inflation.l1 + interest.l1 + growth.l2 + inflation.l2 + interest.l2 \n#> \n#>               Estimate Std. Error t value Pr(>|t|)    \n#> growth.l1     0.232652   0.602805   0.386    0.701    \n#> inflation.l1  0.840256   0.149650   5.615 9.66e-07 ***\n#> interest.l1  -0.061073   0.642360  -0.095    0.925    \n#> growth.l2     0.115551   0.576015   0.201    0.842    \n#> inflation.l2 -0.135143   0.170636  -0.792    0.432    \n#> interest.l2   0.002248   0.512801   0.004    0.997    \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> \n#> Residual standard error: 1.592 on 48 degrees of freedom\n#> Multiple R-Squared: 0.9381,  Adjusted R-squared: 0.9304 \n#> F-statistic: 121.3 on 6 and 48 DF,  p-value: < 2.2e-16 \n#> \n#> \n#> Estimation results for equation interest: \n#> ========================================= \n#> interest = growth.l1 + inflation.l1 + interest.l1 + growth.l2 + inflation.l2 + interest.l2 \n#> \n#>              Estimate Std. Error t value Pr(>|t|)    \n#> growth.l1     0.20986    0.13119   1.600  0.11622    \n#> inflation.l1  0.11010    0.03257   3.381  0.00144 ** \n#> interest.l1   1.12480    0.13979   8.046 1.88e-10 ***\n#> growth.l2    -0.06797    0.12536  -0.542  0.59017    \n#> inflation.l2 -0.03737    0.03713  -1.006  0.31930    \n#> interest.l2  -0.30853    0.11160  -2.765  0.00806 ** \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> \n#> Residual standard error: 0.3464 on 48 degrees of freedom\n#> Multiple R-Squared: 0.9979,  Adjusted R-squared: 0.9976 \n#> F-statistic:  3734 on 6 and 48 DF,  p-value: < 2.2e-16 \n#> \n#> \n#> \n#> Covariance matrix of residuals:\n#>            growth inflation interest\n#> growth    0.12655   0.08828  0.01781\n#> inflation 0.08828   2.53321  0.18157\n#> interest  0.01781   0.18157  0.11999\n#> \n#> Correlation matrix of residuals:\n#>           growth inflation interest\n#> growth    1.0000    0.1559   0.1445\n#> inflation 0.1559    1.0000   0.3293\n#> interest  0.1445    0.3293   1.0000\n# Matriks A for SVAR AB-model\na.mat = diag(3)\ndiag(a.mat) = NA\na.mat[2,1] = NA\na.mat[3,1] = NA\na.mat[3,2] = NA\na.mat\n#>      [,1] [,2] [,3]\n#> [1,]   NA    0    0\n#> [2,]   NA   NA    0\n#> [3,]   NA   NA   NA\n# Matriks B for SVAR AB-model\nb.mat = diag(3)\ndiag(b.mat) = NA\nb.mat\n#>      [,1] [,2] [,3]\n#> [1,]   NA    0    0\n#> [2,]    0   NA    0\n#> [3,]    0    0   NA\n# Est SVAR\nsvar1 = SVAR(var.est1, Amat = a.mat, Bmat = b.mat, max.iter = 10000, hessian = TRUE)\n#> Warning in SVAR(var.est1, Amat = a.mat, Bmat = b.mat,\n#> max.iter = 10000, : The AB-model is just identified. No\n#> test possible.\nsvar1\n#> \n#> SVAR Estimation Results:\n#> ======================== \n#> \n#> \n#> Estimated A matrix:\n#>             growth inflation interest\n#> growth     1.00000   0.00000        0\n#> inflation -0.69543   1.00000        0\n#> interest  -0.09344  -0.06834        1\n#> \n#> Estimated B matrix:\n#>           growth inflation interest\n#> growth    0.3558     0.000   0.0000\n#> inflation 0.0000     1.573   0.0000\n#> interest  0.0000     0.000   0.3255\n# IRF\ninf.int = irf(svar1, response = \"interest\", impulse = \"inflation\", n.ahead = 40)\nplot(inf.int)\ninf.gdp = irf(svar1, response = \"growth\", impulse = \"inflation\", n.ahead = 40)\nplot(inf.gdp)\ninf.inf = irf(svar1, response = \"inflation\", impulse = \"inflation\", n.ahead = 40)\nplot(inf.inf)\ngdp.inf = irf(svar1, response = \"inflation\", impulse = \"growth\", n.ahead = 40)\nplot(gdp.inf)\n#FEVD\nvd = fevd(svar1, n.ahead=40)\nplot(vd)"},{"path":"multivariate-time-series.html","id":"ardl","chapter":"4 Multivariate Time Series","heading":"4.2 ARDL","text":"","code":"\nlibrary(ARDL)\n#> Warning: package 'ARDL' was built under R version 4.2.3\n#> To cite the ARDL package in publications:\n#> \n#> Use this reference to refer to the validity of the\n#> ARDL package.\n#> \n#>   Natsiopoulos, Kleanthis, and Tzeremes, Nickolaos G.\n#>   (2022). ARDL bounds test for cointegration:\n#>   Replicating the Pesaran et al. (2001) results for\n#>   the UK earnings equation using R. Journal of\n#>   Applied Econometrics, 37(5), 1079-1090.\n#>   https://doi.org/10.1002/jae.2919\n#> \n#> Use this reference to cite this specific version of\n#> the ARDL package.\n#> \n#>   Kleanthis Natsiopoulos and Nickolaos Tzeremes\n#>   (2023). ARDL: ARDL, ECM and Bounds-Test for\n#>   Cointegration. R package version 0.2.4.\n#>   https://CRAN.R-project.org/package=ARDL\n# data sample\ndata(denmark)\ndenmark <- data.frame(denmark)\nattach(denmark)\nstr(denmark)\n#> 'data.frame':    55 obs. of  5 variables:\n#>  $ LRM: num  11.6 11.6 11.6 11.6 11.6 ...\n#>  $ LRY: num  5.9 5.87 5.84 5.81 5.8 ...\n#>  $ LPY: num  -0.619 -0.581 -0.543 -0.505 -0.486 ...\n#>  $ IBO: num  0.155 0.178 0.171 0.152 0.134 ...\n#>  $ IDE: num  0.094 0.0955 0.0955 0.0955 0.0885 0.079 0.076 0.074 0.072 0.078 ...\ndenmark = ts(denmark, start=c(1974,1), frequency=12)\nplot(denmark)\nlibrary(tseries)\n#> Warning: package 'tseries' was built under R version 4.2.3\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n#> \n#> Attaching package: 'tseries'\n#> The following objects are masked from 'package:aTSA':\n#> \n#>     adf.test, kpss.test, pp.test\npp.test(LRM) #Non-Stationary\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  LRM\n#> Dickey-Fuller Z(alpha) = -3.2568, Truncation lag\n#> parameter = 3, p-value = 0.9205\n#> alternative hypothesis: stationary\npp.test(LRY) #Non-Stationary\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  LRY\n#> Dickey-Fuller Z(alpha) = -11.467, Truncation lag\n#> parameter = 3, p-value = 0.428\n#> alternative hypothesis: stationary\npp.test(IBO) #Non-Stationary\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  IBO\n#> Dickey-Fuller Z(alpha) = -5.5494, Truncation lag\n#> parameter = 3, p-value = 0.7882\n#> alternative hypothesis: stationary\npp.test(IDE) #Non-Stationary\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  IDE\n#> Dickey-Fuller Z(alpha) = -9.0346, Truncation lag\n#> parameter = 3, p-value = 0.5761\n#> alternative hypothesis: stationary\npp.test(diff(LRM)) #Stationary\n#> Warning in pp.test(diff(LRM)): p-value smaller than printed\n#> p-value\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  diff(LRM)\n#> Dickey-Fuller Z(alpha) = -59.819, Truncation lag\n#> parameter = 3, p-value = 0.01\n#> alternative hypothesis: stationary\npp.test(diff(LRY)) #Stationary\n#> Warning in pp.test(diff(LRY)): p-value smaller than printed\n#> p-value\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  diff(LRY)\n#> Dickey-Fuller Z(alpha) = -42.472, Truncation lag\n#> parameter = 3, p-value = 0.01\n#> alternative hypothesis: stationary\npp.test(diff(IBO)) #Stationary\n#> Warning in pp.test(diff(IBO)): p-value smaller than printed\n#> p-value\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  diff(IBO)\n#> Dickey-Fuller Z(alpha) = -38.898, Truncation lag\n#> parameter = 3, p-value = 0.01\n#> alternative hypothesis: stationary\npp.test(diff(IDE)) #Stationary\n#> Warning in pp.test(diff(IDE)): p-value smaller than printed\n#> p-value\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  diff(IDE)\n#> Dickey-Fuller Z(alpha) = -35.668, Truncation lag\n#> parameter = 3, p-value = 0.01\n#> alternative hypothesis: stationary\n# ARDL Auto Search Optimum Lag\nmodels <- auto_ardl(LRM ~ LRY + IBO + IDE, data = denmark, max_order = 5)\n# The top 20 models according to the AIC\nmodels$top_orders\n#>    LRM LRY IBO IDE       AIC\n#> 1    3   1   3   2 -251.0259\n#> 2    3   1   3   3 -250.1144\n#> 3    2   2   0   0 -249.6266\n#> 4    3   2   3   2 -249.1087\n#> 5    3   2   3   3 -248.1858\n#> 6    2   2   0   1 -247.7786\n#> 7    2   1   0   0 -247.5643\n#> 8    2   2   1   1 -246.6885\n#> 9    3   3   3   3 -246.3061\n#> 10   2   2   1   2 -246.2709\n#> 11   2   1   1   1 -245.8736\n#> 12   2   2   2   2 -245.7722\n#> 13   1   1   0   0 -245.6620\n#> 14   2   1   2   2 -245.1712\n#> 15   3   1   2   2 -245.0996\n#> 16   1   0   0   0 -244.4317\n#> 17   1   1   0   1 -243.7702\n#> 18   5   5   5   5 -243.3120\n#> 19   4   1   3   2 -243.0728\n#> 20   4   1   3   3 -242.4378\n# The best model was found to be the ARDL(3,1,3,2)\nardl_3132 <- models$best_model\nardl_3132$order\n#> LRM LRY IBO IDE \n#>   3   1   3   2\nsummary(ardl_3132)\n#> \n#> Time series regression with \"ts\" data:\n#> Start = 1974(4), End = 1978(7)\n#> \n#> Call:\n#> dynlm::dynlm(formula = full_formula, data = data, start = start, \n#>     end = end)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.029939 -0.008856 -0.002562  0.008190  0.072577 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)   2.6202     0.5678   4.615 4.19e-05 ***\n#> L(LRM, 1)     0.3192     0.1367   2.336 0.024735 *  \n#> L(LRM, 2)     0.5326     0.1324   4.024 0.000255 ***\n#> L(LRM, 3)    -0.2687     0.1021  -2.631 0.012143 *  \n#> LRY           0.6728     0.1312   5.129 8.32e-06 ***\n#> L(LRY, 1)    -0.2574     0.1472  -1.749 0.088146 .  \n#> IBO          -1.0785     0.3217  -3.353 0.001790 ** \n#> L(IBO, 1)    -0.1062     0.5858  -0.181 0.857081    \n#> L(IBO, 2)     0.2877     0.5691   0.505 0.616067    \n#> L(IBO, 3)    -0.9947     0.3925  -2.534 0.015401 *  \n#> IDE           0.1255     0.5545   0.226 0.822161    \n#> L(IDE, 1)    -0.3280     0.7213  -0.455 0.651847    \n#> L(IDE, 2)     1.4079     0.5520   2.550 0.014803 *  \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.0191 on 39 degrees of freedom\n#> Multiple R-squared:  0.988,  Adjusted R-squared:  0.9843 \n#> F-statistic: 266.8 on 12 and 39 DF,  p-value: < 2.2e-16\nlibrary(lmtest)\nbgtest(ardl_3132) # Autocorrelation Test\n#> \n#>  Breusch-Godfrey test for serial correlation of order\n#>  up to 1\n#> \n#> data:  ardl_3132\n#> LM test = 1.1192, df = 1, p-value = 0.2901\nbptest(ardl_3132) # Heteroscedasticity Test\n#> \n#>  studentized Breusch-Pagan test\n#> \n#> data:  ardl_3132\n#> BP = 4.4815, df = 12, p-value = 0.9731\n# Cointegration Test\nfbounds <- bounds_f_test(ardl_3132, case = 2, alpha = 0.05)\nfbounds$tab\n#>   statistic Lower-bound I(0) Upper-bound I(1) alpha\n#> F  5.116768          2.77498          3.65953  0.05\n#>       p.value\n#> F 0.004417563\n# ARDL-ECM\nuecm_3132 <- uecm(LRM ~ LRY + IBO + IDE, data = denmark, order = c(3,1,3,2))\nsummary(uecm_3132)\n#> \n#> Time series regression with \"ts\" data:\n#> Start = 1974(4), End = 1978(7)\n#> \n#> Call:\n#> dynlm::dynlm(formula = full_formula, data = data, start = start, \n#>     end = end)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.029939 -0.008856 -0.002562  0.008190  0.072577 \n#> \n#> Coefficients:\n#>              Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)   2.62019    0.56777   4.615 4.19e-05 ***\n#> L(LRM, 1)    -0.41685    0.09166  -4.548 5.15e-05 ***\n#> L(LRY, 1)     0.41538    0.11761   3.532  0.00108 ** \n#> L(IBO, 1)    -1.89172    0.39111  -4.837 2.09e-05 ***\n#> L(IDE, 1)     1.20534    0.44690   2.697  0.01028 *  \n#> d(L(LRM, 1)) -0.26394    0.10192  -2.590  0.01343 *  \n#> d(L(LRM, 2))  0.26867    0.10213   2.631  0.01214 *  \n#> d(LRY)        0.67280    0.13116   5.129 8.32e-06 ***\n#> d(IBO)       -1.07852    0.32170  -3.353  0.00179 ** \n#> d(L(IBO, 1))  0.70701    0.46874   1.508  0.13953    \n#> d(L(IBO, 2))  0.99468    0.39251   2.534  0.01540 *  \n#> d(IDE)        0.12546    0.55445   0.226  0.82216    \n#> d(L(IDE, 1)) -1.40786    0.55204  -2.550  0.01480 *  \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.0191 on 39 degrees of freedom\n#> Multiple R-squared:  0.7458, Adjusted R-squared:  0.6676 \n#> F-statistic: 9.537 on 12 and 39 DF,  p-value: 3.001e-08\n# ARDL-ECM 2\nrecm_3132 <- recm(uecm_3132, case = 2)\nsummary(recm_3132)\n#> \n#> Time series regression with \"zooreg\" data:\n#> Start = Apr 1974, End = Jul 1978\n#> \n#> Call:\n#> dynlm::dynlm(formula = full_formula, data = data, start = start, \n#>     end = end)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.029939 -0.008856 -0.002562  0.008190  0.072577 \n#> \n#> Coefficients:\n#>              Estimate Std. Error t value Pr(>|t|)    \n#> d(L(LRM, 1)) -0.26394    0.09008  -2.930 0.005405 ** \n#> d(L(LRM, 2))  0.26867    0.09127   2.944 0.005214 ** \n#> d(LRY)        0.67280    0.11591   5.805 7.03e-07 ***\n#> d(IBO)       -1.07852    0.30025  -3.592 0.000837 ***\n#> d(L(IBO, 1))  0.70701    0.44359   1.594 0.118300    \n#> d(L(IBO, 2))  0.99468    0.36491   2.726 0.009242 ** \n#> d(IDE)        0.12546    0.48290   0.260 0.796248    \n#> d(L(IDE, 1)) -1.40786    0.48867  -2.881 0.006160 ** \n#> ect          -0.41685    0.07849  -5.311 3.63e-06 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.01819 on 43 degrees of freedom\n#>   (0 observations deleted due to missingness)\n#> Multiple R-squared:  0.7613, Adjusted R-squared:  0.7113 \n#> F-statistic: 15.24 on 9 and 43 DF,  p-value: 9.545e-11\n# Short Run Coefficients\nmultipliers(ardl_3132, type = \"sr\")\n#>          Term   Estimate Std. Error    t value     Pr(>|t|)\n#> 1 (Intercept)  2.6201916  0.5677679  4.6148990 4.186867e-05\n#> 2         LRY  0.6727993  0.1311638  5.1294603 8.317401e-06\n#> 3         IBO -1.0785180  0.3217011 -3.3525465 1.790030e-03\n#> 4         IDE  0.1254643  0.5544522  0.2262852 8.221614e-01\n# Long Run Coefficients\nmultipliers(ardl_3132, type = \"lr\")\n#>          Term   Estimate Std. Error   t value     Pr(>|t|)\n#> 1 (Intercept)  6.2856579  0.7719160  8.142930 6.107445e-10\n#> 2         LRY  0.9964676  0.1239310  8.040503 8.358472e-10\n#> 3         IBO -4.5381160  0.5202961 -8.722180 1.058619e-10\n#> 4         IDE  2.8915201  0.9950853  2.905801 6.009239e-03\nlibrary(lmtest) # for resettest()\nlibrary(strucchange) # for efp(), and sctest()\nresettest(uecm_3132, type = c(\"regressor\"))\n#> \n#>  RESET test\n#> \n#> data:  uecm_3132\n#> RESET = 1.2408, df1 = 24, df2 = 15, p-value = 0.3383\n# Stability\nuecm_3132_lm_names <- to_lm(uecm_3132, fix_names = TRUE)\nfluctuation <- efp(uecm_3132_lm_names$full_formula, \n                   data = uecm_3132_lm_names$model)\nplot(fluctuation)"},{"path":"panel-data-regression.html","id":"panel-data-regression","chapter":"5 Panel Data Regression","heading":"5 Panel Data Regression","text":"","code":"\nlibrary(readxl)\n#> Warning: package 'readxl' was built under R version 4.2.3\ndatapanel = read_excel(\"Data/Bab 5/Data Panel.xlsx\")\nhead(datapanel)\n#> # A tibble: 6 Ã— 6\n#>   province  year realgdp population investment   hdi\n#>   <chr>    <dbl>   <dbl>      <dbl>      <dbl> <dbl>\n#> 1 Aceh      2010 101545.    4523100       82.3  67.1\n#> 2 Aceh      2011 104874.    4619000      463.   67.4\n#> 3 Aceh      2012 108915.    4715100     1726.   67.8\n#> 4 Aceh      2013 111756.    4811100     4785.   68.3\n#> 5 Aceh      2014 113488.    4906800     5497.   68.8\n#> 6 Aceh      2015 112672.    5002000     4485.   69.4"},{"path":"panel-data-regression.html","id":"static-panel-data","chapter":"5 Panel Data Regression","heading":"5.1 Static Panel Data","text":"","code":"\nlibrary(plm)\n#> Warning: package 'plm' was built under R version 4.2.3\nmodel1 = log(realgdp) ~ log(population) + log(investment) + log(hdi)\n# time vs individual effect\npFtest(model1, data = datapanel, effect = \"time\")\n#> \n#>  F test for time effects\n#> \n#> data:  model1\n#> F = 3.1305, df1 = 6, df2 = 221, p-value = 0.005777\n#> alternative hypothesis: significant effects\npFtest(model1, data = datapanel, effect = \"individual\")\n#> \n#>  F test for individual effects\n#> \n#> data:  model1\n#> F = 824.45, df1 = 32, df2 = 195, p-value < 2.2e-16\n#> alternative hypothesis: significant effects\npFtest(model1, data = datapanel, effect = \"twoways\")\n#> \n#>  F test for twoways effects\n#> \n#> data:  model1\n#> F = 812.75, df1 = 38, df2 = 189, p-value < 2.2e-16\n#> alternative hypothesis: significant effects"},{"path":"panel-data-regression.html","id":"pooled-ols","chapter":"5 Panel Data Regression","heading":"5.1.1 Pooled OLS","text":"","code":"\nPOLS <- plm(model1, data = datapanel, \n                      index = c(\"province\", \"year\"), \n                      effect = \"twoways\", model = \"pooling\")\nsummary(POLS)\n#> Pooling Model\n#> \n#> Call:\n#> plm(formula = model1, data = datapanel, effect = \"twoways\", model = \"pooling\", \n#>     index = c(\"province\", \"year\"))\n#> \n#> Balanced Panel: n = 33, T = 7, N = 231\n#> \n#> Residuals:\n#>      Min.   1st Qu.    Median   3rd Qu.      Max. \n#> -0.802950 -0.288399 -0.071922  0.204733  1.211596 \n#> \n#> Coefficients:\n#>                   Estimate Std. Error t-value  Pr(>|t|)    \n#> (Intercept)     -14.998414   1.789923 -8.3794 5.578e-15 ***\n#> log(population)   0.761682   0.034219 22.2592 < 2.2e-16 ***\n#> log(investment)   0.200796   0.018761 10.7031 < 2.2e-16 ***\n#> log(hdi)          3.187128   0.432136  7.3753 3.050e-12 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Total Sum of Squares:    316.63\n#> Residual Sum of Squares: 37.477\n#> R-Squared:      0.88164\n#> Adj. R-Squared: 0.88008\n#> F-statistic: 563.624 on 3 and 227 DF, p-value: < 2.22e-16"},{"path":"panel-data-regression.html","id":"fixed-effects-model","chapter":"5 Panel Data Regression","heading":"5.1.2 Fixed Effects Model","text":"","code":"\nFEM <- plm(model1, data = datapanel, \n                      index = c(\"province\", \"year\"), \n                      effect = \"twoways\", model = \"within\")\n\nsummary(FEM)\n#> Twoways effects Within Model\n#> \n#> Call:\n#> plm(formula = model1, data = datapanel, effect = \"twoways\", model = \"within\", \n#>     index = c(\"province\", \"year\"))\n#> \n#> Balanced Panel: n = 33, T = 7, N = 231\n#> \n#> Residuals:\n#>       Min.    1st Qu.     Median    3rd Qu.       Max. \n#> -0.1065933 -0.0108718  0.0010591  0.0107126  0.1302578 \n#> \n#> Coefficients:\n#>                   Estimate Std. Error t-value Pr(>|t|)  \n#> log(population) -0.4403249  0.2194092 -2.0069  0.04619 *\n#> log(investment) -0.0046652  0.0039298 -1.1871  0.23666  \n#> log(hdi)         1.4472500  0.7092888  2.0404  0.04270 *\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Total Sum of Squares:    0.24452\n#> Residual Sum of Squares: 0.22795\n#> R-Squared:      0.067783\n#> Adj. R-Squared: -0.13444\n#> F-statistic: 4.58081 on 3 and 189 DF, p-value: 0.0040297\n# FEM vs. Pooled OLS\npFtest(FEM, POLS)\n#> \n#>  F test for twoways effects\n#> \n#> data:  model1\n#> F = 812.75, df1 = 38, df2 = 189, p-value < 2.2e-16\n#> alternative hypothesis: significant effects"},{"path":"panel-data-regression.html","id":"random-effects-model","chapter":"5 Panel Data Regression","heading":"5.1.3 Random Effects Model","text":"","code":"\nREM <- plm(model1, data = datapanel, \n                      index = c(\"province\", \"year\"), \n                      effect = \"twoways\", model = \"random\")\nsummary(REM)\n#> Twoways effects Random Effect Model \n#>    (Swamy-Arora's transformation)\n#> \n#> Call:\n#> plm(formula = model1, data = datapanel, effect = \"twoways\", model = \"random\", \n#>     index = c(\"province\", \"year\"))\n#> \n#> Balanced Panel: n = 33, T = 7, N = 231\n#> \n#> Effects:\n#>                    var  std.dev share\n#> idiosyncratic 0.001206 0.034728 0.008\n#> individual    0.141041 0.375555 0.992\n#> time          0.000000 0.000000 0.000\n#> theta: 0.9651 (id) 0 (time) 0 (total)\n#> \n#> Residuals:\n#>       Min.    1st Qu.     Median    3rd Qu.       Max. \n#> -0.1099833 -0.0205049  0.0012902  0.0165381  0.1635731 \n#> \n#> Coefficients:\n#>                    Estimate  Std. Error z-value Pr(>|z|)\n#> (Intercept)     -2.1127e+01  1.0047e+00 -21.029   <2e-16\n#> log(population)  8.9072e-01  7.1716e-02  12.420   <2e-16\n#> log(investment)  9.0107e-04  4.1329e-03   0.218   0.8274\n#> log(hdi)         4.5687e+00  2.2971e-01  19.889   <2e-16\n#>                    \n#> (Intercept)     ***\n#> log(population) ***\n#> log(investment)    \n#> log(hdi)        ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Total Sum of Squares:    3.599\n#> Residual Sum of Squares: 0.35333\n#> R-Squared:      0.90183\n#> Adj. R-Squared: 0.90053\n#> Chisq: 2085.22 on 3 DF, p-value: < 2.22e-16"},{"path":"panel-data-regression.html","id":"hausman-test","chapter":"5 Panel Data Regression","heading":"5.1.4 Hausman Test","text":"","code":"\nphtest(FEM,REM)\n#> \n#>  Hausman Test\n#> \n#> data:  model1\n#> chisq = 46.609, df = 3, p-value = 4.208e-10\n#> alternative hypothesis: one model is inconsistent"},{"path":"panel-data-regression.html","id":"model-diagnostics","chapter":"5 Panel Data Regression","heading":"5.1.5 Model Diagnostics","text":"","code":"\n# Multicolinearity\nlibrary(car)\n#> Warning: package 'car' was built under R version 4.2.3\n#> Loading required package: carData\nvif(POLS)\n#> log(population) log(investment)        log(hdi) \n#>        1.596289        1.641147        1.119590\ncor(datapanel[,4:6])\n#>            population investment       hdi\n#> population  1.0000000  0.7052198 0.1212988\n#> investment  0.7052198  1.0000000 0.3222325\n#> hdi         0.1212988  0.3222325 1.0000000\nlibrary(lmtest)\n#> Loading required package: zoo\n#> Warning: package 'zoo' was built under R version 4.2.3\n#> \n#> Attaching package: 'zoo'\n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n# Heteroscedasticity\nbptest(FEM) \n#> \n#>  studentized Breusch-Pagan test\n#> \n#> data:  FEM\n#> BP = 32.396, df = 3, p-value = 4.319e-07\n# Autocorrelation\npbgtest(FEM)\n#> \n#>  Breusch-Godfrey/Wooldridge test for serial\n#>  correlation in panel models\n#> \n#> data:  model1\n#> chisq = 84.76, df = 7, p-value = 1.468e-15\n#> alternative hypothesis: serial correlation in idiosyncratic errors\n# Cluster Robust Standard Error\nlibrary(sandwich)\n#> Warning: package 'sandwich' was built under R version 4.2.3\ncoeftest(FEM, vcovHC(FEM, type = \"sss\", cluster = \"group\"))\n#> \n#> t test of coefficients:\n#> \n#>                   Estimate Std. Error t value Pr(>|t|)\n#> log(population) -0.4403249  0.4093013 -1.0758   0.2834\n#> log(investment) -0.0046652  0.0056843 -0.8207   0.4128\n#> log(hdi)         1.4472500  1.0807171  1.3392   0.1821\n# HAC Robust Standard Error\ncoeftest(FEM, vcovHC(FEM, method=\"arellano\"))\n#> \n#> t test of coefficients:\n#> \n#>                   Estimate Std. Error t value Pr(>|t|)\n#> log(population) -0.4403249  0.4012959 -1.0973   0.2739\n#> log(investment) -0.0046652  0.0055732 -0.8371   0.4036\n#> log(hdi)         1.4472500  1.0595795  1.3659   0.1736"},{"path":"panel-data-regression.html","id":"dynamic-panel-data","chapter":"5 Panel Data Regression","heading":"5.2 Dynamic Panel Data","text":"","code":"\nhead(datapanel)\n#> # A tibble: 6 Ã— 6\n#>   province  year realgdp population investment   hdi\n#>   <chr>    <dbl>   <dbl>      <dbl>      <dbl> <dbl>\n#> 1 Aceh      2010 101545.    4523100       82.3  67.1\n#> 2 Aceh      2011 104874.    4619000      463.   67.4\n#> 3 Aceh      2012 108915.    4715100     1726.   67.8\n#> 4 Aceh      2013 111756.    4811100     4785.   68.3\n#> 5 Aceh      2014 113488.    4906800     5497.   68.8\n#> 6 Aceh      2015 112672.    5002000     4485.   69.4\n# lag(log(realgdp), 2:7) = Instrument\nmodeldyn1 = log(realgdp) ~ lag(log(realgdp)) + log(population) + log(investment) + log(hdi) | lag(log(realgdp),2:7) \n# Dynamic OLS and FEM\nmodeldyn2 = log(realgdp) ~ lag(log(realgdp)) + log(population) + log(investment) + log(hdi)"},{"path":"panel-data-regression.html","id":"first-difference-gmm","chapter":"5 Panel Data Regression","heading":"5.2.1 First Difference GMM","text":"","code":"\nfd.gmm = pgmm(modeldyn1, data = datapanel)\n#> Warning in pgmm(modeldyn1, data = datapanel): the\n#> second-step matrix is singular, a general inverse is used\nsummary(fd.gmm)\n#> Warning in vcovHC.pgmm(object): a general inverse is used\n#> Twoways effects One-step model Difference GMM \n#> \n#> Call:\n#> pgmm(formula = modeldyn1, data = datapanel)\n#> \n#> Balanced Panel: n = 33, T = 7, N = 231\n#> \n#> Number of Observations Used: 165\n#> Residuals:\n#>       Min.    1st Qu.     Median       Mean    3rd Qu. \n#> -0.0926516 -0.0071905 -0.0006685  0.0000000  0.0051944 \n#>       Max. \n#>  0.1291078 \n#> \n#> Coefficients:\n#>                     Estimate Std. Error z-value  Pr(>|z|)\n#> lag(log(realgdp))  0.7312958  0.2057587  3.5541 0.0003792\n#> log(population)   -0.1750407  0.1798151 -0.9734 0.3303305\n#> log(investment)    0.0013969  0.0022465  0.6218 0.5340580\n#> log(hdi)           2.1197608  1.3035307  1.6262 0.1039138\n#>                      \n#> lag(log(realgdp)) ***\n#> log(population)      \n#> log(investment)      \n#> log(hdi)             \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Sargan test: chisq(14) = 25.4339 (p-value = 0.030518)\n#> Autocorrelation test (1): normal = -1.836971 (p-value = 0.066214)\n#> Autocorrelation test (2): normal = 1.555262 (p-value = 0.11988)\n#> Wald test for coefficients: chisq(4) = 95.86467 (p-value = < 2.22e-16)\n#> Wald test for time dummies: chisq(5) = 8.364699 (p-value = 0.13725)"},{"path":"panel-data-regression.html","id":"system-gmm","chapter":"5 Panel Data Regression","heading":"5.2.2 System GMM","text":"","code":"\nsys.gmm = pgmm(modeldyn1, data = datapanel, transformation=\"ld\")\n#> Warning in pgmm(modeldyn1, data = datapanel, transformation\n#> = \"ld\"): the second-step matrix is singular, a general\n#> inverse is used\nsummary(sys.gmm)\n#> Warning in vcovHC.pgmm(object): a general inverse is used\n#> Twoways effects One-step model System GMM \n#> \n#> Call:\n#> pgmm(formula = modeldyn1, data = datapanel, transformation = \"ld\")\n#> \n#> Balanced Panel: n = 33, T = 7, N = 231\n#> \n#> Number of Observations Used: 363\n#> Residuals:\n#>       Min.    1st Qu.     Median       Mean    3rd Qu. \n#> -0.1198240 -0.0083907  0.0001403  0.0000000  0.0065018 \n#>       Max. \n#>  0.1402918 \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z-value  Pr(>|z|)\n#> lag(log(realgdp)) 0.9686425  0.0107842 89.8208 < 2.2e-16\n#> log(population)   0.0207419  0.0078302  2.6490  0.008074\n#> log(investment)   0.0070513  0.0029150  2.4190  0.015565\n#> log(hdi)          0.1144280  0.0582058  1.9659  0.049308\n#>                      \n#> lag(log(realgdp)) ***\n#> log(population)   ** \n#> log(investment)   *  \n#> log(hdi)          *  \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Sargan test: chisq(22) = 23.67029 (p-value = 0.36475)\n#> Autocorrelation test (1): normal = -1.663193 (p-value = 0.096274)\n#> Autocorrelation test (2): normal = 1.368565 (p-value = 0.17114)\n#> Wald test for coefficients: chisq(4) = 314880.1 (p-value = < 2.22e-16)\n#> Wald test for time dummies: chisq(5) = 29.57621 (p-value = 1.7869e-05)"},{"path":"panel-data-regression.html","id":"model-diagnotics","chapter":"5 Panel Data Regression","heading":"5.2.3 Model Diagnotics","text":"FDGMM = 0.731\nSysGMM = 0.968\nFEM = 0.767\nOLS = 0.986FEM < GMM < OLS\nBest Model: System GMM","code":"\n# FEM\nFEMdyn = plm(modeldyn2, data = datapanel, index=c(\"province\",\"year\"), model=\"within\")\nsummary(FEMdyn)\n#> Oneway (individual) effect Within Model\n#> \n#> Call:\n#> plm(formula = modeldyn2, data = datapanel, model = \"within\", \n#>     index = c(\"province\", \"year\"))\n#> \n#> Balanced Panel: n = 33, T = 6, N = 198\n#> \n#> Residuals:\n#>        Min.     1st Qu.      Median     3rd Qu.        Max. \n#> -5.8397e-02 -6.5483e-03  1.4102e-05  5.9536e-03  1.1759e-01 \n#> \n#> Coefficients:\n#>                     Estimate Std. Error t-value  Pr(>|t|)\n#> lag(log(realgdp))  0.7670629  0.0397433 19.3004 < 2.2e-16\n#> log(population)   -0.2488432  0.1100829 -2.2605   0.02513\n#> log(investment)   -0.0014210  0.0024243 -0.5861   0.55862\n#> log(hdi)           1.8786968  0.2913007  6.4493 1.253e-09\n#>                      \n#> lag(log(realgdp)) ***\n#> log(population)   *  \n#> log(investment)      \n#> log(hdi)          ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Total Sum of Squares:    1.9728\n#> Residual Sum of Squares: 0.050149\n#> R-Squared:      0.97458\n#> Adj. R-Squared: 0.96889\n#> F-statistic: 1543.1 on 4 and 161 DF, p-value: < 2.22e-16\n# OLS\nOLSdyn = plm(modeldyn2, data = datapanel, index=c(\"province\",\"year\"), model=\"pooling\")\nsummary(OLSdyn)\n#> Pooling Model\n#> \n#> Call:\n#> plm(formula = modeldyn2, data = datapanel, model = \"pooling\", \n#>     index = c(\"province\", \"year\"))\n#> \n#> Balanced Panel: n = 33, T = 6, N = 198\n#> \n#> Residuals:\n#>        Min.     1st Qu.      Median     3rd Qu.        Max. \n#> -0.10036444 -0.00975944 -0.00044271  0.00946369  0.12897120 \n#> \n#> Coefficients:\n#>                     Estimate Std. Error  t-value Pr(>|t|)\n#> (Intercept)       -0.1070843  0.1261711  -0.8487  0.39709\n#> lag(log(realgdp))  0.9868710  0.0041424 238.2382  < 2e-16\n#> log(population)    0.0088980  0.0036806   2.4175  0.01656\n#> log(investment)    0.0016145  0.0016016   1.0080  0.31470\n#> log(hdi)           0.0397307  0.0297085   1.3374  0.18268\n#>                      \n#> (Intercept)          \n#> lag(log(realgdp)) ***\n#> log(population)   *  \n#> log(investment)      \n#> log(hdi)             \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Total Sum of Squares:    269.87\n#> Residual Sum of Squares: 0.09922\n#> R-Squared:      0.99963\n#> Adj. R-Squared: 0.99962\n#> F-statistic: 131187 on 4 and 193 DF, p-value: < 2.22e-16\nsummary(sys.gmm)\n#> Warning in vcovHC.pgmm(object): a general inverse is used\n#> Twoways effects One-step model System GMM \n#> \n#> Call:\n#> pgmm(formula = modeldyn1, data = datapanel, transformation = \"ld\")\n#> \n#> Balanced Panel: n = 33, T = 7, N = 231\n#> \n#> Number of Observations Used: 363\n#> Residuals:\n#>       Min.    1st Qu.     Median       Mean    3rd Qu. \n#> -0.1198240 -0.0083907  0.0001403  0.0000000  0.0065018 \n#>       Max. \n#>  0.1402918 \n#> \n#> Coefficients:\n#>                    Estimate Std. Error z-value  Pr(>|z|)\n#> lag(log(realgdp)) 0.9686425  0.0107842 89.8208 < 2.2e-16\n#> log(population)   0.0207419  0.0078302  2.6490  0.008074\n#> log(investment)   0.0070513  0.0029150  2.4190  0.015565\n#> log(hdi)          0.1144280  0.0582058  1.9659  0.049308\n#>                      \n#> lag(log(realgdp)) ***\n#> log(population)   ** \n#> log(investment)   *  \n#> log(hdi)          *  \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Sargan test: chisq(22) = 23.67029 (p-value = 0.36475)\n#> Autocorrelation test (1): normal = -1.663193 (p-value = 0.096274)\n#> Autocorrelation test (2): normal = 1.368565 (p-value = 0.17114)\n#> Wald test for coefficients: chisq(4) = 314880.1 (p-value = < 2.22e-16)\n#> Wald test for time dummies: chisq(5) = 29.57621 (p-value = 1.7869e-05)"},{"path":"panel-data-regression.html","id":"speed-of-adjustment","chapter":"5 Panel Data Regression","heading":"5.2.4 Speed of Adjustment","text":"","code":"\nalpha1 = sys.gmm$coef[1]\n1-alpha1\n#> lag(log(realgdp)) \n#>        0.03135749"},{"path":"panel-data-regression.html","id":"half-time","chapter":"5 Panel Data Regression","heading":"5.2.5 Half Time","text":"","code":"\nlog(0.5)/log(sys.gmm$coef[1])\n#> lag(log(realgdp)) \n#>          21.75626"},{"path":"panel-data-regression.html","id":"short-run-and-long-run-coefficients","chapter":"5 Panel Data Regression","heading":"5.2.6 Short Run and Long Run Coefficients","text":"","code":"\nsys.gmm$coefficients[2] # Short Run Poppulation\n#> log(population) \n#>      0.02074192\nsys.gmm$coefficients[2] / (1-alpha1) # Long Run Poppulation\n#> log(population) \n#>       0.6614661"},{"path":"spatial-regression.html","id":"spatial-regression","chapter":"6 Spatial Regression","heading":"6 Spatial Regression","text":"","code":""},{"path":"spatial-regression.html","id":"library","chapter":"6 Spatial Regression","heading":"6.1 Library","text":"","code":"\n# install.packages(\"spdep\")\n# install.packages(\"spatialreg\")\n# install.packages(\"RColorBrewer\")\n# install.packages(\"splm\")\n# install.packages(\"sf\")\n# install.packages(\"ggplot2\")\nlibrary(spdep)\n#> Warning: package 'spdep' was built under R version 4.2.3\n#> Loading required package: spData\n#> Warning: package 'spData' was built under R version 4.2.3\n#> To access larger datasets in this package, install\n#> the spDataLarge package with:\n#> `install.packages('spDataLarge',\n#> repos='https://nowosad.github.io/drat/',\n#> type='source')`\n#> Loading required package: sf\n#> Warning: package 'sf' was built under R version 4.2.3\n#> Linking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2()\n#> is TRUE\nlibrary(spatialreg)\n#> Warning: package 'spatialreg' was built under R version\n#> 4.2.3\n#> Loading required package: Matrix\n#> Warning: package 'Matrix' was built under R version 4.2.3\n#> \n#> Attaching package: 'spatialreg'\n#> The following objects are masked from 'package:spdep':\n#> \n#>     get.ClusterOption, get.coresOption, get.mcOption,\n#>     get.VerboseOption, get.ZeroPolicyOption,\n#>     set.ClusterOption, set.coresOption, set.mcOption,\n#>     set.VerboseOption, set.ZeroPolicyOption\nlibrary(RColorBrewer)\nlibrary(splm)\n#> Warning: package 'splm' was built under R version 4.2.3\nlibrary(sf)\nlibrary(ggplot2)\n#> Warning: package 'ggplot2' was built under R version 4.2.3"},{"path":"spatial-regression.html","id":"cross-section","chapter":"6 Spatial Regression","heading":"6.2 Cross-Section","text":"","code":"\nlibrary(readxl)\n#> Warning: package 'readxl' was built under R version 4.2.3\nprovinsi <- read_excel(\"Data/Bab6/provinsi Indonesia.xlsx\")\nhead(provinsi)\n#> # A tibble: 6 Ã— 5\n#>   province    pdrb investment infra revenue\n#>   <chr>      <dbl>      <dbl> <dbl>   <dbl>\n#> 1 Aceh     129093.      4485.  0.37  11694.\n#> 2 Sumut    571722.     21477.  0.52   8481.\n#> 3 Sumbar   179952.      2340.  0.52   4052.\n#> 4 Riau     652762.     18957.  0.28   6911.\n#> 5 Jambi    155066.      5026.  0.26   3130.\n#> 6 Sumsel   331766.     19853.  0.2    5990."},{"path":"spatial-regression.html","id":"ols-model","chapter":"6 Spatial Regression","heading":"6.2.1 OLS Model","text":"","code":"\nmodel1 = log(pdrb) ~ log(investment) + log(infra) + log(revenue)\nols = lm(model1, data=provinsi)\nsummary(ols)\n#> \n#> Call:\n#> lm(formula = model1, data = provinsi)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -0.82306 -0.33812  0.00604  0.32399  0.83581 \n#> \n#> Coefficients:\n#>                 Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)      3.95883    0.85379   4.637 6.48e-05 ***\n#> log(investment)  0.42187    0.08375   5.037 2.10e-05 ***\n#> log(infra)       0.24988    0.07807   3.201  0.00323 ** \n#> log(revenue)     0.53807    0.15207   3.538  0.00133 ** \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.4094 on 30 degrees of freedom\n#> Multiple R-squared:  0.8883, Adjusted R-squared:  0.8771 \n#> F-statistic: 79.53 on 3 and 30 DF,  p-value: 2.226e-14"},{"path":"spatial-regression.html","id":"weight-matrix","chapter":"6 Spatial Regression","heading":"6.2.2 Weight Matrix","text":"","code":"\nmigrasi <- read_excel(\"Data/Bab6/matriks migrasi.xlsx\", sheet = 2, col_names = FALSE)\n#> New names:\n#> â€¢ `` -> `...1`\n#> â€¢ `` -> `...2`\n#> â€¢ `` -> `...3`\n#> â€¢ `` -> `...4`\n#> â€¢ `` -> `...5`\n#> â€¢ `` -> `...6`\n#> â€¢ `` -> `...7`\n#> â€¢ `` -> `...8`\n#> â€¢ `` -> `...9`\n#> â€¢ `` -> `...10`\n#> â€¢ `` -> `...11`\n#> â€¢ `` -> `...12`\n#> â€¢ `` -> `...13`\n#> â€¢ `` -> `...14`\n#> â€¢ `` -> `...15`\n#> â€¢ `` -> `...16`\n#> â€¢ `` -> `...17`\n#> â€¢ `` -> `...18`\n#> â€¢ `` -> `...19`\n#> â€¢ `` -> `...20`\n#> â€¢ `` -> `...21`\n#> â€¢ `` -> `...22`\n#> â€¢ `` -> `...23`\n#> â€¢ `` -> `...24`\n#> â€¢ `` -> `...25`\n#> â€¢ `` -> `...26`\n#> â€¢ `` -> `...27`\n#> â€¢ `` -> `...28`\n#> â€¢ `` -> `...29`\n#> â€¢ `` -> `...30`\n#> â€¢ `` -> `...31`\n#> â€¢ `` -> `...32`\n#> â€¢ `` -> `...33`\n#> â€¢ `` -> `...34`\nmigrasi = as.matrix(migrasi)\nW.migrasi = mat2listw(migrasi)\n#> Warning in mat2listw(migrasi): style is M (missing); style\n#> should be set to a valid value"},{"path":"spatial-regression.html","id":"moran-test-and-plot","chapter":"6 Spatial Regression","heading":"6.2.3 Moran Test and Plot","text":"","code":"\nmoran.lm = lm.morantest(ols, W.migrasi)\nmoran.lm\n#> \n#>  Global Moran I for regression residuals\n#> \n#> data:  \n#> model: lm(formula = model1, data = provinsi)\n#> weights: W.migrasi\n#> \n#> Moran I statistic standard deviate = 3.4669, p-value\n#> = 0.0002632\n#> alternative hypothesis: greater\n#> sample estimates:\n#> Observed Moran I      Expectation         Variance \n#>      0.213239417     -0.048308437      0.005691365\nmoran.plot(ols$residuals, W.migrasi)"},{"path":"spatial-regression.html","id":"lm-test","chapter":"6 Spatial Regression","heading":"6.2.4 LM Test","text":"","code":"\nLM = lm.LMtests(ols, W.migrasi, test=\"all\")\n#> Please update scripts to use lm.RStests in place of lm.LMtests\n#> Warning in lm.RStests(model = model, listw = listw,\n#> zero.policy = zero.policy, : Spatial weights matrix not row\n#> standardized\nLM\n#> \n#>  Rao's score (a.k.a Lagrange multiplier) diagnostics\n#>  for spatial dependence\n#> \n#> data:  \n#> model: lm(formula = model1, data = provinsi)\n#> test weights: listw\n#> \n#> RSerr = 5.4456, df = 1, p-value = 0.01962\n#> \n#> \n#>  Rao's score (a.k.a Lagrange multiplier) diagnostics\n#>  for spatial dependence\n#> \n#> data:  \n#> model: lm(formula = model1, data = provinsi)\n#> test weights: listw\n#> \n#> RSlag = 3.2163, df = 1, p-value = 0.07291\n#> \n#> \n#>  Rao's score (a.k.a Lagrange multiplier) diagnostics\n#>  for spatial dependence\n#> \n#> data:  \n#> model: lm(formula = model1, data = provinsi)\n#> test weights: listw\n#> \n#> adjRSerr = 3.0702, df = 1, p-value = 0.07974\n#> \n#> \n#>  Rao's score (a.k.a Lagrange multiplier) diagnostics\n#>  for spatial dependence\n#> \n#> data:  \n#> model: lm(formula = model1, data = provinsi)\n#> test weights: listw\n#> \n#> adjRSlag = 0.84087, df = 1, p-value = 0.3591\n#> \n#> \n#>  Rao's score (a.k.a Lagrange multiplier) diagnostics\n#>  for spatial dependence\n#> \n#> data:  \n#> model: lm(formula = model1, data = provinsi)\n#> test weights: listw\n#> \n#> SARMA = 6.2865, df = 2, p-value = 0.04314"},{"path":"spatial-regression.html","id":"sar-model","chapter":"6 Spatial Regression","heading":"6.2.5 SAR Model","text":"","code":"\nsar.provinsi = lagsarlm(model1, data=provinsi, W.migrasi)\nsummary(sar.provinsi)\n#> \n#> Call:\n#> lagsarlm(formula = model1, data = provinsi, listw = W.migrasi)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.679482 -0.291161 -0.083437  0.336403  0.808845 \n#> \n#> Type: lag \n#> Coefficients: (asymptotic standard errors) \n#>                 Estimate Std. Error z value  Pr(>|z|)\n#> (Intercept)     1.744150   1.437574  1.2133 0.2250310\n#> log(investment) 0.380784   0.079364  4.7979 1.603e-06\n#> log(infra)      0.207431   0.073675  2.8155 0.0048701\n#> log(revenue)    0.529174   0.136397  3.8797 0.0001046\n#> \n#> Rho: 0.21114, LR test value: 3.0033, p-value: 0.083096\n#> Asymptotic standard error: 0.12002\n#>     z-value: 1.7592, p-value: 0.07854\n#> Wald statistic: 3.0949, p-value: 0.07854\n#> \n#> Log likelihood: -14.24739 for lag model\n#> ML residual variance (sigma squared): 0.13454, (sigma: 0.36679)\n#> Number of observations: 34 \n#> Number of parameters estimated: 6 \n#> AIC: 40.495, (AIC for lm: 41.498)\n#> LM test for residual autocorrelation\n#> test value: 2.5558, p-value: 0.10989"},{"path":"spatial-regression.html","id":"impacts-spillover","chapter":"6 Spatial Regression","heading":"6.2.6 Impacts (Spillover)","text":"","code":"\nimpacts(sar.provinsi, listw=W.migrasi)\n#> Impact measures (lag, exact):\n#>                    Direct   Indirect     Total\n#> log(investment) 0.3831961 0.09950271 0.4826988\n#> log(infra)      0.2087457 0.05420401 0.2629497\n#> log(revenue)    0.5325268 0.13827873 0.6708055"},{"path":"spatial-regression.html","id":"sem-model","chapter":"6 Spatial Regression","heading":"6.2.7 SEM Model","text":"","code":"\nsem.provinsi = errorsarlm(model1, data=provinsi, W.migrasi)\nsummary(sem.provinsi)\n#> \n#> Call:\n#> errorsarlm(formula = model1, data = provinsi, listw = W.migrasi)\n#> \n#> Residuals:\n#>       Min        1Q    Median        3Q       Max \n#> -0.770148 -0.273480 -0.020662  0.325690  0.647156 \n#> \n#> Type: error \n#> Coefficients: (asymptotic standard errors) \n#>                 Estimate Std. Error z value  Pr(>|z|)\n#> (Intercept)     3.831947   0.772493  4.9605 7.031e-07\n#> log(investment) 0.410266   0.072801  5.6354 1.746e-08\n#> log(infra)      0.209178   0.071237  2.9364  0.003321\n#> log(revenue)    0.550807   0.132071  4.1705 3.039e-05\n#> \n#> Lambda: 0.60794, LR test value: 5.1345, p-value: 0.023455\n#> Asymptotic standard error: 0.19219\n#>     z-value: 3.1632, p-value: 0.0015604\n#> Wald statistic: 10.006, p-value: 0.0015604\n#> \n#> Log likelihood: -13.18178 for error model\n#> ML residual variance (sigma squared): 0.11956, (sigma: 0.34577)\n#> Number of observations: 34 \n#> Number of parameters estimated: 6 \n#> AIC: 38.364, (AIC for lm: 41.498)"},{"path":"spatial-regression.html","id":"spatial-panel","chapter":"6 Spatial Regression","heading":"6.3 Spatial Panel","text":"","code":"\nlibrary(readxl)\npaneljateng <- read_excel(\"Data/Bab6/panel jateng.xlsx\")\nhead(paneljateng)\n#> # A tibble: 6 Ã— 8\n#>   Region       Tahun   PDRB     AK    PAD    UMK   IPM NO   \n#>   <chr>        <dbl>  <dbl>  <dbl>  <dbl>  <dbl> <dbl> <chr>\n#> 1 Kab. Cilacap  2011 7.82e7 797518 1.73e5 7.19e5  64.7 01   \n#> 2 Kab. Cilacap  2012 7.97e7 716465 1.97e5 7.73e5  65.7 01   \n#> 3 Kab. Cilacap  2013 8.10e7 729059 2.79e5 8.88e5  66.8 01   \n#> 4 Kab. Cilacap  2014 8.34e7 736247 3.74e5 1.02e6  67.2 01   \n#> 5 Kab. Cilacap  2015 8.88e7 715819 4.10e5 1.20e6  67.8 01   \n#> 6 Kab. Banyumâ€¦  2011 2.45e7 761034 1.93e5 7.5 e5  67.4 02"},{"path":"spatial-regression.html","id":"static-panel-regression","chapter":"6 Spatial Regression","heading":"6.3.1 Static Panel Regression","text":"","code":"\nlibrary(plm)\n#> Warning: package 'plm' was built under R version 4.2.3\nmodelpanel = log(PDRB) ~ log(AK) + log(PAD) + log(UMK) + log(IPM)\nfem1 = plm(modelpanel, data=paneljateng, index=c(\"Region\", \"Tahun\"), model=\"within\")\nrem1 = plm(modelpanel, data=paneljateng, index=c(\"Region\", \"Tahun\"), model=\"random\")\nphtest(fem1, rem1)\n#> \n#>  Hausman Test\n#> \n#> data:  modelpanel\n#> chisq = 37.156, df = 4, p-value = 1.673e-07\n#> alternative hypothesis: one model is inconsistent\nlibrary(lmtest)\n#> Loading required package: zoo\n#> Warning: package 'zoo' was built under R version 4.2.3\n#> \n#> Attaching package: 'zoo'\n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\nbptest(fem1)\n#> \n#>  studentized Breusch-Pagan test\n#> \n#> data:  fem1\n#> BP = 5.8081, df = 4, p-value = 0.2139\npbgtest(fem1)\n#> \n#>  Breusch-Godfrey/Wooldridge test for serial\n#>  correlation in panel models\n#> \n#> data:  modelpanel\n#> chisq = 51.619, df = 5, p-value = 6.458e-10\n#> alternative hypothesis: serial correlation in idiosyncratic errors"},{"path":"spatial-regression.html","id":"depndency-test","chapter":"6 Spatial Regression","heading":"6.3.2 Depndency Test","text":"","code":"\npcdtest(fem1, test=\"lm\")\n#> \n#>  Breusch-Pagan LM test for cross-sectional dependence\n#>  in panels\n#> \n#> data:  log(PDRB) ~ log(AK) + log(PAD) + log(UMK) + log(IPM)\n#> chisq = 1268.3, df = 595, p-value < 2.2e-16\n#> alternative hypothesis: cross-sectional dependence\npcdtest(fem1, test=\"cd\")\n#> \n#>  Pesaran CD test for cross-sectional dependence in\n#>  panels\n#> \n#> data:  log(PDRB) ~ log(AK) + log(PAD) + log(UMK) + log(IPM)\n#> z = 12.724, p-value < 2.2e-16\n#> alternative hypothesis: cross-sectional dependence"},{"path":"spatial-regression.html","id":"maps-visualization","chapter":"6 Spatial Regression","heading":"6.3.3 Maps Visualization","text":"","code":"\njateng.map = st_read('Data/Bab6/peta jateng/Jawa_Tengah.shp')\n#> Reading layer `Jawa_Tengah' from data source \n#>   `D:\\Project\\_2024\\Bookdown Ekonometrika\\ds-econometrics\\Data\\Bab6\\peta jateng\\Jawa_Tengah.shp' \n#>   using driver `ESRI Shapefile'\n#> Simple feature collection with 35 features and 4 fields\n#> Geometry type: MULTIPOLYGON\n#> Dimension:     XY, XYZ\n#> Bounding box:  xmin: 108.5559 ymin: -8.211962 xmax: 111.6914 ymax: -5.725698\n#> z_range:       zmin: 0 zmax: 0\n#> Geodetic CRS:  WGS 84\njateng2011 = subset(paneljateng,(Tahun==2011))\njateng2011 = merge(jateng.map, jateng2011, by.x=\"KABKOTNO\", by.y=\"NO\")\njateng2011 <- st_make_valid(jateng2011)\nggplot(jateng2011) +\n  geom_sf(aes(fill = PDRB)) +\n  scale_fill_gradientn(colours = brewer.pal(5, \"Blues\"),\n                       values = scales::rescale(seq(min(jateng2011$PDRB), \n                                                    max(jateng2011$PDRB)*1.01, \n                                                    length = 6))) +\n  theme_minimal() +\n  labs(fill = \"PDRB\")\nggplot(jateng2011) +\n  geom_sf(aes(fill = IPM)) +\n  scale_fill_gradientn(colours = brewer.pal(5, \"Greens\"),\n                       values = scales::rescale(seq(min(jateng2011$IPM), \n                                                    max(jateng2011$IPM)*1.01, \n                                                    length = 6))) +\n  theme_minimal() +\n  labs(fill = \"IPM\")"},{"path":"spatial-regression.html","id":"function-for-spatial-panel-evalutation","chapter":"6 Spatial Regression","heading":"6.3.4 Function for Spatial Panel Evalutation","text":"","code":"\ngodf.spml<-function(object, k=2, criterion=c(\"AIC\", \"BIC\"),  ...){\n  s<-summary(object)\n  l<-s$logLik\n  np<- length(coef(s))\n  N<- nrow(s$model)\n  if(criterion==\"AIC\"){\n    aic<- -2*l+k*np\n    names(aic)<-\"AIC\"\n    return(aic)\n  }\n  if(criterion==\"BIC\"){\n    bic<- -2*l+log(N)*np\n    names(bic)<-\"BIC\"\n    if(k!=2){\n      warning(\"parameter <k> not used for BIC\")\n    }\n    return(bic)\n  }\n}"},{"path":"spatial-regression.html","id":"spatial-panel-model-with-contiguity-weight-matrix","chapter":"6 Spatial Regression","heading":"6.3.5 Spatial Panel Model with Contiguity Weight Matrix","text":"","code":"\njateng.map <- st_make_valid(jateng.map)\nlistqueen = poly2nb(jateng.map, queen=TRUE)\nW.queen = nb2listw(listqueen, style=\"W\")\nW.queen\n#> Characteristics of weights list object:\n#> Neighbour list object:\n#> Number of regions: 35 \n#> Number of nonzero links: 148 \n#> Percentage nonzero weights: 12.08163 \n#> Average number of links: 4.228571 \n#> \n#> Weights style: W \n#> Weights constants summary:\n#>    n   nn S0       S1       S2\n#> W 35 1225 35 18.64242 151.0178\n# SAR Model\nsar.fem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"within\", lag=TRUE, spatial.error=\"none\")\nsar.rem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"random\", lag=TRUE, spatial.error=\"none\")\nsphtest(sar.fem.contig, sar.rem.contig)\n#> \n#>  Hausman test for spatial models\n#> \n#> data:  modelpanel\n#> chisq = 0.15855, df = 4, p-value = 0.997\n#> alternative hypothesis: one model is inconsistent\ngodf.spml(sar.rem.contig, criterion=\"AIC\")\n#>       AIC \n#> -703.0118\n# SEM Model\nsem.fem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"within\", lag=FALSE, spatial.error=\"b\")\nsem.rem.contig = spml(modelpanel, data=paneljateng, listw=W.queen, model=\"random\", lag=FALSE, spatial.error=\"b\")\nsphtest(sem.fem.contig, sem.rem.contig)\n#> \n#>  Hausman test for spatial models\n#> \n#> data:  modelpanel\n#> chisq = 5.4546, df = 4, p-value = 0.2438\n#> alternative hypothesis: one model is inconsistent\ngodf.spml(sem.rem.contig, criterion=\"AIC\")\n#>       AIC \n#> -633.5611"},{"path":"spatial-regression.html","id":"spatial-panel-model-with-knn-weight-matrix","chapter":"6 Spatial Regression","heading":"6.3.6 Spatial Panel Model with KNN Weight Matrix","text":"","code":"\n# K-nearest neighbour with 5 neighbour \ncentroids <- st_centroid(jateng.map)\n#> Warning: st_centroid assumes attributes are constant over\n#> geometries\ncoords <- st_coordinates(centroids)\nneighbour = knearneigh(coords, k=5, longlat=T) \nneighbourlist = knn2nb(neighbour)                              \nmat.knn5 = nb2mat(neighbourlist, style=\"W\")                     \nW.knn5 = nb2listw(neighbourlist, style=\"W\")\nW.knn5\n#> Characteristics of weights list object:\n#> Neighbour list object:\n#> Number of regions: 35 \n#> Number of nonzero links: 175 \n#> Percentage nonzero weights: 14.28571 \n#> Average number of links: 5 \n#> Non-symmetric neighbours list\n#> \n#> Weights style: W \n#> Weights constants summary:\n#>    n   nn S0    S1     S2\n#> W 35 1225 35 12.44 144.48\n# SAR Model\nsar.fem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"within\", lag=TRUE, spatial.error=\"none\")\nsar.rem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"random\", lag=TRUE, spatial.error=\"none\")\nsphtest(sar.fem.5nn, sar.rem.5nn)\n#> \n#>  Hausman test for spatial models\n#> \n#> data:  modelpanel\n#> chisq = 0.9208, df = 4, p-value = 0.9216\n#> alternative hypothesis: one model is inconsistent\ngodf.spml(sar.rem.5nn, criterion=\"AIC\")\n#>       AIC \n#> -717.8954\n\n# SEM Model\nsem.fem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"within\", lag=FALSE, spatial.error=\"b\")\nsem.rem.5nn = spml(modelpanel, data=paneljateng, listw=W.knn5, model=\"random\", lag=FALSE, spatial.error=\"b\")\nsphtest(sem.fem.5nn, sem.rem.5nn)\n#> \n#>  Hausman test for spatial models\n#> \n#> data:  modelpanel\n#> chisq = 5.3246, df = 4, p-value = 0.2556\n#> alternative hypothesis: one model is inconsistent\ngodf.spml(sem.rem.5nn, criterion=\"AIC\")\n#>       AIC \n#> -636.4432"},{"path":"spatial-regression.html","id":"best-model","chapter":"6 Spatial Regression","heading":"6.3.7 Best Model","text":"","code":"\nsummary(sar.rem.5nn)\n#> ML panel with spatial lag, random effects \n#> \n#> Call:\n#> spreml(formula = formula, data = data, index = index, w = listw2mat(listw), \n#>     w2 = listw2mat(listw2), lag = lag, errors = errors, cl = cl)\n#> \n#> Residuals:\n#>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n#>    11.2    12.1    12.4    12.4    12.7    14.2 \n#> \n#> Error variance parameters:\n#>     Estimate Std. Error t-value  Pr(>|t|)    \n#> phi   4204.2     1174.1  3.5808 0.0003425 ***\n#> \n#> Spatial autoregressive coefficient:\n#>        Estimate Std. Error t-value  Pr(>|t|)    \n#> lambda 0.750456   0.053411   14.05 < 2.2e-16 ***\n#> \n#> Coefficients:\n#>              Estimate Std. Error t-value Pr(>|t|)   \n#> (Intercept) 1.2042585  0.7177210  1.6779 0.093368 . \n#> log(AK)     0.0474276  0.0241591  1.9631 0.049630 * \n#> log(PAD)    0.0134898  0.0063019  2.1406 0.032306 * \n#> log(UMK)    0.0470068  0.0167872  2.8002 0.005108 **\n#> log(IPM)    0.3633197  0.1772088  2.0502 0.040342 * \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"spatial-regression.html","id":"impacts-spillovr---only-for-sar-model","chapter":"6 Spatial Regression","heading":"6.3.8 Impacts (Spillovr) - Only for SAR Model","text":"","code":"\n# Direct and Indirect Effect\ntime = length(unique(paneljateng$Tahun))\nsW.5knn = kronecker(Diagonal(time), listw2dgCMatrix(W.knn5))\nset.seed(12345)\ntrMatc = trW(sW.5knn, type=\"mult\")\nimp = impacts(sar.rem.5nn, tr = trMatc, R = 200)\nsummary(imp, zstats=TRUE, short=T)\n#> Impact measures (lag, trace):\n#>              Direct  Indirect      Total\n#> log(AK)  0.05723256 0.1327900 0.19002256\n#> log(PAD) 0.01627868 0.0377695 0.05404818\n#> log(UMK) 0.05672481 0.1316119 0.18833673\n#> log(IPM) 0.43843073 1.0172393 1.45567007\n#> ========================================================\n#> Simulation results ( variance matrix):\n#> ========================================================\n#> Simulated standard errors\n#>              Direct   Indirect      Total\n#> log(AK)  0.02901319 0.08363074 0.10973883\n#> log(PAD) 0.00734999 0.02062104 0.02706686\n#> log(UMK) 0.02147235 0.08000097 0.09848155\n#> log(IPM) 0.22893212 0.65960697 0.86733379\n#> \n#> Simulated z-values:\n#>            Direct Indirect    Total\n#> log(AK)  1.994006 1.693123 1.817494\n#> log(PAD) 2.422577 2.079525 2.242148\n#> log(UMK) 2.675301 1.800563 2.045985\n#> log(IPM) 1.772328 1.503276 1.611045\n#> \n#> Simulated p-values:\n#>          Direct    Indirect Total   \n#> log(AK)  0.0461514 0.090432 0.069142\n#> log(PAD) 0.0154108 0.037569 0.024952\n#> log(UMK) 0.0074662 0.071772 0.040758\n#> log(IPM) 0.0763402 0.132768 0.107170"},{"path":"time-series-spillover---gvar.html","id":"time-series-spillover---gvar","chapter":"7 Time Series Spillover - GVAR","heading":"7 Time Series Spillover - GVAR","text":"","code":""},{"path":"time-series-spillover---gvar.html","id":"library-1","chapter":"7 Time Series Spillover - GVAR","heading":"7.1 Library","text":"","code":"\nlibrary(Spillover)\n#> Loading required package: vars\n#> Loading required package: MASS\n#> Loading required package: strucchange\n#> Loading required package: zoo\n#> \n#> Attaching package: 'zoo'\n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n#> Loading required package: sandwich\n#> Loading required package: urca\n#> Loading required package: lmtest\nlibrary(vars)\nlibrary(urca)\nlibrary(splitstackshape)\nlibrary(igraph)\n#> \n#> Attaching package: 'igraph'\n#> The following objects are masked from 'package:stats':\n#> \n#>     decompose, spectrum\n#> The following object is masked from 'package:base':\n#> \n#>     union\nlibrary(reshape)"},{"path":"time-series-spillover---gvar.html","id":"data-diebold-yilmaz-2012","chapter":"7 Time Series Spillover - GVAR","heading":"7.2 Data: Diebold-Yilmaz 2012","text":"log volatility return:\n\\[\n\\sigma^2_{} = 0.361[ln(P^{max}_{,t}) - ln(P^{min}_{,t-1}))]^2\n\\]\\[\n\\sigma_{} = 100*(\\sqrt{252*\\sigma^2_{}})\n\\]","code":"\ndata(dy2012)\nhead(dy2012)  # in log volatility form\n#>         Date     Stocks      Bonds Commodities         FX\n#> 1 1999-01-25  -9.891998 -10.081905   -9.797694 -12.971578\n#> 2 1999-01-26  -9.353294 -10.090498  -11.475212 -13.237477\n#> 3 1999-01-27  -9.314619 -10.103319  -15.317140  -9.749465\n#> 4 1999-01-28  -8.997370 -10.090498  -12.044040 -10.853610\n#> 5 1999-01-29  -8.855955  -9.426092  -12.928477 -11.788281\n#> 6 1999-02-01 -10.282395  -8.936206  -12.821930 -11.308455\nclass(dy2012)\n#> [1] \"data.frame\"\nnrow(dy2012)\n#> [1] 2771"},{"path":"time-series-spillover---gvar.html","id":"var-model","chapter":"7 Time Series Spillover - GVAR","heading":"7.3 VAR Model","text":"","code":"\nPP.test(dy2012$Stocks)\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  dy2012$Stocks\n#> Dickey-Fuller = -32.546, Truncation lag parameter =\n#> 9, p-value = 0.01\nPP.test(dy2012$Bonds)\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  dy2012$Bonds\n#> Dickey-Fuller = -41.249, Truncation lag parameter =\n#> 9, p-value = 0.01\nPP.test(dy2012$Commodities)\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  dy2012$Commodities\n#> Dickey-Fuller = -48.523, Truncation lag parameter =\n#> 9, p-value = 0.01\nPP.test(dy2012$FX)\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  dy2012$FX\n#> Dickey-Fuller = -47.527, Truncation lag parameter =\n#> 9, p-value = 0.01\n# Optimum Lag\nVARselect(dy2012[,-1], lag.max = 4, type = c(\"both\"))\n#> $selection\n#> AIC(n)  HQ(n)  SC(n) FPE(n) \n#>      4      4      4      4 \n#> \n#> $criteria\n#>                  1          2          3          4\n#> AIC(n) -0.11329876 -0.4490460 -0.5882320 -0.6679637\n#> HQ(n)  -0.09473562 -0.4181074 -0.5449180 -0.6122743\n#> SC(n)  -0.06190286 -0.3633861 -0.4683083 -0.5137760\n#> FPE(n)  0.89288389  0.6382368  0.5553084  0.5127520\n# VAR Model\nVAR_4 <- VAR(dy2012[,-1], p=4)\nVAR_4\n#> \n#> VAR Estimation Results:\n#> ======================= \n#> \n#> Estimated coefficients for equation Stocks: \n#> =========================================== \n#> Call:\n#> Stocks = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n#> \n#>      Stocks.l1       Bonds.l1 Commodities.l1          FX.l1 \n#>   0.1835084630  -0.0242487169  -0.0036337209   0.0219988664 \n#>      Stocks.l2       Bonds.l2 Commodities.l2          FX.l2 \n#>   0.2741423171   0.0027926328  -0.0108044031   0.0040316592 \n#>      Stocks.l3       Bonds.l3 Commodities.l3          FX.l3 \n#>   0.2025153665   0.0360740337  -0.0158017651   0.0007938866 \n#>      Stocks.l4       Bonds.l4 Commodities.l4          FX.l4 \n#>   0.1620506569   0.0333733392  -0.0029608791  -0.0007384703 \n#>          const \n#>  -1.3401330918 \n#> \n#> \n#> Estimated coefficients for equation Bonds: \n#> ========================================== \n#> Call:\n#> Bonds = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n#> \n#>      Stocks.l1       Bonds.l1 Commodities.l1          FX.l1 \n#>    0.068141170    0.163772247    0.052592815    0.004319034 \n#>      Stocks.l2       Bonds.l2 Commodities.l2          FX.l2 \n#>    0.025511120    0.174716290    0.024936542    0.013962476 \n#>      Stocks.l3       Bonds.l3 Commodities.l3          FX.l3 \n#>    0.041353468    0.129894730   -0.043136698    0.011844827 \n#>      Stocks.l4       Bonds.l4 Commodities.l4          FX.l4 \n#>   -0.026075514    0.218597337    0.039128430   -0.027491905 \n#>          const \n#>   -1.080792116 \n#> \n#> \n#> Estimated coefficients for equation Commodities: \n#> ================================================ \n#> Call:\n#> Commodities = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n#> \n#>      Stocks.l1       Bonds.l1 Commodities.l1          FX.l1 \n#>   -0.022755735    0.098201350    0.183333080    0.048298645 \n#>      Stocks.l2       Bonds.l2 Commodities.l2          FX.l2 \n#>   -0.013291588   -0.013132921    0.207410140    0.044188995 \n#>      Stocks.l3       Bonds.l3 Commodities.l3          FX.l3 \n#>   -0.049827512    0.004592325    0.185198136   -0.037523992 \n#>      Stocks.l4       Bonds.l4 Commodities.l4          FX.l4 \n#>   -0.030251601    0.060251069    0.156050483    0.038706445 \n#>          const \n#>   -1.543777242 \n#> \n#> \n#> Estimated coefficients for equation FX: \n#> ======================================= \n#> Call:\n#> FX = Stocks.l1 + Bonds.l1 + Commodities.l1 + FX.l1 + Stocks.l2 + Bonds.l2 + Commodities.l2 + FX.l2 + Stocks.l3 + Bonds.l3 + Commodities.l3 + FX.l3 + Stocks.l4 + Bonds.l4 + Commodities.l4 + FX.l4 + const \n#> \n#>      Stocks.l1       Bonds.l1 Commodities.l1          FX.l1 \n#>     0.06467245    -0.01930672     0.02517504     0.06996402 \n#>      Stocks.l2       Bonds.l2 Commodities.l2          FX.l2 \n#>     0.03590206    -0.02073267     0.01066279     0.20847309 \n#>      Stocks.l3       Bonds.l3 Commodities.l3          FX.l3 \n#>    -0.01249224     0.03780188    -0.00393800     0.18185464 \n#>      Stocks.l4       Bonds.l4 Commodities.l4          FX.l4 \n#>    -0.01552454     0.05072537     0.01667104     0.11443511 \n#>          const \n#>    -2.99838336"},{"path":"time-series-spillover---gvar.html","id":"volatility-spillover-dy-2012","chapter":"7 Time Series Spillover - GVAR","heading":"7.4 Volatility Spillover DY-2012","text":"total volatility spillover appears lower right corner Table, indicates , average, across entire sample, 12.6% volatility forecast error variance four markets comes spillovers","code":"\n# Total Spillover Index\nsp <- G.spillover(VAR_4, n.ahead = 10, standardized = F )\nsp\n#>                                Stocks     Bonds Commodities\n#> Stocks                      88.757002  7.291185   0.3453279\n#> Bonds                       10.213545 81.445712   2.7269737\n#> Commodities                  0.468118  3.695953  93.6941893\n#> FX                           5.691579  7.026017   1.5477592\n#> C. to others (spillover)    16.373241 18.013154   4.6200608\n#> C. to others including own 105.130243 99.458866  98.3142500\n#>                                   FX C. from others\n#> Stocks                      3.606486      11.242998\n#> Bonds                       5.613770      18.554288\n#> Commodities                 2.141740       6.305811\n#> FX                         85.734645      14.265355\n#> C. to others (spillover)   11.361996      12.592113\n#> C. to others including own 97.096641     400.000000\nSpillover::net(sp)\n#> Warning: 'Spillover::net' is deprecated.\n#> Use 'dynamic.spillover' instead.\n#> See help(\"Deprecated\")\n#>                    To      From        Net Transmitter\n#> Stocks      16.373241 11.242998  5.1302430        TRUE\n#> Bonds       18.013154 18.554288 -0.5411342       FALSE\n#> Commodities  4.620061  6.305811 -1.6857500       FALSE\n#> FX          11.361996 14.265355 -2.9033588       FALSE"},{"path":"time-series-spillover---gvar.html","id":"dynamic-spillover-index-rolling-sample-total-volatility-spillover","chapter":"7 Time Series Spillover - GVAR","heading":"7.5 Dynamic Spillover Index / rolling-sample total volatility spillover","text":"","code":"\n# Data Setting\ndata(dy2012)\ndy2012$Date <- as.Date(dy2012$Date, \"%Y-%m-%d\")\ndy2012 <- as.zoo(dy2012[,-1], order.by = dy2012$Date)\nclass(dy2012)\n#> [1] \"zoo\"\n# Generalized rolling spillover index based on a VAR(4)\nG_index<- total.dynamic.spillover(dy2012, width = 200, index=\"generalized\", p=4) \nhead(G_index, n=10)\n#> 1999-11-05 1999-11-08 1999-11-09 1999-11-10 1999-11-11 \n#>   13.50622   13.60646   13.16968   13.04980   12.95939 \n#> 1999-11-12 1999-11-15 1999-11-16 1999-11-17 1999-11-18 \n#>   12.92011   14.27211   14.04579   13.90963   13.85581\nplot(G_index)"},{"path":"time-series-spillover---gvar.html","id":"directional-volatility-spillovers","chapter":"7 Time Series Spillover - GVAR","heading":"7.6 Directional volatility spillovers","text":"","code":"\nlibrary(zoo)\ndata(dy2012) # re-import data\nclass(dy2012)\n#> [1] \"data.frame\"\ndy_results <- dynamic.spillover(dy2012, width=200, remove.own = FALSE)\nstr(dy_results)\n#> List of 5\n#>  $ from            :'data.frame':    2771 obs. of  5 variables:\n#>   ..$ Date       : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n#>   ..$ Stocks     : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>  $ to              :'data.frame':    2771 obs. of  5 variables:\n#>   ..$ Date       : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n#>   ..$ Stocks     : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>  $ net             :'data.frame':    2771 obs. of  5 variables:\n#>   ..$ Date       : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n#>   ..$ Stocks     : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>  $ net_pairwise    :'data.frame':    2771 obs. of  7 variables:\n#>   ..$ Date              : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n#>   ..$ Stocks-Bonds      : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Stocks-Commodities: num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Stocks-FX         : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Bonds-Commodities : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Bonds-FX          : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>   ..$ Commodities-FX    : num [1:2771] 0 0 0 0 0 0 0 0 0 0 ...\n#>  $ from_to_pairwise:'data.frame':    44336 obs. of  3 variables:\n#>   ..$ Date     : Factor w/ 2771 levels \"1999-01-25\",\"1999-01-26\",..: 1 2 3 4 5 6 7 8 9 10 ...\n#>   ..$ variables: chr [1:44336] \"From: Stocks  to: Stocks\" \"From: Stocks  to: Bonds\" \"From: Stocks  to: Commodities\" \"From: Stocks  to: FX\" ...\n#>   ..$ value    : num [1:44336] 0 0 0 0 0 0 0 0 0 0 ...\n#>  - attr(*, \"class\")= chr \"directional.spillover\"\n# Directional volatility spillovers, FROM four asset classes.\npp_from <- plotdy(dy_results, direction = \"from\")\n# Directional volatility spillovers, TO four asset classes.\npp_to <- plotdy(dy_results, direction = \"to\")\n# Net volatility spillovers, four asset classes\npp_net <- plotdy(dy_results, direction = \"net\")\n# Net pairwise volatility spillovers\npp_netpairwise <- plotdy(dy_results, direction = \"net_pairwise\")\npp_from_to_pairwise <- plotdy(dy_results, direction = \"from_to_pairwise\")"},{"path":"time-series-spillover---gvar.html","id":"connectedness-network","chapter":"7 Time Series Spillover - GVAR","heading":"7.7 Connectedness Network","text":"","code":"\nsp <- G.spillover(VAR_4, n.ahead = 10, standardized = F )\ndatanet <-  Spillover::net(sp)\n#> Warning: 'Spillover::net' is deprecated.\n#> Use 'dynamic.spillover' instead.\n#> See help(\"Deprecated\")\ndatanet\n#>                    To      From        Net Transmitter\n#> Stocks      16.373241 11.242998  5.1302430        TRUE\n#> Bonds       18.013154 18.554288 -0.5411342       FALSE\n#> Commodities  4.620061  6.305811 -1.6857500       FALSE\n#> FX          11.361996 14.265355 -2.9033588       FALSE\n# Data frame node\nnode_df <- data.frame(rownames(datanet), rownames(datanet),datanet$Net)\nnames(node_df) <- c(\"id\",\"label\",\"size\")\nhead(node_df)\n#>            id       label       size\n#> 1      Stocks      Stocks  5.1302430\n#> 2       Bonds       Bonds -0.5411342\n#> 3 Commodities Commodities -1.6857500\n#> 4          FX          FX -2.9033588\nsp <- sp[1:4,1:4]\nsp\n#>                Stocks     Bonds Commodities        FX\n#> Stocks      88.757002  7.291185   0.3453279  3.606486\n#> Bonds       10.213545 81.445712   2.7269737  5.613770\n#> Commodities  0.468118  3.695953  93.6941893  2.141740\n#> FX           5.691579  7.026017   1.5477592 85.734645\n# Data frame edge\nm1 <- melt(sp)[melt(upper.tri(sp))$value,] # FROM\nm2 <- melt(sp)[melt(lower.tri(sp))$value,] # TO\nm1 <- m1[order(m1$X1),]\nm2 <- m2[order(m2$X2),]\nedge_df <- data.frame(\"to\"=m1[,2],\"from\"=m1[,1], \"weight\" = m1$value-m2$value)\nlibrary(dplyr)\n#> Warning: package 'dplyr' was built under R version 4.2.3\n#> \n#> Attaching package: 'dplyr'\n#> The following object is masked from 'package:reshape':\n#> \n#>     rename\n#> The following objects are masked from 'package:igraph':\n#> \n#>     as_data_frame, groups, union\n#> The following object is masked from 'package:MASS':\n#> \n#>     select\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\nedge_df_positive <- edge_df %>% filter(weight >= 0)\nedge_df_negative <- edge_df %>% filter(weight < 0)\n\nedge_df_negative <- edge_df_negative %>%\n  mutate(weight = -weight) %>%\n  dplyr::rename(to = from, from = to)\nedge_df <- bind_rows(edge_df_positive, edge_df_negative)\npositive_weight <- edge_df$weight[edge_df$weight > 0]\nnegative_weight <- edge_df$weight[edge_df$weight < 0]\npositive_size <- node_df$size[node_df$size > 0]\nnegative_size <- node_df$size[node_df$size < 0]\n\nlibrary(RColorBrewer)\nTransmitter_color <- \"#2ca25f\"\nelse_color <- \"#de2d26\"\ncolor_vec1 <- ifelse(edge_df$weight > 0, Transmitter_color, else_color)\ncolor_vec2 <- ifelse(node_df$size > 0, Transmitter_color, else_color)\ngraph <- graph_from_data_frame(edge_df, directed = TRUE, vertices = node_df)\nE(graph)$color <- \"black\" # Egde\nV(graph)$color <- color_vec2 # Node\nE(graph)$weight <- abs(edge_df$weight)\nV(graph)$size <- abs(node_df$size)\nE(graph)$weight <- E(graph)$weight / max(E(graph)$weight) * 2\nV(graph)$size <- V(graph)$size / max(V(graph)$size) * 50\nplot(graph, edge.width = E(graph)$weight, layout=layout_in_circle(graph), edge.arrow.mode=2, edge.arrow.size=0.2)"},{"path":"multivariate-garch.html","id":"multivariate-garch","chapter":"8 Multivariate GARCH","heading":"8 Multivariate GARCH","text":"","code":""},{"path":"multivariate-garch.html","id":"dcc-garch","chapter":"8 Multivariate GARCH","heading":"8.1 DCC-GARCH","text":"","code":"\nlibrary(quantmod)\n#> Warning: package 'quantmod' was built under R version 4.2.3\n#> Loading required package: xts\n#> Warning: package 'xts' was built under R version 4.2.3\n#> Loading required package: zoo\n#> Warning: package 'zoo' was built under R version 4.2.3\n#> \n#> Attaching package: 'zoo'\n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n#> Loading required package: TTR\n#> Warning: package 'TTR' was built under R version 4.2.3\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n\n# Needed Internet Connection !! alike install packages\n# Stock Ticker\nstocks <- c(\"ASII.JK\",\"BBCA.JK\")\n\ndata_list <- lapply(stocks, function(stock) {\n    getSymbols(stock, src = \"yahoo\", from = \"2018-01-01\", to=\"2022-12-31\", auto.assign = FALSE)\n})\n#> Warning: ASII.JK contains missing values. Some functions\n#> will not work if objects contain missing values in the\n#> middle of the series. Consider using na.omit(),\n#> na.approx(), na.fill(), etc to remove or replace them.\n\n# Daily Return\nreturns <- lapply(data_list, function(data) {\n    dailyReturn(Cl(data))\n})\n#> Warning in to_period(xx, period = on.opts[[period]], ...):\n#> missing values removed from data\n\n# Combine data\ncombined_returns <- do.call(merge, returns)\nnames(combined_returns) <- stocks\ncombined_returns <- na.omit(combined_returns)\nhead(combined_returns)\n#>                 ASII.JK     BBCA.JK\n#> 2018-01-01  0.000000000 0.000000000\n#> 2018-01-02 -0.012048193 0.000000000\n#> 2018-01-03 -0.018292683 0.000000000\n#> 2018-01-04  0.021739130 0.014840183\n#> 2018-01-05  0.009118541 0.001124859\n#> 2018-01-08  0.000000000 0.004494382\nlibrary(rugarch)\n#> Warning: package 'rugarch' was built under R version 4.2.3\n#> Loading required package: parallel\n#> \n#> Attaching package: 'rugarch'\n#> The following object is masked from 'package:stats':\n#> \n#>     sigma\nlibrary(rmgarch)\n#> Warning: package 'rmgarch' was built under R version 4.2.2\n#> \n#> Attaching package: 'rmgarch'\n#> The following objects are masked from 'package:xts':\n#> \n#>     first, last\n\n# GARCH Specification for a Single Asset\nunispec <- ugarchspec(mean.model = list(armaOrder = c(0, 0)),\n                     variance.model = list(model = \"gjrGARCH\",\n                                           garchOrder = c(1, 1)),\n                     distribution.model = \"norm\")\n\n# Determine the number of assets\nn_assets <- ncol(combined_returns)\n\n# Replicate GARCH Specification for All Assets\ngarch_spec <- multispec(replicate(n_assets, unispec)) \n\n# DCC Model Specification\ndcc_spec <- dccspec(uspec = garch_spec, \n                   dccOrder = c(1, 1), \n                   distribution = \"mvnorm\")\n## Fit DCC\ndcc.fit <- dccfit(dcc_spec, \n                 data = combined_returns, \n                 fit.control=list(scale=TRUE))\ndcc.fit\n#> \n#> *---------------------------------*\n#> *          DCC GARCH Fit          *\n#> *---------------------------------*\n#> \n#> Distribution         :  mvnorm\n#> Model                :  DCC(1,1)\n#> No. Parameters       :  13\n#> [VAR GARCH DCC UncQ] : [0+10+2+1]\n#> No. Series           :  2\n#> No. Obs.             :  1253\n#> Log-Likelihood       :  6804.626\n#> Av.Log-Likelihood    :  5.43 \n#> \n#> Optimal Parameters\n#> -----------------------------------\n#>                   Estimate  Std. Error   t value Pr(>|t|)\n#> [ASII.JK].mu     -0.000439    0.000538  -0.81598 0.414511\n#> [ASII.JK].omega   0.000013    0.000001  12.73775 0.000000\n#> [ASII.JK].alpha1  0.029271    0.009480   3.08769 0.002017\n#> [ASII.JK].beta1   0.912942    0.007720 118.25044 0.000000\n#> [ASII.JK].gamma1  0.056569    0.023773   2.37951 0.017336\n#> [BBCA.JK].mu      0.000635    0.000531   1.19596 0.231713\n#> [BBCA.JK].omega   0.000015    0.000008   1.90305 0.057034\n#> [BBCA.JK].alpha1  0.053503    0.030193   1.77204 0.076388\n#> [BBCA.JK].beta1   0.820666    0.052706  15.57060 0.000000\n#> [BBCA.JK].gamma1  0.127614    0.044277   2.88218 0.003949\n#> [Joint]dcca1      0.050241    0.033905   1.48184 0.138382\n#> [Joint]dccb1      0.766226    0.197975   3.87032 0.000109\n#> \n#> Information Criteria\n#> ---------------------\n#>                     \n#> Akaike       -10.841\n#> Bayes        -10.787\n#> Shibata      -10.841\n#> Hannan-Quinn -10.821\n#> \n#> \n#> Elapsed time : 1.267241\n# Conditional Covariances\ncov <- rcov(dcc.fit)\ndim(cov)\n#> [1]    2    2 1253\ncov[,,1:4]\n#> , , 2018-01-01\n#> \n#>              ASII.JK      BBCA.JK\n#> ASII.JK 0.0004465808 0.0001387231\n#> BBCA.JK 0.0001387231 0.0002527424\n#> \n#> , , 2018-01-02\n#> \n#>              ASII.JK      BBCA.JK\n#> ASII.JK 0.0004207082 0.0001246004\n#> BBCA.JK 0.0001246004 0.0002229686\n#> \n#> , , 2018-01-03\n#> \n#>              ASII.JK      BBCA.JK\n#> ASII.JK 0.0004086507 0.0001138079\n#> BBCA.JK 0.0001138079 0.0001985342\n#> \n#> , , 2018-01-04\n#> \n#>              ASII.JK      BBCA.JK\n#> ASII.JK 0.0004134355 0.0001058398\n#> BBCA.JK 0.0001058398 0.0001784818\n# Conditional Volatilities\nvol <- sigma(dcc.fit)\nhead(vol)\n#>               ASII.JK    BBCA.JK\n#> 2018-01-01 0.02113246 0.01589787\n#> 2018-01-02 0.02051117 0.01493213\n#> 2018-01-03 0.02021511 0.01409022\n#> 2018-01-04 0.02033311 0.01335971\n#> 2018-01-05 0.02012066 0.01314336\n#> 2018-01-08 0.01962830 0.01254032\nplot(vol$ASII.JK)\nplot(vol$BBCA.JK)\n# Conditional Correlations\ncor <- rcor(dcc.fit)\ncor[,,1:4]\n#> , , 2018-01-01\n#> \n#>           ASII.JK   BBCA.JK\n#> ASII.JK 1.0000000 0.4129141\n#> BBCA.JK 0.4129141 1.0000000\n#> \n#> , , 2018-01-02\n#> \n#>           ASII.JK   BBCA.JK\n#> ASII.JK 1.0000000 0.4068245\n#> BBCA.JK 0.4068245 1.0000000\n#> \n#> , , 2018-01-03\n#> \n#>           ASII.JK   BBCA.JK\n#> ASII.JK 1.0000000 0.3995568\n#> BBCA.JK 0.3995568 1.0000000\n#> \n#> , , 2018-01-04\n#> \n#>           ASII.JK   BBCA.JK\n#> ASII.JK 1.0000000 0.3896261\n#> BBCA.JK 0.3896261 1.0000000\ndate <- row.names(data.frame(cor[1,1,])) \ncor2 <- xts(cor[1, 2, ], order.by = as.Date(date))\nplot(cor2)\nforecast <- dccforecast(dcc.fit, n.ahead = 5)\nforecast@mforecast$H #Cov\n#> [[1]]\n#> , , 1\n#> \n#>              [,1]         [,2]\n#> [1,] 2.400993e-04 5.997349e-05\n#> [2,] 5.997349e-05 1.426082e-04\n#> \n#> , , 2\n#> \n#>              [,1]         [,2]\n#> [1,] 2.460159e-04 6.413043e-05\n#> [2,] 6.413043e-05 1.492415e-04\n#> \n#> , , 3\n#> \n#>              [,1]         [,2]\n#> [1,] 2.517579e-04 6.792145e-05\n#> [2,] 6.792145e-05 1.554634e-04\n#> \n#> , , 4\n#> \n#>              [,1]         [,2]\n#> [1,] 2.573305e-04 7.138252e-05\n#> [2,] 7.138252e-05 1.612995e-04\n#> \n#> , , 5\n#> \n#>              [,1]         [,2]\n#> [1,] 2.627387e-04 7.454746e-05\n#> [2,] 7.454746e-05 1.667735e-04\nforecast@mforecast$R #Cor\n#> [[1]]\n#> , , 1\n#> \n#>           [,1]      [,2]\n#> [1,] 1.0000000 0.3241094\n#> [2,] 0.3241094 1.0000000\n#> \n#> , , 2\n#> \n#>           [,1]      [,2]\n#> [1,] 1.0000000 0.3346861\n#> [2,] 0.3346861 1.0000000\n#> \n#> , , 3\n#> \n#>           [,1]      [,2]\n#> [1,] 1.0000000 0.3433217\n#> [2,] 0.3433217 1.0000000\n#> \n#> , , 4\n#> \n#>           [,1]      [,2]\n#> [1,] 1.0000000 0.3503723\n#> [2,] 0.3503723 1.0000000\n#> \n#> , , 5\n#> \n#>          [,1]     [,2]\n#> [1,] 1.000000 0.356129\n#> [2,] 0.356129 1.000000\nforecast@mforecast$mu\n#> , , 1\n#> \n#>               [,1]         [,2]\n#> [1,] -0.0004392956 0.0006354141\n#> [2,] -0.0004392956 0.0006354141\n#> [3,] -0.0004392956 0.0006354141\n#> [4,] -0.0004392956 0.0006354141\n#> [5,] -0.0004392956 0.0006354141"},{"path":"nardl.html","id":"nardl","chapter":"9 NARDL","heading":"9 NARDL","text":"","code":"\n# install.packages(\"ardl.nardl\")\nlibrary(ardl.nardl)\n#> Warning: package 'ardl.nardl' was built under R version\n#> 4.2.3\n#> Registered S3 method overwritten by 'quantmod':\n#>   method            from\n#>   as.zoo.data.frame zoo\n# Data\ndatanardl <- read.csv(\"Data/Bab 9/datanardl.csv\")\nhead(datanardl)\n#>       date price.Vietnam price.China\n#> 1 1/1/2002           115    143.7978\n#> 2 2/1/2002           105    129.4568\n#> 3 3/1/2002           100    127.9081\n#> 4 4/1/2002           117    149.8740\n#> 5 5/1/2002           103    131.0987\n#> 6 6/1/2002           113    145.1878\n# Phillips-Perron Unit Root Test\nPP.test(datanardl$price.Vietnam)\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  datanardl$price.Vietnam\n#> Dickey-Fuller = -5.6063, Truncation lag parameter =\n#> 3, p-value = 0.01\nPP.test(datanardl$price.China)\n#> \n#>  Phillips-Perron Unit Root Test\n#> \n#> data:  datanardl$price.China\n#> Dickey-Fuller = -5.0955, Truncation lag parameter =\n#> 3, p-value = 0.01\n# Auto Selecet Model\nmodel1 <- gets_nardl_uecm(x =  datanardl,\n                          decomp = 'price.China',\n                          dep_var = 'price.Vietnam',\n                          p_order = c(5),\n                          q_order = c(5),\n                          graph_save = TRUE,\n                          case = 3,\n                          F_HC = TRUE)\n#> Percentage of positive changes in decomp is 56 percent while negative change is 44\n# Cointegratio Test\nmodel1$cointegration$Fstat\n#>                    observation k    fstat case lower.b\n#> 10% critical value          91 1 10.88198    3    4.04\n#> 5% critical value           91 1 10.88198    3    4.94\n#> 1% critical value           91 1 10.88198    3    6.84\n#>                    upper.b\n#> 10% critical value    4.78\n#> 5% critical value     5.73\n#> 1% critical value     7.84\n# NARDL Form\nsummary(model1$Parsimonious_NARDL_fit)\n#> \n#> Call:\n#> lm(formula = price.Vietnam ~ price.Vietnam_1 + price.Vietnam_3 + \n#>     price.Vietnam_4 + price.Vietnam_5 + price.China_pos + price.China_pos_1 + \n#>     price.China_pos_2 + price.China_pos_4 + price.China_pos_5 + \n#>     price.China_neg + price.China_neg_1 + price.China_neg_4 + \n#>     price.China_neg_5, na.action = na.exclude)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -16.3047  -4.4665  -0.3095   4.0691  21.2637 \n#> \n#> Coefficients:\n#>                   Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)       66.70011   14.83287   4.497 2.40e-05 ***\n#> price.Vietnam_1    0.52746    0.09462   5.575 3.52e-07 ***\n#> price.Vietnam_3    0.14052    0.10138   1.386  0.16974    \n#> price.Vietnam_4   -0.03782    0.10453  -0.362  0.71847    \n#> price.Vietnam_5   -0.14259    0.09817  -1.452  0.15043    \n#> price.China_pos    0.08230    0.18191   0.452  0.65223    \n#> price.China_pos_1 -0.28087    0.22492  -1.249  0.21553    \n#> price.China_pos_2  0.19196    0.17400   1.103  0.27338    \n#> price.China_pos_4 -0.26694    0.19885  -1.342  0.18341    \n#> price.China_pos_5  0.25245    0.16491   1.531  0.12991    \n#> price.China_neg    0.04123    0.15263   0.270  0.78778    \n#> price.China_neg_1  0.05460    0.17787   0.307  0.75969    \n#> price.China_neg_4 -0.50597    0.17240  -2.935  0.00440 ** \n#> price.China_neg_5  0.41552    0.15347   2.708  0.00835 ** \n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 7.061 on 77 degrees of freedom\n#> Multiple R-squared:  0.5657, Adjusted R-squared:  0.4923 \n#> F-statistic: 7.714 on 13 and 77 DF,  p-value: 1.571e-09\n# NARDL ECM Form\nsummary(model1$Parsimonious_ECM_fit)\n#> \n#> Call:\n#> lm(formula = D.price.Vietnam ~ price.Vietnam_1 + price.China_pos_1 + \n#>     price.China_neg_1 + D.price.Vietnam_2 + D.price.Vietnam_3 + \n#>     D.price.Vietnam_4 + D.price.China_neg_4, na.action = na.exclude)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -16.0510  -5.0380  -0.3461   3.9997  23.1158 \n#> \n#> Coefficients:\n#>                       Estimate Std. Error t value Pr(>|t|)\n#> (Intercept)         61.8968384 11.5905403   5.340 7.95e-07\n#> price.Vietnam_1     -0.5138343  0.0903867  -5.685 1.90e-07\n#> price.China_pos_1   -0.0192273  0.0771006  -0.249   0.8037\n#> price.China_neg_1    0.0003975  0.0741449   0.005   0.9957\n#> D.price.Vietnam_2    0.0790419  0.0929207   0.851   0.3974\n#> D.price.Vietnam_3    0.2409279  0.0963186   2.501   0.0143\n#> D.price.Vietnam_4    0.1413008  0.0922292   1.532   0.1293\n#> D.price.China_neg_4 -0.5632653  0.1217687  -4.626 1.36e-05\n#>                        \n#> (Intercept)         ***\n#> price.Vietnam_1     ***\n#> price.China_pos_1      \n#> price.China_neg_1      \n#> D.price.Vietnam_2      \n#> D.price.Vietnam_3   *  \n#> D.price.Vietnam_4      \n#> D.price.China_neg_4 ***\n#> ---\n#> Signif. codes:  \n#> 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 7.093 on 83 degrees of freedom\n#> Multiple R-squared:  0.4579, Adjusted R-squared:  0.4122 \n#> F-statistic: 10.01 on 7 and 83 DF,  p-value: 5.192e-09\n# Long Run Coefficients\nmodel1$Longrun_relation\n#>                        Estimate Std. Error      t value\n#> price.China_pos_1 -0.0374192226  0.1505206 -0.248598606\n#> price.China_neg_1  0.0007735328  0.1442840  0.005361181\n#>                    Pr(>|t|)\n#> price.China_pos_1 0.8042781\n#> price.China_neg_1 0.9957351\n# Long Run Asymetric Test\nmodel1$longrun_asym\n#>                Fstat       Pval\n#> price.China 5.031109 0.02756084\n# Short Run Asymetric Test\nmodel1$Shortrun_asym\n#>                Fstat         Pval\n#> price.China 21.39708 1.359712e-05"}]
